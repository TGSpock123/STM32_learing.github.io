ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"stm32h7xx_hal_rtc_ex.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.file 1 "Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c"
  19              		.section	.text.HAL_RTCEx_SetTimeStamp,"ax",%progbits
  20              		.align	1
  21              		.global	HAL_RTCEx_SetTimeStamp
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	HAL_RTCEx_SetTimeStamp:
  27              	.LFB144:
   1:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
   2:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   ******************************************************************************
   3:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @file    stm32h7xx_hal_rtc_ex.c
   4:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @author  MCD Application Team
   5:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief   Extended RTC HAL module driver.
   6:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *          functionalities of the Real Time Clock (RTC) Extended peripheral:
   8:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *           + RTC Time Stamp functions
   9:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *           + RTC Tamper functions
  10:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *           + RTC Wake-up functions
  11:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *           + Extended Control functions
  12:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *           + Extended RTC features functions
  13:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *
  14:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   ******************************************************************************
  15:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @attention
  16:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *
  17:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * Copyright (c) 2017 STMicroelectronics.
  18:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * All rights reserved.
  19:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *
  20:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * This software is licensed under terms that can be found in the LICENSE file
  21:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * in the root directory of this software component.
  22:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  23:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *
  24:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   ******************************************************************************
  25:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   @verbatim
  26:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   ==============================================================================
  27:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****                   ##### How to use this driver #####
  28:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   ==============================================================================
  29:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   [..]
  30:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     (+) Enable the RTC domain access.
  31:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     (+) Configure the RTC Prescaler (Asynchronous and Synchronous) and RTC hour
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 2


  32:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         format using the HAL_RTC_Init() function.
  33:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
  34:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *** RTC Wakeup configuration ***
  35:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   ================================
  36:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   [..]
  37:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     (+) To configure the RTC Wakeup Clock source and Counter use the HAL_RTCEx_SetWakeUpTimer()
  38:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         function. You can also configure the RTC Wakeup timer with interrupt mode
  39:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         using the HAL_RTCEx_SetWakeUpTimer_IT() function.
  40:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     (+) To read the RTC WakeUp Counter register, use the HAL_RTCEx_GetWakeUpTimer()
  41:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         function.
  42:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
  43:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *** Outputs configuration ***
  44:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   =============================
  45:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   [..]  The RTC has 2 different outputs:
  46:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     (+) RTC_ALARM: this output is used to manage the RTC Alarm A, Alarm B
  47:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         and WaKeUp signals.
  48:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         To output the selected RTC signal, use the HAL_RTC_Init() function.
  49:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     (+) RTC_CALIB: this output is 512Hz signal or 1Hz.
  50:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         To enable the RTC_CALIB, use the HAL_RTCEx_SetCalibrationOutPut() function.
  51:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     (+) Two pins can be used as RTC_ALARM or RTC_CALIB (PC13, PB2) managed on
  52:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         the RTC_OR register.
  53:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     (+) When the RTC_CALIB or RTC_ALARM output is selected, the RTC_OUT pin is
  54:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         automatically configured in output alternate function.
  55:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
  56:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *** Smooth digital Calibration configuration ***
  57:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   ================================================
  58:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   [..]
  59:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     (+) Configure the RTC Original Digital Calibration Value and the corresponding
  60:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         calibration cycle period (32s,16s and 8s) using the HAL_RTCEx_SetSmoothCalib()
  61:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         function.
  62:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
  63:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *** TimeStamp configuration ***
  64:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   ===============================
  65:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   [..]
  66:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     (+) Enable the RTC TimeStamp using the HAL_RTCEx_SetTimeStamp() function.
  67:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         You can also configure the RTC TimeStamp with interrupt mode using the
  68:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         HAL_RTCEx_SetTimeStamp_IT() function.
  69:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     (+) To read the RTC TimeStamp Time and Date register, use the HAL_RTCEx_GetTimeStamp()
  70:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         function.
  71:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
  72:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *** Internal TimeStamp configuration ***
  73:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   ===============================
  74:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   [..]
  75:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     (+) Enable the RTC internal TimeStamp using the HAL_RTCEx_SetInternalTimeStamp() function.
  76:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         User has to check internal timestamp occurrence using __HAL_RTC_INTERNAL_TIMESTAMP_GET_FLAG
  77:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     (+) To read the RTC TimeStamp Time and Date register, use the HAL_RTCEx_GetTimeStamp()
  78:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         function.
  79:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
  80:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *** Tamper configuration ***
  81:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   ============================
  82:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   [..]
  83:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     (+) Enable the RTC Tamper and configure the Tamper filter count, trigger Edge
  84:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         or Level according to the Tamper filter (if equal to 0 Edge else Level)
  85:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         value, sampling frequency, NoErase, MaskFlag,  precharge or discharge and
  86:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         Pull-UP using the HAL_RTCEx_SetTamper() function. You can configure RTC Tamper
  87:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         with interrupt mode using HAL_RTCEx_SetTamper_IT() function.
  88:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     (+) The default configuration of the Tamper erases the backup registers. To avoid
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 3


  89:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         erase, enable the NoErase field on the RTC_TAMPCR register.
  90:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
  91:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *** Backup Data Registers configuration ***
  92:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   ===========================================
  93:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   [..]
  94:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     (+) To write to the RTC Backup Data registers, use the HAL_RTCEx_BKUPWrite()
  95:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         function.
  96:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     (+) To read the RTC Backup Data registers, use the HAL_RTCEx_BKUPRead()
  97:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         function.
  98:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
  99:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****    @endverbatim
 100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
 101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /* Includes ------------------------------------------------------------------*/
 103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #include "stm32h7xx_hal.h"
 104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /** @addtogroup STM32H7xx_HAL_Driver
 106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @{
 107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
 108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /** @addtogroup RTCEx
 110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief RTC Extended HAL module driver
 111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @{
 112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
 113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #ifdef HAL_RTC_MODULE_ENABLED
 115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /* Private typedef -----------------------------------------------------------*/
 117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /* Private define ------------------------------------------------------------*/
 118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(TAMP)
 119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #define TAMP_ALL (TAMP_CR1_TAMP1E | TAMP_CR1_TAMP2E | TAMP_CR1_TAMP3E)
 120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* TAMP */
 121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /* Private macro -------------------------------------------------------------*/
 123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /* Private variables ---------------------------------------------------------*/
 124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /* Private function prototypes -----------------------------------------------*/
 125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /* Exported functions --------------------------------------------------------*/
 126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /** @addtogroup RTCEx_Exported_Functions
 128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @{
 129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
 130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /** @addtogroup RTCEx_Exported_Functions_Group1
 133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****  *  @brief   RTC TimeStamp and Tamper functions
 134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *
 135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** @verbatim
 136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****  ===============================================================================
 137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****                  ##### RTC TimeStamp and Tamper functions #####
 138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****  ===============================================================================
 139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****  [..] This section provides functions allowing to configure TimeStamp feature
 141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** @endverbatim
 143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @{
 144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
 145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 4


 146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
 147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Set TimeStamp.
 148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @note   This API must be called before enabling the TimeStamp feature.
 149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  TimeStampEdge Specifies the pin edge on which the TimeStamp is
 151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *         activated.
 152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values:
 153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *             @arg RTC_TIMESTAMPEDGE_RISING: the Time stamp event occurs on the
 154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *                                        rising edge of the related pin.
 155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *             @arg RTC_TIMESTAMPEDGE_FALLING: the Time stamp event occurs on the
 156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *                                         falling edge of the related pin.
 157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  RTC_TimeStampPin specifies the RTC TimeStamp Pin.
 158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values:
 159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *             @arg RTC_TIMESTAMPPIN_DEFAULT: PC13 is selected as RTC TimeStamp Pin.
 160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *               The RTC TimeStamp Pin is per default PC13, but for reasons of
 161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *               compatibility, this parameter is required.
 162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
 163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
 164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetTimeStamp(RTC_HandleTypeDef *hrtc, uint32_t TimeStampEdge, uint32_t 
 165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
  28              		.loc 1 165 1
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 24
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 80B4     		push	{r7}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 7, -4
  37 0002 87B0     		sub	sp, sp, #28
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 32
  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
  43 0006 F860     		str	r0, [r7, #12]
  44 0008 B960     		str	r1, [r7, #8]
  45 000a 7A60     		str	r2, [r7, #4]
 166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tmpreg;
 167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check the parameters */
 169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_TIMESTAMP_EDGE(TimeStampEdge));
 170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TIMESTAMP_PIN(RTC_TimeStampPin));
 171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning if no assert_param check */
 173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   UNUSED(RTC_TimeStampPin);
 174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Locked */
 176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
  46              		.loc 1 176 3
  47 000c FB68     		ldr	r3, [r7, #12]
  48 000e 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
  49 0012 012B     		cmp	r3, #1
  50 0014 01D1     		bne	.L2
  51              		.loc 1 176 3 is_stmt 0 discriminator 1
  52 0016 0223     		movs	r3, #2
  53              		.loc 1 176 3
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 5


  54 0018 32E0     		b	.L3
  55              	.L2:
  56              		.loc 1 176 3 discriminator 2
  57 001a FB68     		ldr	r3, [r7, #12]
  58 001c 0122     		movs	r2, #1
  59 001e 83F82020 		strb	r2, [r3, #32]
 177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
  60              		.loc 1 178 15 is_stmt 1
  61 0022 FB68     		ldr	r3, [r7, #12]
  62 0024 0222     		movs	r2, #2
  63 0026 83F82120 		strb	r2, [r3, #33]
 179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Get the RTC_CR register and clear the bits to be configured */
 181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmpreg = (uint32_t)(hrtc->Instance->CR & (uint32_t)~(RTC_CR_TSEDGE | RTC_CR_TSE));
  64              		.loc 1 181 27
  65 002a FB68     		ldr	r3, [r7, #12]
  66 002c 1B68     		ldr	r3, [r3]
  67              		.loc 1 181 37
  68 002e 9A68     		ldr	r2, [r3, #8]
  69              		.loc 1 181 10
  70 0030 164B     		ldr	r3, .L4
  71 0032 1340     		ands	r3, r3, r2
  72 0034 7B61     		str	r3, [r7, #20]
 182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmpreg |= TimeStampEdge;
  73              		.loc 1 183 10
  74 0036 7A69     		ldr	r2, [r7, #20]
  75 0038 BB68     		ldr	r3, [r7, #8]
  76 003a 1343     		orrs	r3, r3, r2
  77 003c 7B61     		str	r3, [r7, #20]
 184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
 186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
  78              		.loc 1 186 3
  79 003e FB68     		ldr	r3, [r7, #12]
  80 0040 1B68     		ldr	r3, [r3]
  81 0042 CA22     		movs	r2, #202
  82 0044 5A62     		str	r2, [r3, #36]
  83 0046 FB68     		ldr	r3, [r7, #12]
  84 0048 1B68     		ldr	r3, [r3]
  85 004a 5322     		movs	r2, #83
  86 004c 5A62     		str	r2, [r3, #36]
 187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure the Time Stamp TSEDGE and Enable bits */
 189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->Instance->CR = (uint32_t)tmpreg;
  87              		.loc 1 189 7
  88 004e FB68     		ldr	r3, [r7, #12]
  89 0050 1B68     		ldr	r3, [r3]
  90              		.loc 1 189 22
  91 0052 7A69     		ldr	r2, [r7, #20]
  92 0054 9A60     		str	r2, [r3, #8]
 190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_TIMESTAMP_ENABLE(hrtc);
  93              		.loc 1 191 3
  94 0056 FB68     		ldr	r3, [r7, #12]
  95 0058 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 6


  96 005a 9A68     		ldr	r2, [r3, #8]
  97 005c FB68     		ldr	r3, [r7, #12]
  98 005e 1B68     		ldr	r3, [r3]
  99 0060 42F40062 		orr	r2, r2, #2048
 100 0064 9A60     		str	r2, [r3, #8]
 192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
 194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 101              		.loc 1 194 3
 102 0066 FB68     		ldr	r3, [r7, #12]
 103 0068 1B68     		ldr	r3, [r3]
 104 006a FF22     		movs	r2, #255
 105 006c 5A62     		str	r2, [r3, #36]
 195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Change RTC state */
 197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 106              		.loc 1 197 15
 107 006e FB68     		ldr	r3, [r7, #12]
 108 0070 0122     		movs	r2, #1
 109 0072 83F82120 		strb	r2, [r3, #33]
 198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Unlocked */
 200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 110              		.loc 1 200 3
 111 0076 FB68     		ldr	r3, [r7, #12]
 112 0078 0022     		movs	r2, #0
 113 007a 83F82020 		strb	r2, [r3, #32]
 201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 114              		.loc 1 202 10
 115 007e 0023     		movs	r3, #0
 116              	.L3:
 203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 117              		.loc 1 203 1
 118 0080 1846     		mov	r0, r3
 119 0082 1C37     		adds	r7, r7, #28
 120              	.LCFI3:
 121              		.cfi_def_cfa_offset 4
 122 0084 BD46     		mov	sp, r7
 123              	.LCFI4:
 124              		.cfi_def_cfa_register 13
 125              		@ sp needed
 126 0086 5DF8047B 		ldr	r7, [sp], #4
 127              	.LCFI5:
 128              		.cfi_restore 7
 129              		.cfi_def_cfa_offset 0
 130 008a 7047     		bx	lr
 131              	.L5:
 132              		.align	2
 133              	.L4:
 134 008c F7F7FFFF 		.word	-2057
 135              		.cfi_endproc
 136              	.LFE144:
 138              		.section	.text.HAL_RTCEx_SetTimeStamp_IT,"ax",%progbits
 139              		.align	1
 140              		.global	HAL_RTCEx_SetTimeStamp_IT
 141              		.syntax unified
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 7


 142              		.thumb
 143              		.thumb_func
 145              	HAL_RTCEx_SetTimeStamp_IT:
 146              	.LFB145:
 204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
 206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Set TimeStamp with Interrupt.
 207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @note   This API must be called before enabling the TimeStamp feature.
 208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  TimeStampEdge Specifies the pin edge on which the TimeStamp is
 210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *         activated.
 211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values:
 212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *             @arg RTC_TIMESTAMPEDGE_RISING: the Time stamp event occurs on the
 213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *                                        rising edge of the related pin.
 214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *             @arg RTC_TIMESTAMPEDGE_FALLING: the Time stamp event occurs on the
 215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *                                         falling edge of the related pin.
 216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  RTC_TimeStampPin Specifies the RTC TimeStamp Pin.
 217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values:
 218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *             @arg RTC_TIMESTAMPPIN_DEFAULT: PC13 is selected as RTC TimeStamp Pin.
 219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *               The RTC TimeStamp Pin is per default PC13, but for reasons of
 220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *               compatibility, this parameter is required.
 221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
 222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
 223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetTimeStamp_IT(RTC_HandleTypeDef *hrtc, uint32_t TimeStampEdge, uint32
 224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 147              		.loc 1 224 1
 148              		.cfi_startproc
 149              		@ args = 0, pretend = 0, frame = 24
 150              		@ frame_needed = 1, uses_anonymous_args = 0
 151              		@ link register save eliminated.
 152 0000 80B4     		push	{r7}
 153              	.LCFI6:
 154              		.cfi_def_cfa_offset 4
 155              		.cfi_offset 7, -4
 156 0002 87B0     		sub	sp, sp, #28
 157              	.LCFI7:
 158              		.cfi_def_cfa_offset 32
 159 0004 00AF     		add	r7, sp, #0
 160              	.LCFI8:
 161              		.cfi_def_cfa_register 7
 162 0006 F860     		str	r0, [r7, #12]
 163 0008 B960     		str	r1, [r7, #8]
 164 000a 7A60     		str	r2, [r7, #4]
 225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tmpreg;
 226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check the parameters */
 228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_TIMESTAMP_EDGE(TimeStampEdge));
 229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TIMESTAMP_PIN(RTC_TimeStampPin));
 230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning if no assert_param check */
 232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   UNUSED(RTC_TimeStampPin);
 233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Locked */
 235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 165              		.loc 1 235 3
 166 000c FB68     		ldr	r3, [r7, #12]
 167 000e 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 8


 168 0012 012B     		cmp	r3, #1
 169 0014 01D1     		bne	.L7
 170              		.loc 1 235 3 is_stmt 0 discriminator 1
 171 0016 0223     		movs	r3, #2
 172              		.loc 1 235 3
 173 0018 48E0     		b	.L8
 174              	.L7:
 175              		.loc 1 235 3 discriminator 2
 176 001a FB68     		ldr	r3, [r7, #12]
 177 001c 0122     		movs	r2, #1
 178 001e 83F82020 		strb	r2, [r3, #32]
 236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 179              		.loc 1 237 15 is_stmt 1
 180 0022 FB68     		ldr	r3, [r7, #12]
 181 0024 0222     		movs	r2, #2
 182 0026 83F82120 		strb	r2, [r3, #33]
 238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Get the RTC_CR register and clear the bits to be configured */
 240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmpreg = (uint32_t)(hrtc->Instance->CR & (uint32_t)~(RTC_CR_TSEDGE | RTC_CR_TSE));
 183              		.loc 1 240 27
 184 002a FB68     		ldr	r3, [r7, #12]
 185 002c 1B68     		ldr	r3, [r3]
 186              		.loc 1 240 37
 187 002e 9A68     		ldr	r2, [r3, #8]
 188              		.loc 1 240 10
 189 0030 214B     		ldr	r3, .L9
 190 0032 1340     		ands	r3, r3, r2
 191 0034 7B61     		str	r3, [r7, #20]
 241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmpreg |= TimeStampEdge;
 192              		.loc 1 242 10
 193 0036 7A69     		ldr	r2, [r7, #20]
 194 0038 BB68     		ldr	r3, [r7, #8]
 195 003a 1343     		orrs	r3, r3, r2
 196 003c 7B61     		str	r3, [r7, #20]
 243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
 245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 197              		.loc 1 245 3
 198 003e FB68     		ldr	r3, [r7, #12]
 199 0040 1B68     		ldr	r3, [r3]
 200 0042 CA22     		movs	r2, #202
 201 0044 5A62     		str	r2, [r3, #36]
 202 0046 FB68     		ldr	r3, [r7, #12]
 203 0048 1B68     		ldr	r3, [r3]
 204 004a 5322     		movs	r2, #83
 205 004c 5A62     		str	r2, [r3, #36]
 246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure the Time Stamp TSEDGE and Enable bits */
 248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->Instance->CR = (uint32_t)tmpreg;
 206              		.loc 1 248 7
 207 004e FB68     		ldr	r3, [r7, #12]
 208 0050 1B68     		ldr	r3, [r3]
 209              		.loc 1 248 22
 210 0052 7A69     		ldr	r2, [r7, #20]
 211 0054 9A60     		str	r2, [r3, #8]
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 9


 249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_TIMESTAMP_ENABLE(hrtc);
 212              		.loc 1 250 3
 213 0056 FB68     		ldr	r3, [r7, #12]
 214 0058 1B68     		ldr	r3, [r3]
 215 005a 9A68     		ldr	r2, [r3, #8]
 216 005c FB68     		ldr	r3, [r7, #12]
 217 005e 1B68     		ldr	r3, [r3]
 218 0060 42F40062 		orr	r2, r2, #2048
 219 0064 9A60     		str	r2, [r3, #8]
 251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable IT timestamp */
 253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_TIMESTAMP_ENABLE_IT(hrtc, RTC_IT_TS);
 220              		.loc 1 253 3
 221 0066 FB68     		ldr	r3, [r7, #12]
 222 0068 1B68     		ldr	r3, [r3]
 223 006a 9A68     		ldr	r2, [r3, #8]
 224 006c FB68     		ldr	r3, [r7, #12]
 225 006e 1B68     		ldr	r3, [r3]
 226 0070 42F40042 		orr	r2, r2, #32768
 227 0074 9A60     		str	r2, [r3, #8]
 254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* RTC timestamp Interrupt Configuration: EXTI configuration */
 256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(DUAL_CORE)
 257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (HAL_GetCurrentCPUID() == CM7_CPUID)
 258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     __HAL_RTC_TAMPER_TIMESTAMP_EXTI_ENABLE_IT();
 260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   else
 262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     __HAL_RTC_TAMPER_TIMESTAMP_EXTID2_ENABLE_IT();
 264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #else /* SINGLE_CORE */
 266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_TIMESTAMP_EXTI_ENABLE_IT();
 228              		.loc 1 266 3
 229 0076 114B     		ldr	r3, .L9+4
 230 0078 1B68     		ldr	r3, [r3]
 231 007a 104A     		ldr	r2, .L9+4
 232 007c 43F48023 		orr	r3, r3, #262144
 233 0080 1360     		str	r3, [r2]
 267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* DUAL_CORE */
 268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_TIMESTAMP_EXTI_ENABLE_RISING_EDGE();
 234              		.loc 1 269 3
 235 0082 4FF0B043 		mov	r3, #1476395008
 236 0086 1B68     		ldr	r3, [r3]
 237 0088 4FF0B042 		mov	r2, #1476395008
 238 008c 43F48023 		orr	r3, r3, #262144
 239 0090 1360     		str	r3, [r2]
 270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
 272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 240              		.loc 1 272 3
 241 0092 FB68     		ldr	r3, [r7, #12]
 242 0094 1B68     		ldr	r3, [r3]
 243 0096 FF22     		movs	r2, #255
 244 0098 5A62     		str	r2, [r3, #36]
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 10


 273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 245              		.loc 1 274 15
 246 009a FB68     		ldr	r3, [r7, #12]
 247 009c 0122     		movs	r2, #1
 248 009e 83F82120 		strb	r2, [r3, #33]
 275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Unlocked */
 277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 249              		.loc 1 277 3
 250 00a2 FB68     		ldr	r3, [r7, #12]
 251 00a4 0022     		movs	r2, #0
 252 00a6 83F82020 		strb	r2, [r3, #32]
 278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 253              		.loc 1 279 10
 254 00aa 0023     		movs	r3, #0
 255              	.L8:
 280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 256              		.loc 1 280 1
 257 00ac 1846     		mov	r0, r3
 258 00ae 1C37     		adds	r7, r7, #28
 259              	.LCFI9:
 260              		.cfi_def_cfa_offset 4
 261 00b0 BD46     		mov	sp, r7
 262              	.LCFI10:
 263              		.cfi_def_cfa_register 13
 264              		@ sp needed
 265 00b2 5DF8047B 		ldr	r7, [sp], #4
 266              	.LCFI11:
 267              		.cfi_restore 7
 268              		.cfi_def_cfa_offset 0
 269 00b6 7047     		bx	lr
 270              	.L10:
 271              		.align	2
 272              	.L9:
 273 00b8 F7F7FFFF 		.word	-2057
 274 00bc 80000058 		.word	1476395136
 275              		.cfi_endproc
 276              	.LFE145:
 278              		.section	.text.HAL_RTCEx_DeactivateTimeStamp,"ax",%progbits
 279              		.align	1
 280              		.global	HAL_RTCEx_DeactivateTimeStamp
 281              		.syntax unified
 282              		.thumb
 283              		.thumb_func
 285              	HAL_RTCEx_DeactivateTimeStamp:
 286              	.LFB146:
 281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
 283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Deactivate TimeStamp.
 284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
 286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
 287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_DeactivateTimeStamp(RTC_HandleTypeDef *hrtc)
 288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 287              		.loc 1 288 1
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 11


 288              		.cfi_startproc
 289              		@ args = 0, pretend = 0, frame = 16
 290              		@ frame_needed = 1, uses_anonymous_args = 0
 291              		@ link register save eliminated.
 292 0000 80B4     		push	{r7}
 293              	.LCFI12:
 294              		.cfi_def_cfa_offset 4
 295              		.cfi_offset 7, -4
 296 0002 85B0     		sub	sp, sp, #20
 297              	.LCFI13:
 298              		.cfi_def_cfa_offset 24
 299 0004 00AF     		add	r7, sp, #0
 300              	.LCFI14:
 301              		.cfi_def_cfa_register 7
 302 0006 7860     		str	r0, [r7, #4]
 289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tmpreg;
 290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Locked */
 292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 303              		.loc 1 292 3
 304 0008 7B68     		ldr	r3, [r7, #4]
 305 000a 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 306 000e 012B     		cmp	r3, #1
 307 0010 01D1     		bne	.L12
 308              		.loc 1 292 3 is_stmt 0 discriminator 1
 309 0012 0223     		movs	r3, #2
 310              		.loc 1 292 3
 311 0014 2EE0     		b	.L13
 312              	.L12:
 313              		.loc 1 292 3 discriminator 2
 314 0016 7B68     		ldr	r3, [r7, #4]
 315 0018 0122     		movs	r2, #1
 316 001a 83F82020 		strb	r2, [r3, #32]
 293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 317              		.loc 1 294 15 is_stmt 1
 318 001e 7B68     		ldr	r3, [r7, #4]
 319 0020 0222     		movs	r2, #2
 320 0022 83F82120 		strb	r2, [r3, #33]
 295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
 297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 321              		.loc 1 297 3
 322 0026 7B68     		ldr	r3, [r7, #4]
 323 0028 1B68     		ldr	r3, [r3]
 324 002a CA22     		movs	r2, #202
 325 002c 5A62     		str	r2, [r3, #36]
 326 002e 7B68     		ldr	r3, [r7, #4]
 327 0030 1B68     		ldr	r3, [r3]
 328 0032 5322     		movs	r2, #83
 329 0034 5A62     		str	r2, [r3, #36]
 298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* In case of interrupt mode is used, the interrupt source must disabled */
 300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_TIMESTAMP_DISABLE_IT(hrtc, RTC_IT_TS);
 330              		.loc 1 300 3
 331 0036 7B68     		ldr	r3, [r7, #4]
 332 0038 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 12


 333 003a 9A68     		ldr	r2, [r3, #8]
 334 003c 7B68     		ldr	r3, [r7, #4]
 335 003e 1B68     		ldr	r3, [r3]
 336 0040 22F40042 		bic	r2, r2, #32768
 337 0044 9A60     		str	r2, [r3, #8]
 301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Get the RTC_CR register and clear the bits to be configured */
 303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmpreg = (uint32_t)(hrtc->Instance->CR & (uint32_t)~(RTC_CR_TSEDGE | RTC_CR_TSE));
 338              		.loc 1 303 27
 339 0046 7B68     		ldr	r3, [r7, #4]
 340 0048 1B68     		ldr	r3, [r3]
 341              		.loc 1 303 37
 342 004a 9A68     		ldr	r2, [r3, #8]
 343              		.loc 1 303 10
 344 004c 0C4B     		ldr	r3, .L14
 345 004e 1340     		ands	r3, r3, r2
 346 0050 FB60     		str	r3, [r7, #12]
 304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure the Time Stamp TSEDGE and Enable bits */
 306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->Instance->CR = (uint32_t)tmpreg;
 347              		.loc 1 306 7
 348 0052 7B68     		ldr	r3, [r7, #4]
 349 0054 1B68     		ldr	r3, [r3]
 350              		.loc 1 306 22
 351 0056 FA68     		ldr	r2, [r7, #12]
 352 0058 9A60     		str	r2, [r3, #8]
 307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
 309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 353              		.loc 1 309 3
 354 005a 7B68     		ldr	r3, [r7, #4]
 355 005c 1B68     		ldr	r3, [r3]
 356 005e FF22     		movs	r2, #255
 357 0060 5A62     		str	r2, [r3, #36]
 310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 358              		.loc 1 311 15
 359 0062 7B68     		ldr	r3, [r7, #4]
 360 0064 0122     		movs	r2, #1
 361 0066 83F82120 		strb	r2, [r3, #33]
 312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Unlocked */
 314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 362              		.loc 1 314 3
 363 006a 7B68     		ldr	r3, [r7, #4]
 364 006c 0022     		movs	r2, #0
 365 006e 83F82020 		strb	r2, [r3, #32]
 315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 366              		.loc 1 316 10
 367 0072 0023     		movs	r3, #0
 368              	.L13:
 317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 369              		.loc 1 317 1
 370 0074 1846     		mov	r0, r3
 371 0076 1437     		adds	r7, r7, #20
 372              	.LCFI15:
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 13


 373              		.cfi_def_cfa_offset 4
 374 0078 BD46     		mov	sp, r7
 375              	.LCFI16:
 376              		.cfi_def_cfa_register 13
 377              		@ sp needed
 378 007a 5DF8047B 		ldr	r7, [sp], #4
 379              	.LCFI17:
 380              		.cfi_restore 7
 381              		.cfi_def_cfa_offset 0
 382 007e 7047     		bx	lr
 383              	.L15:
 384              		.align	2
 385              	.L14:
 386 0080 F7F7FFFF 		.word	-2057
 387              		.cfi_endproc
 388              	.LFE146:
 390              		.section	.text.HAL_RTCEx_SetInternalTimeStamp,"ax",%progbits
 391              		.align	1
 392              		.global	HAL_RTCEx_SetInternalTimeStamp
 393              		.syntax unified
 394              		.thumb
 395              		.thumb_func
 397              	HAL_RTCEx_SetInternalTimeStamp:
 398              	.LFB147:
 318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
 320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Set Internal TimeStamp.
 321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @note   This API must be called before enabling the internal TimeStamp feature.
 322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
 324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
 325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetInternalTimeStamp(RTC_HandleTypeDef *hrtc)
 326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 399              		.loc 1 326 1
 400              		.cfi_startproc
 401              		@ args = 0, pretend = 0, frame = 8
 402              		@ frame_needed = 1, uses_anonymous_args = 0
 403              		@ link register save eliminated.
 404 0000 80B4     		push	{r7}
 405              	.LCFI18:
 406              		.cfi_def_cfa_offset 4
 407              		.cfi_offset 7, -4
 408 0002 83B0     		sub	sp, sp, #12
 409              	.LCFI19:
 410              		.cfi_def_cfa_offset 16
 411 0004 00AF     		add	r7, sp, #0
 412              	.LCFI20:
 413              		.cfi_def_cfa_register 7
 414 0006 7860     		str	r0, [r7, #4]
 327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Locked */
 328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 415              		.loc 1 328 3
 416 0008 7B68     		ldr	r3, [r7, #4]
 417 000a 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 418 000e 012B     		cmp	r3, #1
 419 0010 01D1     		bne	.L17
 420              		.loc 1 328 3 is_stmt 0 discriminator 1
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 14


 421 0012 0223     		movs	r3, #2
 422              		.loc 1 328 3
 423 0014 24E0     		b	.L18
 424              	.L17:
 425              		.loc 1 328 3 discriminator 2
 426 0016 7B68     		ldr	r3, [r7, #4]
 427 0018 0122     		movs	r2, #1
 428 001a 83F82020 		strb	r2, [r3, #32]
 329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 429              		.loc 1 330 15 is_stmt 1
 430 001e 7B68     		ldr	r3, [r7, #4]
 431 0020 0222     		movs	r2, #2
 432 0022 83F82120 		strb	r2, [r3, #33]
 331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
 333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 433              		.loc 1 333 3
 434 0026 7B68     		ldr	r3, [r7, #4]
 435 0028 1B68     		ldr	r3, [r3]
 436 002a CA22     		movs	r2, #202
 437 002c 5A62     		str	r2, [r3, #36]
 438 002e 7B68     		ldr	r3, [r7, #4]
 439 0030 1B68     		ldr	r3, [r3]
 440 0032 5322     		movs	r2, #83
 441 0034 5A62     		str	r2, [r3, #36]
 334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure the internal Time Stamp Enable bits */
 336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_INTERNAL_TIMESTAMP_ENABLE(hrtc);
 442              		.loc 1 336 3
 443 0036 7B68     		ldr	r3, [r7, #4]
 444 0038 1B68     		ldr	r3, [r3]
 445 003a 9A68     		ldr	r2, [r3, #8]
 446 003c 7B68     		ldr	r3, [r7, #4]
 447 003e 1B68     		ldr	r3, [r3]
 448 0040 42F08072 		orr	r2, r2, #16777216
 449 0044 9A60     		str	r2, [r3, #8]
 337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
 339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 450              		.loc 1 339 3
 451 0046 7B68     		ldr	r3, [r7, #4]
 452 0048 1B68     		ldr	r3, [r3]
 453 004a FF22     		movs	r2, #255
 454 004c 5A62     		str	r2, [r3, #36]
 340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Change RTC state */
 342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 455              		.loc 1 342 15
 456 004e 7B68     		ldr	r3, [r7, #4]
 457 0050 0122     		movs	r2, #1
 458 0052 83F82120 		strb	r2, [r3, #33]
 343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Unlocked */
 345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 459              		.loc 1 345 3
 460 0056 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 15


 461 0058 0022     		movs	r2, #0
 462 005a 83F82020 		strb	r2, [r3, #32]
 346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 463              		.loc 1 347 10
 464 005e 0023     		movs	r3, #0
 465              	.L18:
 348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 466              		.loc 1 348 1
 467 0060 1846     		mov	r0, r3
 468 0062 0C37     		adds	r7, r7, #12
 469              	.LCFI21:
 470              		.cfi_def_cfa_offset 4
 471 0064 BD46     		mov	sp, r7
 472              	.LCFI22:
 473              		.cfi_def_cfa_register 13
 474              		@ sp needed
 475 0066 5DF8047B 		ldr	r7, [sp], #4
 476              	.LCFI23:
 477              		.cfi_restore 7
 478              		.cfi_def_cfa_offset 0
 479 006a 7047     		bx	lr
 480              		.cfi_endproc
 481              	.LFE147:
 483              		.section	.text.HAL_RTCEx_DeactivateInternalTimeStamp,"ax",%progbits
 484              		.align	1
 485              		.global	HAL_RTCEx_DeactivateInternalTimeStamp
 486              		.syntax unified
 487              		.thumb
 488              		.thumb_func
 490              	HAL_RTCEx_DeactivateInternalTimeStamp:
 491              	.LFB148:
 349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
 351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Deactivate Internal TimeStamp.
 352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
 354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
 355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_DeactivateInternalTimeStamp(RTC_HandleTypeDef *hrtc)
 356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 492              		.loc 1 356 1
 493              		.cfi_startproc
 494              		@ args = 0, pretend = 0, frame = 8
 495              		@ frame_needed = 1, uses_anonymous_args = 0
 496              		@ link register save eliminated.
 497 0000 80B4     		push	{r7}
 498              	.LCFI24:
 499              		.cfi_def_cfa_offset 4
 500              		.cfi_offset 7, -4
 501 0002 83B0     		sub	sp, sp, #12
 502              	.LCFI25:
 503              		.cfi_def_cfa_offset 16
 504 0004 00AF     		add	r7, sp, #0
 505              	.LCFI26:
 506              		.cfi_def_cfa_register 7
 507 0006 7860     		str	r0, [r7, #4]
 357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Locked */
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 16


 358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 508              		.loc 1 358 3
 509 0008 7B68     		ldr	r3, [r7, #4]
 510 000a 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 511 000e 012B     		cmp	r3, #1
 512 0010 01D1     		bne	.L20
 513              		.loc 1 358 3 is_stmt 0 discriminator 1
 514 0012 0223     		movs	r3, #2
 515              		.loc 1 358 3
 516 0014 24E0     		b	.L21
 517              	.L20:
 518              		.loc 1 358 3 discriminator 2
 519 0016 7B68     		ldr	r3, [r7, #4]
 520 0018 0122     		movs	r2, #1
 521 001a 83F82020 		strb	r2, [r3, #32]
 359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 522              		.loc 1 360 15 is_stmt 1
 523 001e 7B68     		ldr	r3, [r7, #4]
 524 0020 0222     		movs	r2, #2
 525 0022 83F82120 		strb	r2, [r3, #33]
 361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
 363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 526              		.loc 1 363 3
 527 0026 7B68     		ldr	r3, [r7, #4]
 528 0028 1B68     		ldr	r3, [r3]
 529 002a CA22     		movs	r2, #202
 530 002c 5A62     		str	r2, [r3, #36]
 531 002e 7B68     		ldr	r3, [r7, #4]
 532 0030 1B68     		ldr	r3, [r3]
 533 0032 5322     		movs	r2, #83
 534 0034 5A62     		str	r2, [r3, #36]
 364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure the internal Time Stamp Enable bits */
 366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_INTERNAL_TIMESTAMP_DISABLE(hrtc);
 535              		.loc 1 366 3
 536 0036 7B68     		ldr	r3, [r7, #4]
 537 0038 1B68     		ldr	r3, [r3]
 538 003a 9A68     		ldr	r2, [r3, #8]
 539 003c 7B68     		ldr	r3, [r7, #4]
 540 003e 1B68     		ldr	r3, [r3]
 541 0040 22F08072 		bic	r2, r2, #16777216
 542 0044 9A60     		str	r2, [r3, #8]
 367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
 369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 543              		.loc 1 369 3
 544 0046 7B68     		ldr	r3, [r7, #4]
 545 0048 1B68     		ldr	r3, [r3]
 546 004a FF22     		movs	r2, #255
 547 004c 5A62     		str	r2, [r3, #36]
 370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 548              		.loc 1 371 15
 549 004e 7B68     		ldr	r3, [r7, #4]
 550 0050 0122     		movs	r2, #1
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 17


 551 0052 83F82120 		strb	r2, [r3, #33]
 372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Unlocked */
 374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 552              		.loc 1 374 3
 553 0056 7B68     		ldr	r3, [r7, #4]
 554 0058 0022     		movs	r2, #0
 555 005a 83F82020 		strb	r2, [r3, #32]
 375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 556              		.loc 1 376 10
 557 005e 0023     		movs	r3, #0
 558              	.L21:
 377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 559              		.loc 1 377 1
 560 0060 1846     		mov	r0, r3
 561 0062 0C37     		adds	r7, r7, #12
 562              	.LCFI27:
 563              		.cfi_def_cfa_offset 4
 564 0064 BD46     		mov	sp, r7
 565              	.LCFI28:
 566              		.cfi_def_cfa_register 13
 567              		@ sp needed
 568 0066 5DF8047B 		ldr	r7, [sp], #4
 569              	.LCFI29:
 570              		.cfi_restore 7
 571              		.cfi_def_cfa_offset 0
 572 006a 7047     		bx	lr
 573              		.cfi_endproc
 574              	.LFE148:
 576              		.section	.text.HAL_RTCEx_GetTimeStamp,"ax",%progbits
 577              		.align	1
 578              		.global	HAL_RTCEx_GetTimeStamp
 579              		.syntax unified
 580              		.thumb
 581              		.thumb_func
 583              	HAL_RTCEx_GetTimeStamp:
 584              	.LFB149:
 378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
 380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Get the RTC TimeStamp value.
 381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  sTimeStamp Pointer to Time structure
 383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  sTimeStampDate Pointer to Date structure
 384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  Format specifies the format of the entered parameters.
 385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values:
 386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *             @arg RTC_FORMAT_BIN: Binary data format
 387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *             @arg RTC_FORMAT_BCD: BCD data format
 388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
 389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
 390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_GetTimeStamp(RTC_HandleTypeDef *hrtc, RTC_TimeTypeDef *sTimeStamp, RTC_
 391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 585              		.loc 1 391 1
 586              		.cfi_startproc
 587              		@ args = 0, pretend = 0, frame = 24
 588              		@ frame_needed = 1, uses_anonymous_args = 0
 589 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 18


 590              	.LCFI30:
 591              		.cfi_def_cfa_offset 8
 592              		.cfi_offset 7, -8
 593              		.cfi_offset 14, -4
 594 0002 86B0     		sub	sp, sp, #24
 595              	.LCFI31:
 596              		.cfi_def_cfa_offset 32
 597 0004 00AF     		add	r7, sp, #0
 598              	.LCFI32:
 599              		.cfi_def_cfa_register 7
 600 0006 F860     		str	r0, [r7, #12]
 601 0008 B960     		str	r1, [r7, #8]
 602 000a 7A60     		str	r2, [r7, #4]
 603 000c 3B60     		str	r3, [r7]
 392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tmptime;
 393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tmpdate;
 394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check the parameters */
 396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_FORMAT(Format));
 397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Get the TimeStamp time and date registers values */
 399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmptime = (uint32_t)(hrtc->Instance->TSTR & RTC_TR_RESERVED_MASK);
 604              		.loc 1 399 28
 605 000e FB68     		ldr	r3, [r7, #12]
 606 0010 1B68     		ldr	r3, [r3]
 607              		.loc 1 399 38
 608 0012 1A6B     		ldr	r2, [r3, #48]
 609              		.loc 1 399 11
 610 0014 4B4B     		ldr	r3, .L25
 611 0016 1340     		ands	r3, r3, r2
 612 0018 7B61     		str	r3, [r7, #20]
 400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmpdate = (uint32_t)(hrtc->Instance->TSDR & RTC_DR_RESERVED_MASK);
 613              		.loc 1 400 28
 614 001a FB68     		ldr	r3, [r7, #12]
 615 001c 1B68     		ldr	r3, [r3]
 616              		.loc 1 400 38
 617 001e 5A6B     		ldr	r2, [r3, #52]
 618              		.loc 1 400 11
 619 0020 494B     		ldr	r3, .L25+4
 620 0022 1340     		ands	r3, r3, r2
 621 0024 3B61     		str	r3, [r7, #16]
 401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Fill the Time structure fields with the read parameters */
 403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   sTimeStamp->Hours      = (uint8_t)((tmptime & (RTC_TSTR_HT  | RTC_TSTR_HU))  >> RTC_TSTR_HU_Pos);
 622              		.loc 1 403 80
 623 0026 7B69     		ldr	r3, [r7, #20]
 624 0028 1B0C     		lsrs	r3, r3, #16
 625              		.loc 1 403 28
 626 002a DBB2     		uxtb	r3, r3
 627 002c 03F03F03 		and	r3, r3, #63
 628 0030 DAB2     		uxtb	r2, r3
 629              		.loc 1 403 26
 630 0032 BB68     		ldr	r3, [r7, #8]
 631 0034 1A70     		strb	r2, [r3]
 404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   sTimeStamp->Minutes    = (uint8_t)((tmptime & (RTC_TSTR_MNT | RTC_TSTR_MNU)) >> RTC_TSTR_MNU_Pos)
 632              		.loc 1 404 80
 633 0036 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 19


 634 0038 1B0A     		lsrs	r3, r3, #8
 635              		.loc 1 404 28
 636 003a DBB2     		uxtb	r3, r3
 637 003c 03F07F03 		and	r3, r3, #127
 638 0040 DAB2     		uxtb	r2, r3
 639              		.loc 1 404 26
 640 0042 BB68     		ldr	r3, [r7, #8]
 641 0044 5A70     		strb	r2, [r3, #1]
 405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   sTimeStamp->Seconds    = (uint8_t)((tmptime & (RTC_TSTR_ST  | RTC_TSTR_SU))  >> RTC_TSTR_SU_Pos);
 642              		.loc 1 405 28
 643 0046 7B69     		ldr	r3, [r7, #20]
 644 0048 DBB2     		uxtb	r3, r3
 645 004a 03F07F03 		and	r3, r3, #127
 646 004e DAB2     		uxtb	r2, r3
 647              		.loc 1 405 26
 648 0050 BB68     		ldr	r3, [r7, #8]
 649 0052 9A70     		strb	r2, [r3, #2]
 406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   sTimeStamp->TimeFormat = (uint8_t)((tmptime & (RTC_TSTR_PM))                 >> RTC_TSTR_PM_Pos);
 650              		.loc 1 406 80
 651 0054 7B69     		ldr	r3, [r7, #20]
 652 0056 9B0D     		lsrs	r3, r3, #22
 653              		.loc 1 406 28
 654 0058 DBB2     		uxtb	r3, r3
 655 005a 03F00103 		and	r3, r3, #1
 656 005e DAB2     		uxtb	r2, r3
 657              		.loc 1 406 26
 658 0060 BB68     		ldr	r3, [r7, #8]
 659 0062 DA70     		strb	r2, [r3, #3]
 407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   sTimeStamp->SubSeconds = (uint32_t) hrtc->Instance->TSSSR;
 660              		.loc 1 407 43
 661 0064 FB68     		ldr	r3, [r7, #12]
 662 0066 1B68     		ldr	r3, [r3]
 663              		.loc 1 407 53
 664 0068 9A6B     		ldr	r2, [r3, #56]
 665              		.loc 1 407 26
 666 006a BB68     		ldr	r3, [r7, #8]
 667 006c 5A60     		str	r2, [r3, #4]
 408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Fill the Date structure fields with the read parameters */
 410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   sTimeStampDate->Year    = 0U;
 668              		.loc 1 410 27
 669 006e 7B68     		ldr	r3, [r7, #4]
 670 0070 0022     		movs	r2, #0
 671 0072 DA70     		strb	r2, [r3, #3]
 411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   sTimeStampDate->Month   = (uint8_t)((tmpdate & (RTC_TSDR_MT | RTC_TSDR_MU)) >> RTC_TSDR_MU_Pos);
 672              		.loc 1 411 79
 673 0074 3B69     		ldr	r3, [r7, #16]
 674 0076 1B0A     		lsrs	r3, r3, #8
 675              		.loc 1 411 29
 676 0078 DBB2     		uxtb	r3, r3
 677 007a 03F01F03 		and	r3, r3, #31
 678 007e DAB2     		uxtb	r2, r3
 679              		.loc 1 411 27
 680 0080 7B68     		ldr	r3, [r7, #4]
 681 0082 5A70     		strb	r2, [r3, #1]
 412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   sTimeStampDate->Date    = (uint8_t)((tmpdate & (RTC_TSDR_DT | RTC_TSDR_DU)) >> RTC_TSDR_DU_Pos);
 682              		.loc 1 412 29
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 20


 683 0084 3B69     		ldr	r3, [r7, #16]
 684 0086 DBB2     		uxtb	r3, r3
 685 0088 03F03F03 		and	r3, r3, #63
 686 008c DAB2     		uxtb	r2, r3
 687              		.loc 1 412 27
 688 008e 7B68     		ldr	r3, [r7, #4]
 689 0090 9A70     		strb	r2, [r3, #2]
 413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   sTimeStampDate->WeekDay = (uint8_t)((tmpdate & (RTC_TSDR_WDU))              >> RTC_TSDR_WDU_Pos);
 690              		.loc 1 413 79
 691 0092 3B69     		ldr	r3, [r7, #16]
 692 0094 5B0B     		lsrs	r3, r3, #13
 693              		.loc 1 413 29
 694 0096 DBB2     		uxtb	r3, r3
 695 0098 03F00703 		and	r3, r3, #7
 696 009c DAB2     		uxtb	r2, r3
 697              		.loc 1 413 27
 698 009e 7B68     		ldr	r3, [r7, #4]
 699 00a0 1A70     		strb	r2, [r3]
 414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check the input parameters format */
 416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (Format == RTC_FORMAT_BIN)
 700              		.loc 1 416 6
 701 00a2 3B68     		ldr	r3, [r7]
 702 00a4 002B     		cmp	r3, #0
 703 00a6 35D1     		bne	.L23
 417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Convert the TimeStamp structure parameters to Binary format */
 419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     sTimeStamp->Hours   = (uint8_t)RTC_Bcd2ToByte(sTimeStamp->Hours);
 704              		.loc 1 419 36
 705 00a8 BB68     		ldr	r3, [r7, #8]
 706 00aa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 707 00ac 1846     		mov	r0, r3
 708 00ae FFF7FEFF 		bl	RTC_Bcd2ToByte
 709 00b2 0346     		mov	r3, r0
 710 00b4 1A46     		mov	r2, r3
 711              		.loc 1 419 25 discriminator 1
 712 00b6 BB68     		ldr	r3, [r7, #8]
 713 00b8 1A70     		strb	r2, [r3]
 420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     sTimeStamp->Minutes = (uint8_t)RTC_Bcd2ToByte(sTimeStamp->Minutes);
 714              		.loc 1 420 36
 715 00ba BB68     		ldr	r3, [r7, #8]
 716 00bc 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 717 00be 1846     		mov	r0, r3
 718 00c0 FFF7FEFF 		bl	RTC_Bcd2ToByte
 719 00c4 0346     		mov	r3, r0
 720 00c6 1A46     		mov	r2, r3
 721              		.loc 1 420 25 discriminator 1
 722 00c8 BB68     		ldr	r3, [r7, #8]
 723 00ca 5A70     		strb	r2, [r3, #1]
 421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     sTimeStamp->Seconds = (uint8_t)RTC_Bcd2ToByte(sTimeStamp->Seconds);
 724              		.loc 1 421 36
 725 00cc BB68     		ldr	r3, [r7, #8]
 726 00ce 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 727 00d0 1846     		mov	r0, r3
 728 00d2 FFF7FEFF 		bl	RTC_Bcd2ToByte
 729 00d6 0346     		mov	r3, r0
 730 00d8 1A46     		mov	r2, r3
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 21


 731              		.loc 1 421 25 discriminator 1
 732 00da BB68     		ldr	r3, [r7, #8]
 733 00dc 9A70     		strb	r2, [r3, #2]
 422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Convert the DateTimeStamp structure parameters to Binary format */
 424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     sTimeStampDate->Month   = (uint8_t)RTC_Bcd2ToByte(sTimeStampDate->Month);
 734              		.loc 1 424 40
 735 00de 7B68     		ldr	r3, [r7, #4]
 736 00e0 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 737 00e2 1846     		mov	r0, r3
 738 00e4 FFF7FEFF 		bl	RTC_Bcd2ToByte
 739 00e8 0346     		mov	r3, r0
 740 00ea 1A46     		mov	r2, r3
 741              		.loc 1 424 29 discriminator 1
 742 00ec 7B68     		ldr	r3, [r7, #4]
 743 00ee 5A70     		strb	r2, [r3, #1]
 425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     sTimeStampDate->Date    = (uint8_t)RTC_Bcd2ToByte(sTimeStampDate->Date);
 744              		.loc 1 425 40
 745 00f0 7B68     		ldr	r3, [r7, #4]
 746 00f2 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 747 00f4 1846     		mov	r0, r3
 748 00f6 FFF7FEFF 		bl	RTC_Bcd2ToByte
 749 00fa 0346     		mov	r3, r0
 750 00fc 1A46     		mov	r2, r3
 751              		.loc 1 425 29 discriminator 1
 752 00fe 7B68     		ldr	r3, [r7, #4]
 753 0100 9A70     		strb	r2, [r3, #2]
 426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     sTimeStampDate->WeekDay = (uint8_t)RTC_Bcd2ToByte(sTimeStampDate->WeekDay);
 754              		.loc 1 426 40
 755 0102 7B68     		ldr	r3, [r7, #4]
 756 0104 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 757 0106 1846     		mov	r0, r3
 758 0108 FFF7FEFF 		bl	RTC_Bcd2ToByte
 759 010c 0346     		mov	r3, r0
 760 010e 1A46     		mov	r2, r3
 761              		.loc 1 426 29 discriminator 1
 762 0110 7B68     		ldr	r3, [r7, #4]
 763 0112 1A70     		strb	r2, [r3]
 764              	.L23:
 427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clear the TIMESTAMP Flags */
 430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_INTERNAL_TIMESTAMP_CLEAR_FLAG(hrtc, RTC_FLAG_ITSF);
 765              		.loc 1 430 3
 766 0114 FB68     		ldr	r3, [r7, #12]
 767 0116 1B68     		ldr	r3, [r3]
 768 0118 DB68     		ldr	r3, [r3, #12]
 769 011a D9B2     		uxtb	r1, r3
 770 011c FB68     		ldr	r3, [r7, #12]
 771 011e 1A68     		ldr	r2, [r3]
 772 0120 0A4B     		ldr	r3, .L25+8
 773 0122 0B43     		orrs	r3, r3, r1
 774 0124 D360     		str	r3, [r2, #12]
 431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_TIMESTAMP_CLEAR_FLAG(hrtc, RTC_FLAG_TSF);
 775              		.loc 1 431 3
 776 0126 FB68     		ldr	r3, [r7, #12]
 777 0128 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 22


 778 012a DB68     		ldr	r3, [r3, #12]
 779 012c DAB2     		uxtb	r2, r3
 780 012e FB68     		ldr	r3, [r7, #12]
 781 0130 1B68     		ldr	r3, [r3]
 782 0132 62F40862 		orn	r2, r2, #2176
 783 0136 DA60     		str	r2, [r3, #12]
 432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 784              		.loc 1 433 10
 785 0138 0023     		movs	r3, #0
 434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 786              		.loc 1 434 1
 787 013a 1846     		mov	r0, r3
 788 013c 1837     		adds	r7, r7, #24
 789              	.LCFI33:
 790              		.cfi_def_cfa_offset 8
 791 013e BD46     		mov	sp, r7
 792              	.LCFI34:
 793              		.cfi_def_cfa_register 13
 794              		@ sp needed
 795 0140 80BD     		pop	{r7, pc}
 796              	.L26:
 797 0142 00BF     		.align	2
 798              	.L25:
 799 0144 7F7F7F00 		.word	8355711
 800 0148 3FFFFF00 		.word	16777023
 801 014c 7FFFFDFF 		.word	-131201
 802              		.cfi_endproc
 803              	.LFE149:
 805              		.section	.text.HAL_RTCEx_SetTamper,"ax",%progbits
 806              		.align	1
 807              		.global	HAL_RTCEx_SetTamper
 808              		.syntax unified
 809              		.thumb
 810              		.thumb_func
 812              	HAL_RTCEx_SetTamper:
 813              	.LFB150:
 435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
 437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @}
 438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
 439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /** @addtogroup RTCEx_Exported_Functions_Group5
 441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief      Extended RTC Tamper functions
 442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *
 443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** @verbatim
 444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****  ==============================================================================
 445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****                         ##### Tamper functions #####
 446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****  ==============================================================================
 447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****  [..]
 448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   (+) Before calling any tamper or internal tamper function, you have to call first
 449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       HAL_RTC_Init() function.
 450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   (+) In that ine you can select to output tamper event on RTC pin.
 451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****  [..]
 452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   (+) Enable the Tamper and configure the Tamper filter count, trigger Edge
 453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       or Level according to the Tamper filter (if equal to 0 Edge else Level)
 454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       value, sampling frequency, NoErase, MaskFlag, precharge or discharge and
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 23


 455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       Pull-UP, timestamp using the HAL_RTCEx_SetTamper() function.
 456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       You can configure Tamper with interrupt mode using HAL_RTCEx_SetTamper_IT() function.
 457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   (+) The default configuration of the Tamper erases the backup registers. To avoid
 458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       erase, enable the NoErase field on the TAMP_TAMPCR register.
 459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****  [..]
 460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   (+) Enable Internal Tamper and configure it with interrupt, timestamp using
 461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       the HAL_RTCEx_SetInternalTamper() function.
 462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** @endverbatim
 464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** * @{
 465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** */
 466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(TAMP)
 468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
 469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Set Tamper
 470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  sTamper Pointer to Tamper Structure.
 472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
 473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
 474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetTamper(RTC_HandleTypeDef * hrtc, const RTC_TamperTypeDef * sTamper)
 475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tmpreg;
 477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Point on TAMPER registers base address */
 479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   TAMP_TypeDef *tamp = (TAMP_TypeDef *)((uint32_t)hrtc->Instance + TAMP_OFFSET);
 480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check the parameters */
 482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER(sTamper->Tamper));
 483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_TRIGGER(sTamper->Trigger));
 484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_ERASE_MODE(sTamper->NoErase));
 485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_MASKFLAG_STATE(sTamper->MaskFlag));
 486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_TIMESTAMPONTAMPER_DETECTION(sTamper->TimeStampOnTamperDetection));
 487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_FILTER(sTamper->Filter));
 488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_SAMPLING_FREQ(sTamper->SamplingFrequency));
 489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_PRECHARGE_DURATION(sTamper->PrechargeDuration));
 490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_PULLUP_STATE(sTamper->TamperPullUp));
 491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_FILTER_CONFIG_CORRECT(sTamper->Filter, sTamper->Trigger));
 492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configuration register 2 */
 494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmpreg = tamp->CR2;
 495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmpreg &= ~((sTamper->Tamper << TAMP_CR2_TAMP1TRG_Pos) | (sTamper->Tamper << TAMP_CR2_TAMP1MSK_Po
 496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure the tamper trigger bit */
 498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if ((sTamper->Trigger == RTC_TAMPERTRIGGER_HIGHLEVEL) || (sTamper->Trigger == RTC_TAMPERTRIGGER_F
 499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     tmpreg |= (sTamper->Tamper << TAMP_CR2_TAMP1TRG_Pos);
 501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure the tamper flags masking bit */
 504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (sTamper->MaskFlag != RTC_TAMPERMASK_FLAG_DISABLE)
 505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     tmpreg |= (sTamper->Tamper << TAMP_CR2_TAMP1MSK_Pos);
 507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure the tamper backup registers erasure bit */
 510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (sTamper->NoErase != RTC_TAMPER_ERASE_BACKUP_ENABLE)
 511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 24


 512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     tmpreg |= (sTamper->Tamper << TAMP_CR2_TAMP1NOERASE_Pos);
 513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tamp->CR2 = tmpreg;
 515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure filtering parameters */
 517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tamp->FLTCR = (sTamper->Filter)            | (sTamper->SamplingFrequency) | \
 518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****                 (sTamper->PrechargeDuration) | (sTamper->TamperPullUp);
 519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure Timestamp saving on tamper detection */
 521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if ((hrtc->Instance->CR & RTC_CR_TAMPTS) != (sTamper->TimeStampOnTamperDetection))
 522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     tmpreg = (hrtc->Instance->CR & ~RTC_CR_TAMPTS);
 525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     hrtc->Instance->CR = (tmpreg | (sTamper->TimeStampOnTamperDetection));
 526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable selected tamper */
 530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tamp->CR1 |= (sTamper->Tamper);
 531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #else
 535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
 536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Set Tamper.
 537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @note   By calling this API we disable the tamper interrupt for all tampers.
 538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  sTamper Pointer to Tamper Structure.
 540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
 541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
 542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetTamper(RTC_HandleTypeDef * hrtc, const RTC_TamperTypeDef * sTamper)
 543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 814              		.loc 1 543 1
 815              		.cfi_startproc
 816              		@ args = 0, pretend = 0, frame = 16
 817              		@ frame_needed = 1, uses_anonymous_args = 0
 818              		@ link register save eliminated.
 819 0000 80B4     		push	{r7}
 820              	.LCFI35:
 821              		.cfi_def_cfa_offset 4
 822              		.cfi_offset 7, -4
 823 0002 85B0     		sub	sp, sp, #20
 824              	.LCFI36:
 825              		.cfi_def_cfa_offset 24
 826 0004 00AF     		add	r7, sp, #0
 827              	.LCFI37:
 828              		.cfi_def_cfa_register 7
 829 0006 7860     		str	r0, [r7, #4]
 830 0008 3960     		str	r1, [r7]
 544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tmpreg;
 545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check the parameters */
 547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER(sTamper->Tamper));
 548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_TRIGGER(sTamper->Trigger));
 549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_ERASE_MODE(sTamper->NoErase));
 550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_MASKFLAG_STATE(sTamper->MaskFlag));
 551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_FILTER(sTamper->Filter));
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 25


 552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_SAMPLING_FREQ(sTamper->SamplingFrequency));
 553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_PRECHARGE_DURATION(sTamper->PrechargeDuration));
 554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_PULLUP_STATE(sTamper->TamperPullUp));
 555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_TIMESTAMPONTAMPER_DETECTION(sTamper->TimeStampOnTamperDetection));
 556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_FILTER_CONFIG_CORRECT(sTamper->Filter, sTamper->Trigger));
 557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Locked */
 559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 831              		.loc 1 559 3
 832 000a 7B68     		ldr	r3, [r7, #4]
 833 000c 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 834 0010 012B     		cmp	r3, #1
 835 0012 01D1     		bne	.L28
 836              		.loc 1 559 3 is_stmt 0 discriminator 1
 837 0014 0223     		movs	r3, #2
 838              		.loc 1 559 3
 839 0016 CAE0     		b	.L29
 840              	.L28:
 841              		.loc 1 559 3 discriminator 2
 842 0018 7B68     		ldr	r3, [r7, #4]
 843 001a 0122     		movs	r2, #1
 844 001c 83F82020 		strb	r2, [r3, #32]
 560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 845              		.loc 1 561 15 is_stmt 1
 846 0020 7B68     		ldr	r3, [r7, #4]
 847 0022 0222     		movs	r2, #2
 848 0024 83F82120 		strb	r2, [r3, #33]
 562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Copy control register into temporary variable */
 564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmpreg = hrtc->Instance->TAMPCR;
 849              		.loc 1 564 16
 850 0028 7B68     		ldr	r3, [r7, #4]
 851 002a 1B68     		ldr	r3, [r3]
 852              		.loc 1 564 10
 853 002c 1B6C     		ldr	r3, [r3, #64]
 854 002e FB60     		str	r3, [r7, #12]
 565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable selected tamper */
 567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmpreg |= (sTamper->Tamper);
 855              		.loc 1 567 21
 856 0030 3B68     		ldr	r3, [r7]
 857 0032 1B68     		ldr	r3, [r3]
 858              		.loc 1 567 10
 859 0034 FA68     		ldr	r2, [r7, #12]
 860 0036 1343     		orrs	r3, r3, r2
 861 0038 FB60     		str	r3, [r7, #12]
 568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure the bit (located just next to the tamper enable bit) */
 570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if ((sTamper->Trigger == RTC_TAMPERTRIGGER_HIGHLEVEL) || (sTamper->Trigger == RTC_TAMPERTRIGGER_F
 862              		.loc 1 570 15
 863 003a 3B68     		ldr	r3, [r7]
 864 003c 9B68     		ldr	r3, [r3, #8]
 865              		.loc 1 570 6
 866 003e 082B     		cmp	r3, #8
 867 0040 03D0     		beq	.L30
 868              		.loc 1 570 68 discriminator 1
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 26


 869 0042 3B68     		ldr	r3, [r7]
 870 0044 9B68     		ldr	r3, [r3, #8]
 871              		.loc 1 570 57 discriminator 1
 872 0046 022B     		cmp	r3, #2
 873 0048 06D1     		bne	.L31
 874              	.L30:
 571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Set the tamper trigger bit */
 573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     tmpreg |= (uint32_t)(sTamper->Tamper << 1U);
 875              		.loc 1 573 33
 876 004a 3B68     		ldr	r3, [r7]
 877 004c 1B68     		ldr	r3, [r3]
 878              		.loc 1 573 15
 879 004e 5B00     		lsls	r3, r3, #1
 880              		.loc 1 573 12
 881 0050 FA68     		ldr	r2, [r7, #12]
 882 0052 1343     		orrs	r3, r3, r2
 883 0054 FB60     		str	r3, [r7, #12]
 884 0056 06E0     		b	.L32
 885              	.L31:
 574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   else
 576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Clear the tamper trigger bit */
 578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     tmpreg &= (uint32_t)~(sTamper->Tamper << 1U);
 886              		.loc 1 578 34
 887 0058 3B68     		ldr	r3, [r7]
 888 005a 1B68     		ldr	r3, [r3]
 889              		.loc 1 578 43
 890 005c 5B00     		lsls	r3, r3, #1
 891              		.loc 1 578 25
 892 005e DB43     		mvns	r3, r3
 893              		.loc 1 578 12
 894 0060 FA68     		ldr	r2, [r7, #12]
 895 0062 1340     		ands	r3, r3, r2
 896 0064 FB60     		str	r3, [r7, #12]
 897              	.L32:
 579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPNOERASE_SUPPORT)
 582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure the tamper backup registers erasure bit */
 583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (sTamper->NoErase != RTC_TAMPER_ERASE_BACKUP_ENABLE)
 898              		.loc 1 583 14
 899 0066 3B68     		ldr	r3, [r7]
 900 0068 DB68     		ldr	r3, [r3, #12]
 901              		.loc 1 583 6
 902 006a 002B     		cmp	r3, #0
 903 006c 1ED0     		beq	.L33
 584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((sTamper->Tamper & RTC_TAMPER_1) != 0U)
 904              		.loc 1 585 17
 905 006e 3B68     		ldr	r3, [r7]
 906 0070 1B68     		ldr	r3, [r3]
 907              		.loc 1 585 26
 908 0072 03F00103 		and	r3, r3, #1
 909              		.loc 1 585 8
 910 0076 002B     		cmp	r3, #0
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 27


 911 0078 03D0     		beq	.L34
 586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg |= (uint32_t)(RTC_TAMPCR_TAMP1NOERASE);
 912              		.loc 1 587 14
 913 007a FB68     		ldr	r3, [r7, #12]
 914 007c 43F40033 		orr	r3, r3, #131072
 915 0080 FB60     		str	r3, [r7, #12]
 916              	.L34:
 588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((sTamper->Tamper & RTC_TAMPER_2) != 0U)
 917              		.loc 1 589 17
 918 0082 3B68     		ldr	r3, [r7]
 919 0084 1B68     		ldr	r3, [r3]
 920              		.loc 1 589 26
 921 0086 03F00803 		and	r3, r3, #8
 922              		.loc 1 589 8
 923 008a 002B     		cmp	r3, #0
 924 008c 03D0     		beq	.L35
 590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg |= (uint32_t)(RTC_TAMPCR_TAMP2NOERASE);
 925              		.loc 1 591 14
 926 008e FB68     		ldr	r3, [r7, #12]
 927 0090 43F48013 		orr	r3, r3, #1048576
 928 0094 FB60     		str	r3, [r7, #12]
 929              	.L35:
 592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((sTamper->Tamper & RTC_TAMPER_3) != 0U)
 930              		.loc 1 593 17
 931 0096 3B68     		ldr	r3, [r7]
 932 0098 1B68     		ldr	r3, [r3]
 933              		.loc 1 593 26
 934 009a 03F02003 		and	r3, r3, #32
 935              		.loc 1 593 8
 936 009e 002B     		cmp	r3, #0
 937 00a0 22D0     		beq	.L36
 594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg |= (uint32_t)(RTC_TAMPCR_TAMP3NOERASE);
 938              		.loc 1 595 14
 939 00a2 FB68     		ldr	r3, [r7, #12]
 940 00a4 43F40003 		orr	r3, r3, #8388608
 941 00a8 FB60     		str	r3, [r7, #12]
 942 00aa 1DE0     		b	.L36
 943              	.L33:
 596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   else
 599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((sTamper->Tamper & RTC_TAMPER_1) != 0U)
 944              		.loc 1 600 17
 945 00ac 3B68     		ldr	r3, [r7]
 946 00ae 1B68     		ldr	r3, [r3]
 947              		.loc 1 600 26
 948 00b0 03F00103 		and	r3, r3, #1
 949              		.loc 1 600 8
 950 00b4 002B     		cmp	r3, #0
 951 00b6 03D0     		beq	.L37
 601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 28


 602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg &= (uint32_t)~(RTC_TAMPCR_TAMP1NOERASE);
 952              		.loc 1 602 14
 953 00b8 FB68     		ldr	r3, [r7, #12]
 954 00ba 23F40033 		bic	r3, r3, #131072
 955 00be FB60     		str	r3, [r7, #12]
 956              	.L37:
 603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((sTamper->Tamper & RTC_TAMPER_2) != 0U)
 957              		.loc 1 604 17
 958 00c0 3B68     		ldr	r3, [r7]
 959 00c2 1B68     		ldr	r3, [r3]
 960              		.loc 1 604 26
 961 00c4 03F00803 		and	r3, r3, #8
 962              		.loc 1 604 8
 963 00c8 002B     		cmp	r3, #0
 964 00ca 03D0     		beq	.L38
 605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg &= (uint32_t)~(RTC_TAMPCR_TAMP2NOERASE);
 965              		.loc 1 606 14
 966 00cc FB68     		ldr	r3, [r7, #12]
 967 00ce 23F48013 		bic	r3, r3, #1048576
 968 00d2 FB60     		str	r3, [r7, #12]
 969              	.L38:
 607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((sTamper->Tamper & RTC_TAMPER_3) != 0U)
 970              		.loc 1 608 17
 971 00d4 3B68     		ldr	r3, [r7]
 972 00d6 1B68     		ldr	r3, [r3]
 973              		.loc 1 608 26
 974 00d8 03F02003 		and	r3, r3, #32
 975              		.loc 1 608 8
 976 00dc 002B     		cmp	r3, #0
 977 00de 03D0     		beq	.L36
 609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg &= (uint32_t)~(RTC_TAMPCR_TAMP3NOERASE);
 978              		.loc 1 610 14
 979 00e0 FB68     		ldr	r3, [r7, #12]
 980 00e2 23F40003 		bic	r3, r3, #8388608
 981 00e6 FB60     		str	r3, [r7, #12]
 982              	.L36:
 611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPNOERASE_SUPPORT */
 614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPMASKFLAG_SUPPORT)  
 616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure the tamper flags masking bit */
 617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (sTamper->MaskFlag != RTC_TAMPERMASK_FLAG_DISABLE)
 983              		.loc 1 617 14
 984 00e8 3B68     		ldr	r3, [r7]
 985 00ea 1B69     		ldr	r3, [r3, #16]
 986              		.loc 1 617 6
 987 00ec 002B     		cmp	r3, #0
 988 00ee 1ED0     		beq	.L39
 618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((sTamper->Tamper & RTC_TAMPER_1) != 0U)
 989              		.loc 1 619 17
 990 00f0 3B68     		ldr	r3, [r7]
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 29


 991 00f2 1B68     		ldr	r3, [r3]
 992              		.loc 1 619 26
 993 00f4 03F00103 		and	r3, r3, #1
 994              		.loc 1 619 8
 995 00f8 002B     		cmp	r3, #0
 996 00fa 03D0     		beq	.L40
 620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg |= (uint32_t)(RTC_TAMPCR_TAMP1MF);
 997              		.loc 1 621 14
 998 00fc FB68     		ldr	r3, [r7, #12]
 999 00fe 43F48023 		orr	r3, r3, #262144
 1000 0102 FB60     		str	r3, [r7, #12]
 1001              	.L40:
 622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((sTamper->Tamper & RTC_TAMPER_2) != 0U)
 1002              		.loc 1 623 17
 1003 0104 3B68     		ldr	r3, [r7]
 1004 0106 1B68     		ldr	r3, [r3]
 1005              		.loc 1 623 26
 1006 0108 03F00803 		and	r3, r3, #8
 1007              		.loc 1 623 8
 1008 010c 002B     		cmp	r3, #0
 1009 010e 03D0     		beq	.L41
 624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg |= (uint32_t)(RTC_TAMPCR_TAMP2MF);
 1010              		.loc 1 625 14
 1011 0110 FB68     		ldr	r3, [r7, #12]
 1012 0112 43F40013 		orr	r3, r3, #2097152
 1013 0116 FB60     		str	r3, [r7, #12]
 1014              	.L41:
 626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((sTamper->Tamper & RTC_TAMPER_3) != 0U)
 1015              		.loc 1 627 17
 1016 0118 3B68     		ldr	r3, [r7]
 1017 011a 1B68     		ldr	r3, [r3]
 1018              		.loc 1 627 26
 1019 011c 03F02003 		and	r3, r3, #32
 1020              		.loc 1 627 8
 1021 0120 002B     		cmp	r3, #0
 1022 0122 22D0     		beq	.L42
 628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg |= (uint32_t)(RTC_TAMPCR_TAMP3MF);
 1023              		.loc 1 629 14
 1024 0124 FB68     		ldr	r3, [r7, #12]
 1025 0126 43F08073 		orr	r3, r3, #16777216
 1026 012a FB60     		str	r3, [r7, #12]
 1027 012c 1DE0     		b	.L42
 1028              	.L39:
 630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   else
 633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((sTamper->Tamper & RTC_TAMPER_1) != 0U)
 1029              		.loc 1 634 17
 1030 012e 3B68     		ldr	r3, [r7]
 1031 0130 1B68     		ldr	r3, [r3]
 1032              		.loc 1 634 26
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 30


 1033 0132 03F00103 		and	r3, r3, #1
 1034              		.loc 1 634 8
 1035 0136 002B     		cmp	r3, #0
 1036 0138 03D0     		beq	.L43
 635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg &= (uint32_t)~(RTC_TAMPCR_TAMP1MF);
 1037              		.loc 1 636 14
 1038 013a FB68     		ldr	r3, [r7, #12]
 1039 013c 23F48023 		bic	r3, r3, #262144
 1040 0140 FB60     		str	r3, [r7, #12]
 1041              	.L43:
 637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((sTamper->Tamper & RTC_TAMPER_2) != 0U)
 1042              		.loc 1 638 17
 1043 0142 3B68     		ldr	r3, [r7]
 1044 0144 1B68     		ldr	r3, [r3]
 1045              		.loc 1 638 26
 1046 0146 03F00803 		and	r3, r3, #8
 1047              		.loc 1 638 8
 1048 014a 002B     		cmp	r3, #0
 1049 014c 03D0     		beq	.L44
 639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg &= (uint32_t)~(RTC_TAMPCR_TAMP2MF);
 1050              		.loc 1 640 14
 1051 014e FB68     		ldr	r3, [r7, #12]
 1052 0150 23F40013 		bic	r3, r3, #2097152
 1053 0154 FB60     		str	r3, [r7, #12]
 1054              	.L44:
 641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((sTamper->Tamper & RTC_TAMPER_3) != 0U)
 1055              		.loc 1 642 17
 1056 0156 3B68     		ldr	r3, [r7]
 1057 0158 1B68     		ldr	r3, [r3]
 1058              		.loc 1 642 26
 1059 015a 03F02003 		and	r3, r3, #32
 1060              		.loc 1 642 8
 1061 015e 002B     		cmp	r3, #0
 1062 0160 03D0     		beq	.L42
 643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg &= (uint32_t)~(RTC_TAMPCR_TAMP3MF);
 1063              		.loc 1 644 14
 1064 0162 FB68     		ldr	r3, [r7, #12]
 1065 0164 23F08073 		bic	r3, r3, #16777216
 1066 0168 FB60     		str	r3, [r7, #12]
 1067              	.L42:
 645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPMASKFLAG_SUPPORT */
 648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clearing remaining fields before setting them */
 650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmpreg &= ~(RTC_TAMPERFILTER_MASK            | RTC_TAMPERSAMPLINGFREQ_RTCCLK_MASK | \
 1068              		.loc 1 650 10
 1069 016a FA68     		ldr	r2, [r7, #12]
 1070 016c 134B     		ldr	r3, .L45
 1071 016e 1340     		ands	r3, r3, r2
 1072 0170 FB60     		str	r3, [r7, #12]
 651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****               RTC_TAMPERPRECHARGEDURATION_MASK | RTC_TAMPER_PULLUP_MASK             | \
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 31


 652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****               RTC_TIMESTAMPONTAMPERDETECTION_MASK);
 653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Set remaining parameters of desired configuration into temporary variable */
 655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmpreg |= ((uint32_t)sTamper->Filter            | \
 1073              		.loc 1 655 31
 1074 0172 3B68     		ldr	r3, [r7]
 1075 0174 5A69     		ldr	r2, [r3, #20]
 656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****              (uint32_t)sTamper->SamplingFrequency | \
 1076              		.loc 1 656 31
 1077 0176 3B68     		ldr	r3, [r7]
 1078 0178 9B69     		ldr	r3, [r3, #24]
 655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****              (uint32_t)sTamper->SamplingFrequency | \
 1079              		.loc 1 655 51
 1080 017a 1A43     		orrs	r2, r2, r3
 657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****              (uint32_t)sTamper->PrechargeDuration | \
 1081              		.loc 1 657 31
 1082 017c 3B68     		ldr	r3, [r7]
 1083 017e DB69     		ldr	r3, [r3, #28]
 656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****              (uint32_t)sTamper->SamplingFrequency | \
 1084              		.loc 1 656 51
 1085 0180 1A43     		orrs	r2, r2, r3
 658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****              (uint32_t)sTamper->TamperPullUp      | \
 1086              		.loc 1 658 31
 1087 0182 3B68     		ldr	r3, [r7]
 1088 0184 1B6A     		ldr	r3, [r3, #32]
 657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****              (uint32_t)sTamper->PrechargeDuration | \
 1089              		.loc 1 657 51
 1090 0186 1A43     		orrs	r2, r2, r3
 659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****              (uint32_t)sTamper->TimeStampOnTamperDetection);
 1091              		.loc 1 659 31
 1092 0188 3B68     		ldr	r3, [r7]
 1093 018a 5B6A     		ldr	r3, [r3, #36]
 658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****              (uint32_t)sTamper->TamperPullUp      | \
 1094              		.loc 1 658 51
 1095 018c 1343     		orrs	r3, r3, r2
 655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****              (uint32_t)sTamper->SamplingFrequency | \
 1096              		.loc 1 655 10
 1097 018e FA68     		ldr	r2, [r7, #12]
 1098 0190 1343     		orrs	r3, r3, r2
 1099 0192 FB60     		str	r3, [r7, #12]
 660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Copy desired configuration into configuration register */
 662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->Instance->TAMPCR = tmpreg;
 1100              		.loc 1 662 7
 1101 0194 7B68     		ldr	r3, [r7, #4]
 1102 0196 1B68     		ldr	r3, [r3]
 1103              		.loc 1 662 26
 1104 0198 FA68     		ldr	r2, [r7, #12]
 1105 019a 1A64     		str	r2, [r3, #64]
 663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 1106              		.loc 1 664 15
 1107 019c 7B68     		ldr	r3, [r7, #4]
 1108 019e 0122     		movs	r2, #1
 1109 01a0 83F82120 		strb	r2, [r3, #33]
 665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Unlocked */
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 32


 667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 1110              		.loc 1 667 3
 1111 01a4 7B68     		ldr	r3, [r7, #4]
 1112 01a6 0022     		movs	r2, #0
 1113 01a8 83F82020 		strb	r2, [r3, #32]
 668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 1114              		.loc 1 669 10
 1115 01ac 0023     		movs	r3, #0
 1116              	.L29:
 670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 1117              		.loc 1 670 1
 1118 01ae 1846     		mov	r0, r3
 1119 01b0 1437     		adds	r7, r7, #20
 1120              	.LCFI38:
 1121              		.cfi_def_cfa_offset 4
 1122 01b2 BD46     		mov	sp, r7
 1123              	.LCFI39:
 1124              		.cfi_def_cfa_register 13
 1125              		@ sp needed
 1126 01b4 5DF8047B 		ldr	r7, [sp], #4
 1127              	.LCFI40:
 1128              		.cfi_restore 7
 1129              		.cfi_def_cfa_offset 0
 1130 01b8 7047     		bx	lr
 1131              	.L46:
 1132 01ba 00BF     		.align	2
 1133              	.L45:
 1134 01bc 7F00FFFF 		.word	-65409
 1135              		.cfi_endproc
 1136              	.LFE150:
 1138              		.section	.text.HAL_RTCEx_SetTamper_IT,"ax",%progbits
 1139              		.align	1
 1140              		.global	HAL_RTCEx_SetTamper_IT
 1141              		.syntax unified
 1142              		.thumb
 1143              		.thumb_func
 1145              	HAL_RTCEx_SetTamper_IT:
 1146              	.LFB151:
 671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* TAMP */
 672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(TAMP)
 674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
 675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Set Tamper with interrupt.
 676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  sTamper Pointer to Tamper Structure.
 678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
 679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
 680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetTamper_IT(RTC_HandleTypeDef * hrtc, const RTC_TamperTypeDef * sTampe
 681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tmpreg;
 683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Point on TAMPER registers base address */
 685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   TAMP_TypeDef *tamp = (TAMP_TypeDef *)((uint32_t)hrtc->Instance + TAMP_OFFSET);
 686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check the parameters */
 688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER(sTamper->Tamper));
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 33


 689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_TRIGGER(sTamper->Trigger));
 690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_ERASE_MODE(sTamper->NoErase));
 691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_MASKFLAG_STATE(sTamper->MaskFlag));
 692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_FILTER(sTamper->Filter));
 693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_SAMPLING_FREQ(sTamper->SamplingFrequency));
 694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_PRECHARGE_DURATION(sTamper->PrechargeDuration));
 695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_PULLUP_STATE(sTamper->TamperPullUp));
 696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_TIMESTAMPONTAMPER_DETECTION(sTamper->TimeStampOnTamperDetection));
 697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_FILTER_CONFIG_CORRECT(sTamper->Filter, sTamper->Trigger));
 698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Copy configuration register into temporary variable */
 700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmpreg = tamp->CR2;
 701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clear the bits that are going to be configured and leave the others unchanged */
 703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmpreg &= ~((sTamper->Tamper << TAMP_CR2_TAMP1TRG_Pos) | (sTamper->Tamper << TAMP_CR2_TAMP1MSK_Po
 704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure the tamper trigger bit */
 706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if ((sTamper->Trigger == RTC_TAMPERTRIGGER_HIGHLEVEL) || (sTamper->Trigger == RTC_TAMPERTRIGGER_F
 707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     tmpreg |= (sTamper->Tamper << TAMP_CR2_TAMP1TRG_Pos);
 709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure the tamper flags masking bit */
 712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (sTamper->MaskFlag != RTC_TAMPERMASK_FLAG_DISABLE)
 713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     tmpreg |= (sTamper->Tamper << TAMP_CR2_TAMP1MSK_Pos);
 715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure the tamper backup registers erasure bit */
 718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (sTamper->NoErase != RTC_TAMPER_ERASE_BACKUP_ENABLE)
 719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     tmpreg |= (sTamper->Tamper << TAMP_CR2_TAMP1NOERASE_Pos);
 721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tamp->CR2 = tmpreg;
 723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure filtering parameters */
 725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tamp->FLTCR = (sTamper->Filter)            | (sTamper->SamplingFrequency) | \
 726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****                 (sTamper->PrechargeDuration) | (sTamper->TamperPullUp);
 727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure Timestamp saving on tamper detection */
 729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if ((hrtc->Instance->CR & RTC_CR_TAMPTS) != (sTamper->TimeStampOnTamperDetection))
 730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     tmpreg = (hrtc->Instance->CR & ~RTC_CR_TAMPTS);
 733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     hrtc->Instance->CR = (tmpreg | (sTamper->TimeStampOnTamperDetection));
 734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure RTC Tamper Interrupt: EXTI configuration */
 738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_TIMESTAMP_EXTI_ENABLE_IT();
 739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_TIMESTAMP_EXTI_ENABLE_RISING_FALLING_EDGE();
 740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable interrupt on selected tamper */
 742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tamp->IER |= sTamper->Tamper;
 743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable selected tamper */
 745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tamp->CR1 |= sTamper->Tamper;
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 34


 746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #else
 750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
 751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Set Tamper with interrupt.
 752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @note   By calling this API we force the tamper interrupt for all tampers.
 753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  sTamper Pointer to Tamper Structure.
 755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
 756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
 757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetTamper_IT(RTC_HandleTypeDef * hrtc, const RTC_TamperTypeDef * sTampe
 758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 1147              		.loc 1 758 1
 1148              		.cfi_startproc
 1149              		@ args = 0, pretend = 0, frame = 16
 1150              		@ frame_needed = 1, uses_anonymous_args = 0
 1151              		@ link register save eliminated.
 1152 0000 80B4     		push	{r7}
 1153              	.LCFI41:
 1154              		.cfi_def_cfa_offset 4
 1155              		.cfi_offset 7, -4
 1156 0002 85B0     		sub	sp, sp, #20
 1157              	.LCFI42:
 1158              		.cfi_def_cfa_offset 24
 1159 0004 00AF     		add	r7, sp, #0
 1160              	.LCFI43:
 1161              		.cfi_def_cfa_register 7
 1162 0006 7860     		str	r0, [r7, #4]
 1163 0008 3960     		str	r1, [r7]
 759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tmpreg;
 760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check the parameters */
 762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER(sTamper->Tamper));
 763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_INTERRUPT(sTamper->Interrupt));
 764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_TRIGGER(sTamper->Trigger));
 765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_ERASE_MODE(sTamper->NoErase));
 766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_MASKFLAG_STATE(sTamper->MaskFlag));
 767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_FILTER(sTamper->Filter));
 768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_SAMPLING_FREQ(sTamper->SamplingFrequency));
 769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_PRECHARGE_DURATION(sTamper->PrechargeDuration));
 770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_PULLUP_STATE(sTamper->TamperPullUp));
 771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_TIMESTAMPONTAMPER_DETECTION(sTamper->TimeStampOnTamperDetection));
 772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_FILTER_CONFIG_CORRECT(sTamper->Filter, sTamper->Trigger));
 773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Locked */
 775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 1164              		.loc 1 775 3
 1165 000a 7B68     		ldr	r3, [r7, #4]
 1166 000c 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 1167 0010 012B     		cmp	r3, #1
 1168 0012 01D1     		bne	.L48
 1169              		.loc 1 775 3 is_stmt 0 discriminator 1
 1170 0014 0223     		movs	r3, #2
 1171              		.loc 1 775 3
 1172 0016 DDE0     		b	.L49
 1173              	.L48:
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 35


 1174              		.loc 1 775 3 discriminator 2
 1175 0018 7B68     		ldr	r3, [r7, #4]
 1176 001a 0122     		movs	r2, #1
 1177 001c 83F82020 		strb	r2, [r3, #32]
 776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 1178              		.loc 1 777 15 is_stmt 1
 1179 0020 7B68     		ldr	r3, [r7, #4]
 1180 0022 0222     		movs	r2, #2
 1181 0024 83F82120 		strb	r2, [r3, #33]
 778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Copy control register into temporary variable */
 780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmpreg = hrtc->Instance->TAMPCR;
 1182              		.loc 1 780 16
 1183 0028 7B68     		ldr	r3, [r7, #4]
 1184 002a 1B68     		ldr	r3, [r3]
 1185              		.loc 1 780 10
 1186 002c 1B6C     		ldr	r3, [r3, #64]
 1187 002e FB60     		str	r3, [r7, #12]
 781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable selected tamper */
 783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmpreg |= (sTamper->Tamper);
 1188              		.loc 1 783 21
 1189 0030 3B68     		ldr	r3, [r7]
 1190 0032 1B68     		ldr	r3, [r3]
 1191              		.loc 1 783 10
 1192 0034 FA68     		ldr	r2, [r7, #12]
 1193 0036 1343     		orrs	r3, r3, r2
 1194 0038 FB60     		str	r3, [r7, #12]
 784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure the tamper trigger bit (located just next to the tamper enable bit) */
 786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if ((sTamper->Trigger == RTC_TAMPERTRIGGER_HIGHLEVEL) || (sTamper->Trigger == RTC_TAMPERTRIGGER_F
 1195              		.loc 1 786 15
 1196 003a 3B68     		ldr	r3, [r7]
 1197 003c 9B68     		ldr	r3, [r3, #8]
 1198              		.loc 1 786 6
 1199 003e 082B     		cmp	r3, #8
 1200 0040 03D0     		beq	.L50
 1201              		.loc 1 786 68 discriminator 1
 1202 0042 3B68     		ldr	r3, [r7]
 1203 0044 9B68     		ldr	r3, [r3, #8]
 1204              		.loc 1 786 57 discriminator 1
 1205 0046 022B     		cmp	r3, #2
 1206 0048 06D1     		bne	.L51
 1207              	.L50:
 787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Set the tamper trigger bit */
 789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     tmpreg |= (uint32_t)(sTamper->Tamper << 1U);
 1208              		.loc 1 789 33
 1209 004a 3B68     		ldr	r3, [r7]
 1210 004c 1B68     		ldr	r3, [r3]
 1211              		.loc 1 789 15
 1212 004e 5B00     		lsls	r3, r3, #1
 1213              		.loc 1 789 12
 1214 0050 FA68     		ldr	r2, [r7, #12]
 1215 0052 1343     		orrs	r3, r3, r2
 1216 0054 FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 36


 1217 0056 06E0     		b	.L52
 1218              	.L51:
 790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   else
 792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Clear the tamper trigger bit */
 794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     tmpreg &= (uint32_t)~(sTamper->Tamper << 1U);
 1219              		.loc 1 794 34
 1220 0058 3B68     		ldr	r3, [r7]
 1221 005a 1B68     		ldr	r3, [r3]
 1222              		.loc 1 794 43
 1223 005c 5B00     		lsls	r3, r3, #1
 1224              		.loc 1 794 25
 1225 005e DB43     		mvns	r3, r3
 1226              		.loc 1 794 12
 1227 0060 FA68     		ldr	r2, [r7, #12]
 1228 0062 1340     		ands	r3, r3, r2
 1229 0064 FB60     		str	r3, [r7, #12]
 1230              	.L52:
 795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPNOERASE_SUPPORT)
 798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure the tamper backup registers erasure bit */
 799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (sTamper->NoErase != RTC_TAMPER_ERASE_BACKUP_ENABLE)
 1231              		.loc 1 799 14
 1232 0066 3B68     		ldr	r3, [r7]
 1233 0068 DB68     		ldr	r3, [r3, #12]
 1234              		.loc 1 799 6
 1235 006a 002B     		cmp	r3, #0
 1236 006c 1ED0     		beq	.L53
 800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((sTamper->Tamper & RTC_TAMPER_1) != 0U)
 1237              		.loc 1 801 17
 1238 006e 3B68     		ldr	r3, [r7]
 1239 0070 1B68     		ldr	r3, [r3]
 1240              		.loc 1 801 26
 1241 0072 03F00103 		and	r3, r3, #1
 1242              		.loc 1 801 8
 1243 0076 002B     		cmp	r3, #0
 1244 0078 03D0     		beq	.L54
 802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg |= (uint32_t)(RTC_TAMPCR_TAMP1NOERASE);
 1245              		.loc 1 803 14
 1246 007a FB68     		ldr	r3, [r7, #12]
 1247 007c 43F40033 		orr	r3, r3, #131072
 1248 0080 FB60     		str	r3, [r7, #12]
 1249              	.L54:
 804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((sTamper->Tamper & RTC_TAMPER_2) != 0U)
 1250              		.loc 1 805 17
 1251 0082 3B68     		ldr	r3, [r7]
 1252 0084 1B68     		ldr	r3, [r3]
 1253              		.loc 1 805 26
 1254 0086 03F00803 		and	r3, r3, #8
 1255              		.loc 1 805 8
 1256 008a 002B     		cmp	r3, #0
 1257 008c 03D0     		beq	.L55
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 37


 806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg |= (uint32_t)(RTC_TAMPCR_TAMP2NOERASE);
 1258              		.loc 1 807 14
 1259 008e FB68     		ldr	r3, [r7, #12]
 1260 0090 43F48013 		orr	r3, r3, #1048576
 1261 0094 FB60     		str	r3, [r7, #12]
 1262              	.L55:
 808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((sTamper->Tamper & RTC_TAMPER_3) != 0U)
 1263              		.loc 1 809 17
 1264 0096 3B68     		ldr	r3, [r7]
 1265 0098 1B68     		ldr	r3, [r3]
 1266              		.loc 1 809 26
 1267 009a 03F02003 		and	r3, r3, #32
 1268              		.loc 1 809 8
 1269 009e 002B     		cmp	r3, #0
 1270 00a0 22D0     		beq	.L56
 810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg |= (uint32_t)(RTC_TAMPCR_TAMP3NOERASE);
 1271              		.loc 1 811 14
 1272 00a2 FB68     		ldr	r3, [r7, #12]
 1273 00a4 43F40003 		orr	r3, r3, #8388608
 1274 00a8 FB60     		str	r3, [r7, #12]
 1275 00aa 1DE0     		b	.L56
 1276              	.L53:
 812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   else
 815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((sTamper->Tamper & RTC_TAMPER_1) != 0U)
 1277              		.loc 1 816 17
 1278 00ac 3B68     		ldr	r3, [r7]
 1279 00ae 1B68     		ldr	r3, [r3]
 1280              		.loc 1 816 26
 1281 00b0 03F00103 		and	r3, r3, #1
 1282              		.loc 1 816 8
 1283 00b4 002B     		cmp	r3, #0
 1284 00b6 03D0     		beq	.L57
 817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg &= (uint32_t)~(RTC_TAMPCR_TAMP1NOERASE);
 1285              		.loc 1 818 14
 1286 00b8 FB68     		ldr	r3, [r7, #12]
 1287 00ba 23F40033 		bic	r3, r3, #131072
 1288 00be FB60     		str	r3, [r7, #12]
 1289              	.L57:
 819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((sTamper->Tamper & RTC_TAMPER_2) != 0U)
 1290              		.loc 1 820 17
 1291 00c0 3B68     		ldr	r3, [r7]
 1292 00c2 1B68     		ldr	r3, [r3]
 1293              		.loc 1 820 26
 1294 00c4 03F00803 		and	r3, r3, #8
 1295              		.loc 1 820 8
 1296 00c8 002B     		cmp	r3, #0
 1297 00ca 03D0     		beq	.L58
 821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg &= (uint32_t)~(RTC_TAMPCR_TAMP2NOERASE);
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 38


 1298              		.loc 1 822 14
 1299 00cc FB68     		ldr	r3, [r7, #12]
 1300 00ce 23F48013 		bic	r3, r3, #1048576
 1301 00d2 FB60     		str	r3, [r7, #12]
 1302              	.L58:
 823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((sTamper->Tamper & RTC_TAMPER_3) != 0U)
 1303              		.loc 1 824 17
 1304 00d4 3B68     		ldr	r3, [r7]
 1305 00d6 1B68     		ldr	r3, [r3]
 1306              		.loc 1 824 26
 1307 00d8 03F02003 		and	r3, r3, #32
 1308              		.loc 1 824 8
 1309 00dc 002B     		cmp	r3, #0
 1310 00de 03D0     		beq	.L56
 825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg &= (uint32_t)~(RTC_TAMPCR_TAMP3NOERASE);
 1311              		.loc 1 826 14
 1312 00e0 FB68     		ldr	r3, [r7, #12]
 1313 00e2 23F40003 		bic	r3, r3, #8388608
 1314 00e6 FB60     		str	r3, [r7, #12]
 1315              	.L56:
 827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 828:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPNOERASE_SUPPORT */
 830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPMASKFLAG_SUPPORT)
 832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure the tamper flags masking bit */
 833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (sTamper->MaskFlag != RTC_TAMPERMASK_FLAG_DISABLE)
 1316              		.loc 1 833 14
 1317 00e8 3B68     		ldr	r3, [r7]
 1318 00ea 1B69     		ldr	r3, [r3, #16]
 1319              		.loc 1 833 6
 1320 00ec 002B     		cmp	r3, #0
 1321 00ee 1ED0     		beq	.L59
 834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((sTamper->Tamper & RTC_TAMPER_1) != 0U)
 1322              		.loc 1 835 17
 1323 00f0 3B68     		ldr	r3, [r7]
 1324 00f2 1B68     		ldr	r3, [r3]
 1325              		.loc 1 835 26
 1326 00f4 03F00103 		and	r3, r3, #1
 1327              		.loc 1 835 8
 1328 00f8 002B     		cmp	r3, #0
 1329 00fa 03D0     		beq	.L60
 836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg |= (uint32_t)(RTC_TAMPCR_TAMP1MF);
 1330              		.loc 1 837 14
 1331 00fc FB68     		ldr	r3, [r7, #12]
 1332 00fe 43F48023 		orr	r3, r3, #262144
 1333 0102 FB60     		str	r3, [r7, #12]
 1334              	.L60:
 838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((sTamper->Tamper & RTC_TAMPER_2) != 0U)
 1335              		.loc 1 839 17
 1336 0104 3B68     		ldr	r3, [r7]
 1337 0106 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 39


 1338              		.loc 1 839 26
 1339 0108 03F00803 		and	r3, r3, #8
 1340              		.loc 1 839 8
 1341 010c 002B     		cmp	r3, #0
 1342 010e 03D0     		beq	.L61
 840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg |= (uint32_t)(RTC_TAMPCR_TAMP2MF);
 1343              		.loc 1 841 14
 1344 0110 FB68     		ldr	r3, [r7, #12]
 1345 0112 43F40013 		orr	r3, r3, #2097152
 1346 0116 FB60     		str	r3, [r7, #12]
 1347              	.L61:
 842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((sTamper->Tamper & RTC_TAMPER_3) != 0U)
 1348              		.loc 1 843 17
 1349 0118 3B68     		ldr	r3, [r7]
 1350 011a 1B68     		ldr	r3, [r3]
 1351              		.loc 1 843 26
 1352 011c 03F02003 		and	r3, r3, #32
 1353              		.loc 1 843 8
 1354 0120 002B     		cmp	r3, #0
 1355 0122 22D0     		beq	.L62
 844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg |= (uint32_t)(RTC_TAMPCR_TAMP3MF);
 1356              		.loc 1 845 14
 1357 0124 FB68     		ldr	r3, [r7, #12]
 1358 0126 43F08073 		orr	r3, r3, #16777216
 1359 012a FB60     		str	r3, [r7, #12]
 1360 012c 1DE0     		b	.L62
 1361              	.L59:
 846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   else
 849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((sTamper->Tamper & RTC_TAMPER_1) != 0U)
 1362              		.loc 1 850 17
 1363 012e 3B68     		ldr	r3, [r7]
 1364 0130 1B68     		ldr	r3, [r3]
 1365              		.loc 1 850 26
 1366 0132 03F00103 		and	r3, r3, #1
 1367              		.loc 1 850 8
 1368 0136 002B     		cmp	r3, #0
 1369 0138 03D0     		beq	.L63
 851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg &= (uint32_t)~(RTC_TAMPCR_TAMP1MF);
 1370              		.loc 1 852 14
 1371 013a FB68     		ldr	r3, [r7, #12]
 1372 013c 23F48023 		bic	r3, r3, #262144
 1373 0140 FB60     		str	r3, [r7, #12]
 1374              	.L63:
 853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((sTamper->Tamper & RTC_TAMPER_2) != 0U)
 1375              		.loc 1 854 17
 1376 0142 3B68     		ldr	r3, [r7]
 1377 0144 1B68     		ldr	r3, [r3]
 1378              		.loc 1 854 26
 1379 0146 03F00803 		and	r3, r3, #8
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 40


 1380              		.loc 1 854 8
 1381 014a 002B     		cmp	r3, #0
 1382 014c 03D0     		beq	.L64
 855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg &= (uint32_t)~(RTC_TAMPCR_TAMP2MF);
 1383              		.loc 1 856 14
 1384 014e FB68     		ldr	r3, [r7, #12]
 1385 0150 23F40013 		bic	r3, r3, #2097152
 1386 0154 FB60     		str	r3, [r7, #12]
 1387              	.L64:
 857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((sTamper->Tamper & RTC_TAMPER_3) != 0U)
 1388              		.loc 1 858 17
 1389 0156 3B68     		ldr	r3, [r7]
 1390 0158 1B68     		ldr	r3, [r3]
 1391              		.loc 1 858 26
 1392 015a 03F02003 		and	r3, r3, #32
 1393              		.loc 1 858 8
 1394 015e 002B     		cmp	r3, #0
 1395 0160 03D0     		beq	.L62
 859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg &= (uint32_t)~(RTC_TAMPCR_TAMP3MF);
 1396              		.loc 1 860 14
 1397 0162 FB68     		ldr	r3, [r7, #12]
 1398 0164 23F08073 		bic	r3, r3, #16777216
 1399 0168 FB60     		str	r3, [r7, #12]
 1400              	.L62:
 861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPMASKFLAG_SUPPORT */
 864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clearing remaining fields before setting them */
 866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmpreg &= ~(RTC_TAMPERFILTER_MASK            | RTC_TAMPERSAMPLINGFREQ_RTCCLK_MASK | \
 1401              		.loc 1 866 10
 1402 016a FA68     		ldr	r2, [r7, #12]
 1403 016c 1C4B     		ldr	r3, .L65
 1404 016e 1340     		ands	r3, r3, r2
 1405 0170 FB60     		str	r3, [r7, #12]
 867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****               RTC_TAMPERPRECHARGEDURATION_MASK | RTC_TAMPER_PULLUP_MASK             | \
 868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****               RTC_TIMESTAMPONTAMPERDETECTION_MASK);
 869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Set remaining parameters of desired configuration into temporary variable */
 871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmpreg |= ((uint32_t)sTamper->Filter            | \
 1406              		.loc 1 871 31
 1407 0172 3B68     		ldr	r3, [r7]
 1408 0174 5A69     		ldr	r2, [r3, #20]
 872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****              (uint32_t)sTamper->SamplingFrequency | \
 1409              		.loc 1 872 31
 1410 0176 3B68     		ldr	r3, [r7]
 1411 0178 9B69     		ldr	r3, [r3, #24]
 871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****              (uint32_t)sTamper->SamplingFrequency | \
 1412              		.loc 1 871 51
 1413 017a 1A43     		orrs	r2, r2, r3
 873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****              (uint32_t)sTamper->PrechargeDuration | \
 1414              		.loc 1 873 31
 1415 017c 3B68     		ldr	r3, [r7]
 1416 017e DB69     		ldr	r3, [r3, #28]
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 41


 872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****              (uint32_t)sTamper->SamplingFrequency | \
 1417              		.loc 1 872 51
 1418 0180 1A43     		orrs	r2, r2, r3
 874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****              (uint32_t)sTamper->TamperPullUp      | \
 1419              		.loc 1 874 31
 1420 0182 3B68     		ldr	r3, [r7]
 1421 0184 1B6A     		ldr	r3, [r3, #32]
 873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****              (uint32_t)sTamper->PrechargeDuration | \
 1422              		.loc 1 873 51
 1423 0186 1A43     		orrs	r2, r2, r3
 875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****              (uint32_t)sTamper->TimeStampOnTamperDetection);
 1424              		.loc 1 875 31
 1425 0188 3B68     		ldr	r3, [r7]
 1426 018a 5B6A     		ldr	r3, [r3, #36]
 874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****              (uint32_t)sTamper->TamperPullUp      | \
 1427              		.loc 1 874 51
 1428 018c 1343     		orrs	r3, r3, r2
 871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****              (uint32_t)sTamper->SamplingFrequency | \
 1429              		.loc 1 871 10
 1430 018e FA68     		ldr	r2, [r7, #12]
 1431 0190 1343     		orrs	r3, r3, r2
 1432 0192 FB60     		str	r3, [r7, #12]
 876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable interrupt on selected tamper */
 878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmpreg |= (uint32_t)sTamper->Interrupt;
 1433              		.loc 1 878 30
 1434 0194 3B68     		ldr	r3, [r7]
 1435 0196 5B68     		ldr	r3, [r3, #4]
 1436              		.loc 1 878 10
 1437 0198 FA68     		ldr	r2, [r7, #12]
 1438 019a 1343     		orrs	r3, r3, r2
 1439 019c FB60     		str	r3, [r7, #12]
 879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Copy desired configuration into configuration register */
 881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->Instance->TAMPCR = tmpreg;
 1440              		.loc 1 881 7
 1441 019e 7B68     		ldr	r3, [r7, #4]
 1442 01a0 1B68     		ldr	r3, [r3]
 1443              		.loc 1 881 26
 1444 01a2 FA68     		ldr	r2, [r7, #12]
 1445 01a4 1A64     		str	r2, [r3, #64]
 882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* RTC Tamper Interrupt Configuration: EXTI configuration */
 884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(DUAL_CORE)
 885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (HAL_GetCurrentCPUID() == CM7_CPUID)
 886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     __HAL_RTC_TAMPER_TIMESTAMP_EXTI_ENABLE_IT();
 888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   else
 890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     __HAL_RTC_TAMPER_TIMESTAMP_EXTID2_ENABLE_IT();
 892:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 893:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #else /* SINGLE_CORE */
 894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_TIMESTAMP_EXTI_ENABLE_IT();
 1446              		.loc 1 894 3
 1447 01a6 0F4B     		ldr	r3, .L65+4
 1448 01a8 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 42


 1449 01aa 0E4A     		ldr	r2, .L65+4
 1450 01ac 43F48023 		orr	r3, r3, #262144
 1451 01b0 1360     		str	r3, [r2]
 895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* DUAL_CORE */
 896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_TIMESTAMP_EXTI_ENABLE_RISING_EDGE();
 1452              		.loc 1 897 3
 1453 01b2 4FF0B043 		mov	r3, #1476395008
 1454 01b6 1B68     		ldr	r3, [r3]
 1455 01b8 4FF0B042 		mov	r2, #1476395008
 1456 01bc 43F48023 		orr	r3, r3, #262144
 1457 01c0 1360     		str	r3, [r2]
 898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 1458              		.loc 1 899 15
 1459 01c2 7B68     		ldr	r3, [r7, #4]
 1460 01c4 0122     		movs	r2, #1
 1461 01c6 83F82120 		strb	r2, [r3, #33]
 900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Unlocked */
 902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 1462              		.loc 1 902 3
 1463 01ca 7B68     		ldr	r3, [r7, #4]
 1464 01cc 0022     		movs	r2, #0
 1465 01ce 83F82020 		strb	r2, [r3, #32]
 903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 1466              		.loc 1 904 10
 1467 01d2 0023     		movs	r3, #0
 1468              	.L49:
 905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 1469              		.loc 1 905 1
 1470 01d4 1846     		mov	r0, r3
 1471 01d6 1437     		adds	r7, r7, #20
 1472              	.LCFI44:
 1473              		.cfi_def_cfa_offset 4
 1474 01d8 BD46     		mov	sp, r7
 1475              	.LCFI45:
 1476              		.cfi_def_cfa_register 13
 1477              		@ sp needed
 1478 01da 5DF8047B 		ldr	r7, [sp], #4
 1479              	.LCFI46:
 1480              		.cfi_restore 7
 1481              		.cfi_def_cfa_offset 0
 1482 01de 7047     		bx	lr
 1483              	.L66:
 1484              		.align	2
 1485              	.L65:
 1486 01e0 7F00FFFF 		.word	-65409
 1487 01e4 80000058 		.word	1476395136
 1488              		.cfi_endproc
 1489              	.LFE151:
 1491              		.section	.text.HAL_RTCEx_DeactivateTamper,"ax",%progbits
 1492              		.align	1
 1493              		.global	HAL_RTCEx_DeactivateTamper
 1494              		.syntax unified
 1495              		.thumb
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 43


 1496              		.thumb_func
 1498              	HAL_RTCEx_DeactivateTamper:
 1499              	.LFB152:
 906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* TAMP */
 907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 908:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(TAMP)
 909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
 910:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Deactivate Tamper.
 911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  Tamper Selected tamper pin.
 913:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *         This parameter can be a combination of the following values:
 914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *         @arg RTC_TAMPER_1
 915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *         @arg RTC_TAMPER_2
 916:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
 917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
 918:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_DeactivateTamper(RTC_HandleTypeDef * hrtc, uint32_t Tamper)
 919:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 920:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Point on TAMPER registers base address */
 921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   TAMP_TypeDef *tamp = (TAMP_TypeDef *)((uint32_t)hrtc->Instance + TAMP_OFFSET);
 922:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER(Tamper));
 924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the selected Tamper pin */
 926:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tamp->CR1 &= ~Tamper;
 927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 928:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the selected Tamper interrupt */
 929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tamp->IER &= ~Tamper;
 930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 931:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clear the selected tamper flags in SR register by setting corresponding bits in SCR register *
 932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tamp->SCR = Tamper;
 933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 934:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clear the selected tamper configuration (trigger, mask flag, and no-erase) */
 935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tamp->CR2 &= ~((Tamper << TAMP_CR2_TAMP1TRG_Pos) | (Tamper << TAMP_CR2_TAMP1MSK_Pos) | (Tamper <<
 936:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 939:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #else
 940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
 941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Deactivate Tamper.
 942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  Tamper Selected tamper pin.
 944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *         This parameter can be any combination of the following values:
 945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *         @arg RTC_TAMPER_1
 946:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *         @arg RTC_TAMPER_2 (*)
 947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *         @arg RTC_TAMPER_3
 948:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *        (*) Not applicable to all devices.
 949:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
 950:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
 951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_DeactivateTamper(RTC_HandleTypeDef * hrtc, uint32_t Tamper)
 952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 1500              		.loc 1 952 1
 1501              		.cfi_startproc
 1502              		@ args = 0, pretend = 0, frame = 8
 1503              		@ frame_needed = 1, uses_anonymous_args = 0
 1504              		@ link register save eliminated.
 1505 0000 80B4     		push	{r7}
 1506              	.LCFI47:
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 44


 1507              		.cfi_def_cfa_offset 4
 1508              		.cfi_offset 7, -4
 1509 0002 83B0     		sub	sp, sp, #12
 1510              	.LCFI48:
 1511              		.cfi_def_cfa_offset 16
 1512 0004 00AF     		add	r7, sp, #0
 1513              	.LCFI49:
 1514              		.cfi_def_cfa_register 7
 1515 0006 7860     		str	r0, [r7, #4]
 1516 0008 3960     		str	r1, [r7]
 953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER(Tamper));
 954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Locked */
 956:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 1517              		.loc 1 956 3
 1518 000a 7B68     		ldr	r3, [r7, #4]
 1519 000c 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 1520 0010 012B     		cmp	r3, #1
 1521 0012 01D1     		bne	.L68
 1522              		.loc 1 956 3 is_stmt 0 discriminator 1
 1523 0014 0223     		movs	r3, #2
 1524              		.loc 1 956 3
 1525 0016 40E0     		b	.L69
 1526              	.L68:
 1527              		.loc 1 956 3 discriminator 2
 1528 0018 7B68     		ldr	r3, [r7, #4]
 1529 001a 0122     		movs	r2, #1
 1530 001c 83F82020 		strb	r2, [r3, #32]
 957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 1531              		.loc 1 958 15 is_stmt 1
 1532 0020 7B68     		ldr	r3, [r7, #4]
 1533 0022 0222     		movs	r2, #2
 1534 0024 83F82120 		strb	r2, [r3, #33]
 959:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the selected Tamper pin */
 961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->Instance->TAMPCR &= ((uint32_t)~Tamper);
 1535              		.loc 1 961 7
 1536 0028 7B68     		ldr	r3, [r7, #4]
 1537 002a 1B68     		ldr	r3, [r3]
 1538              		.loc 1 961 17
 1539 002c 196C     		ldr	r1, [r3, #64]
 1540              		.loc 1 961 40
 1541 002e 3B68     		ldr	r3, [r7]
 1542 0030 DA43     		mvns	r2, r3
 1543              		.loc 1 961 7
 1544 0032 7B68     		ldr	r3, [r7, #4]
 1545 0034 1B68     		ldr	r3, [r3]
 1546              		.loc 1 961 26
 1547 0036 0A40     		ands	r2, r2, r1
 1548 0038 1A64     		str	r2, [r3, #64]
 962:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPxIE_SUPPORT)
 964:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the selected Tamper interrupt */
 965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if ((Tamper & RTC_TAMPER_1) != 0U)
 1549              		.loc 1 965 15
 1550 003a 3B68     		ldr	r3, [r7]
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 45


 1551 003c 03F00103 		and	r3, r3, #1
 1552              		.loc 1 965 6
 1553 0040 002B     		cmp	r3, #0
 1554 0042 07D0     		beq	.L70
 966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 967:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     hrtc->Instance->TAMPCR &= ((uint32_t)~(RTC_IT_TAMP | RTC_IT_TAMP1));
 1555              		.loc 1 967 9
 1556 0044 7B68     		ldr	r3, [r7, #4]
 1557 0046 1B68     		ldr	r3, [r3]
 1558              		.loc 1 967 19
 1559 0048 196C     		ldr	r1, [r3, #64]
 1560              		.loc 1 967 9
 1561 004a 7B68     		ldr	r3, [r7, #4]
 1562 004c 1A68     		ldr	r2, [r3]
 1563              		.loc 1 967 28
 1564 004e 164B     		ldr	r3, .L73
 1565 0050 0B40     		ands	r3, r3, r1
 1566 0052 1364     		str	r3, [r2, #64]
 1567              	.L70:
 968:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPER2_SUPPORT)
 971:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if ((Tamper & RTC_TAMPER_2) != 0U)
 1568              		.loc 1 971 15
 1569 0054 3B68     		ldr	r3, [r7]
 1570 0056 03F00803 		and	r3, r3, #8
 1571              		.loc 1 971 6
 1572 005a 002B     		cmp	r3, #0
 1573 005c 07D0     		beq	.L71
 972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     hrtc->Instance->TAMPCR &= ((uint32_t)~(RTC_IT_TAMP | RTC_IT_TAMP2));
 1574              		.loc 1 973 9
 1575 005e 7B68     		ldr	r3, [r7, #4]
 1576 0060 1B68     		ldr	r3, [r3]
 1577              		.loc 1 973 19
 1578 0062 196C     		ldr	r1, [r3, #64]
 1579              		.loc 1 973 9
 1580 0064 7B68     		ldr	r3, [r7, #4]
 1581 0066 1A68     		ldr	r2, [r3]
 1582              		.loc 1 973 28
 1583 0068 104B     		ldr	r3, .L73+4
 1584 006a 0B40     		ands	r3, r3, r1
 1585 006c 1364     		str	r3, [r2, #64]
 1586              	.L71:
 974:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPER2_SUPPORT */
 976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 977:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if ((Tamper & RTC_TAMPER_3) != 0U)
 1587              		.loc 1 977 15
 1588 006e 3B68     		ldr	r3, [r7]
 1589 0070 03F02003 		and	r3, r3, #32
 1590              		.loc 1 977 6
 1591 0074 002B     		cmp	r3, #0
 1592 0076 07D0     		beq	.L72
 978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     hrtc->Instance->TAMPCR &= ((uint32_t)~(RTC_IT_TAMP | RTC_IT_TAMP3));
 1593              		.loc 1 979 9
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 46


 1594 0078 7B68     		ldr	r3, [r7, #4]
 1595 007a 1B68     		ldr	r3, [r3]
 1596              		.loc 1 979 19
 1597 007c 196C     		ldr	r1, [r3, #64]
 1598              		.loc 1 979 9
 1599 007e 7B68     		ldr	r3, [r7, #4]
 1600 0080 1A68     		ldr	r2, [r3]
 1601              		.loc 1 979 28
 1602 0082 0B4B     		ldr	r3, .L73+8
 1603 0084 0B40     		ands	r3, r3, r1
 1604 0086 1364     		str	r3, [r2, #64]
 1605              	.L72:
 980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 981:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #else
 982:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the Tamper interrupt */
 983:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->Instance->TAMPCR &= (uint32_t)~(RTC_IT_TAMP);
 984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPxIE_SUPPORT */
 985:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 986:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 1606              		.loc 1 986 15
 1607 0088 7B68     		ldr	r3, [r7, #4]
 1608 008a 0122     		movs	r2, #1
 1609 008c 83F82120 		strb	r2, [r3, #33]
 987:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Unlocked */
 989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 1610              		.loc 1 989 3
 1611 0090 7B68     		ldr	r3, [r7, #4]
 1612 0092 0022     		movs	r2, #0
 1613 0094 83F82020 		strb	r2, [r3, #32]
 990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 1614              		.loc 1 991 10
 1615 0098 0023     		movs	r3, #0
 1616              	.L69:
 992:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 1617              		.loc 1 992 1
 1618 009a 1846     		mov	r0, r3
 1619 009c 0C37     		adds	r7, r7, #12
 1620              	.LCFI50:
 1621              		.cfi_def_cfa_offset 4
 1622 009e BD46     		mov	sp, r7
 1623              	.LCFI51:
 1624              		.cfi_def_cfa_register 13
 1625              		@ sp needed
 1626 00a0 5DF8047B 		ldr	r7, [sp], #4
 1627              	.LCFI52:
 1628              		.cfi_restore 7
 1629              		.cfi_def_cfa_offset 0
 1630 00a4 7047     		bx	lr
 1631              	.L74:
 1632 00a6 00BF     		.align	2
 1633              	.L73:
 1634 00a8 FBFFFEFF 		.word	-65541
 1635 00ac FBFFF7FF 		.word	-524293
 1636 00b0 FBFFBFFF 		.word	-4194309
 1637              		.cfi_endproc
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 47


 1638              	.LFE152:
 1640              		.section	.text.HAL_RTCEx_TamperTimeStampIRQHandler,"ax",%progbits
 1641              		.align	1
 1642              		.global	HAL_RTCEx_TamperTimeStampIRQHandler
 1643              		.syntax unified
 1644              		.thumb
 1645              		.thumb_func
 1647              	HAL_RTCEx_TamperTimeStampIRQHandler:
 1648              	.LFB153:
 993:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* TAMP */
 994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(TAMP)
 996:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
 997:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Set Internal Tamper
 998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  sIntTamper Pointer to Internal Tamper Structure.
1000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
1001:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetInternalTamper(RTC_HandleTypeDef *hrtc, const RTC_InternalTamperType
1003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
1004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check the parameters */
1005:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_INTERNAL_TAMPER(sIntTamper->IntTamper));
1006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_TIMESTAMPONTAMPER_DETECTION(sIntTamper->TimeStampOnTamperDetection));
1007:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1008:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Time-Stamp on internal tamper */
1009:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (READ_BIT(RTC->CR, RTC_CR_TAMPTS) != sIntTamper->TimeStampOnTamperDetection)
1010:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1011:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
1012:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     MODIFY_REG(RTC->CR, RTC_CR_TAMPTS, sIntTamper->TimeStampOnTamperDetection);
1013:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
1014:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1016:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Control register 1 */
1017:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   SET_BIT(TAMP->CR1, sIntTamper->IntTamper);
1018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1019:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
1020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
1021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1023:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Set Internal Tamper in interrupt mode
1024:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  sIntTamper Pointer to Internal Tamper Structure.
1026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
1027:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetInternalTamper_IT(RTC_HandleTypeDef *hrtc, const RTC_InternalTamperT
1029:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
1030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check the parameters */
1031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_INTERNAL_TAMPER(sIntTamper->IntTamper));
1032:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_TIMESTAMPONTAMPER_DETECTION(sIntTamper->TimeStampOnTamperDetection));
1033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Time-stamp on internal tamper */
1035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (READ_BIT(RTC->CR, RTC_CR_TAMPTS) != sIntTamper->TimeStampOnTamperDetection)
1036:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
1038:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     MODIFY_REG(RTC->CR, RTC_CR_TAMPTS, sIntTamper->TimeStampOnTamperDetection);
1039:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
1040:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 48


1041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* RTC Tamper Interrupt Configuration: EXTI configuration */
1043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_TIMESTAMP_EXTI_ENABLE_IT();
1044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_TIMESTAMP_EXTI_ENABLE_RISING_FALLING_EDGE();
1045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Interrupt enable register */
1046:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   SET_BIT(TAMP->IER, sIntTamper->IntTamper);
1047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1048:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Control register 1 */
1049:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   SET_BIT(TAMP->CR1, sIntTamper->IntTamper);
1050:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1051:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
1052:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
1053:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1054:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Deactivate Internal Tamper.
1056:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  IntTamper Selected internal tamper event.
1058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *          This parameter can be any combination of existing internal tampers.
1059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
1060:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_DeactivateInternalTamper(RTC_HandleTypeDef *hrtc, uint32_t IntTamper)
1062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
1063:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   UNUSED(hrtc);
1064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_INTERNAL_TAMPER(IntTamper));
1065:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the selected Tamper pin */
1067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   CLEAR_BIT(TAMP->CR1, IntTamper);
1068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1069:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clear internal tamper interrupt mode configuration */
1070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   CLEAR_BIT(TAMP->IER, IntTamper);
1071:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1072:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clear internal tamper interrupt */
1073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   WRITE_REG(TAMP->SCR, IntTamper);
1074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1075:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
1076:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
1077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1078:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1079:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Set all active Tampers at the same time.
1080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  sAllTamper Pointer to active Tamper Structure.
1082:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
1083:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1084:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetActiveTampers(RTC_HandleTypeDef *hrtc, const RTC_ActiveTampersTypeDe
1085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
1086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t IER, CR1, CR2, ATCR1, CR, i, tickstart;
1087:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1088:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #ifdef  USE_FULL_ASSERT
1089:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   for (i = 0; i < RTC_TAMP_NB; i++)
1090:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1091:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     assert_param(IS_RTC_TAMPER_ERASE_MODE(sAllTamper->TampInput[i].NoErase));
1092:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     assert_param(IS_RTC_TAMPER_MASKFLAG_STATE(sAllTamper->TampInput[i].MaskFlag));
1093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Mask flag only supported by TAMPER 1, 2, and 3 */
1094:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     assert_param(!((sAllTamper->TampInput[i].MaskFlag != RTC_TAMPERMASK_FLAG_DISABLE) && (i > RTC_T
1095:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1096:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_TIMESTAMPONTAMPER_DETECTION(sAllTamper->TimeStampOnTamperDetection));
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 49


1098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* USE_FULL_ASSERT */
1099:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Active Tampers must not be already enabled */
1101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (READ_BIT(TAMP->ATOR, TAMP_ATOR_INITS) != 0U)
1102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Disable all active tampers with HAL_RTCEx_DeactivateActiveTampers */
1104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if (HAL_RTCEx_DeactivateActiveTampers(hrtc) != HAL_OK)
1105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
1106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       return HAL_ERROR;
1107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
1108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Set TimeStamp on tamper detection */
1111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   CR = READ_REG(RTC->CR);
1112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if ((CR & RTC_CR_TAMPTS) != (sAllTamper->TimeStampOnTamperDetection))
1113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
1115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     MODIFY_REG(RTC->CR, RTC_CR_TAMPTS, sAllTamper->TimeStampOnTamperDetection);
1116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
1117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   CR1 = READ_REG(TAMP->CR1);
1120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   CR2 = READ_REG(TAMP->CR2);
1121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   IER = READ_REG(TAMP->IER);
1122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Set common parameters */
1124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   ATCR1 = (sAllTamper->ActiveFilter | (sAllTamper->ActiveOutputChangePeriod << TAMP_ATCR1_ATPER_Pos
1125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Set specific parameters for each active tamper inputs if enable */
1127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   for (i = 0; i < RTC_TAMP_NB; i++)
1128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if (sAllTamper->TampInput[i].Enable != RTC_ATAMP_DISABLE)
1130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
1131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       CR1 |= (TAMP_CR1_TAMP1E << i);
1132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       ATCR1 |= (TAMP_ATCR1_TAMP1AM << i);
1133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       if (sAllTamper->TampInput[i].Interrupt != RTC_ATAMP_INTERRUPT_DISABLE)
1135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       {
1136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         /* RTC Tamper Interrupt Configuration: EXTI configuration */
1137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         __HAL_RTC_TAMPER_TIMESTAMP_EXTI_ENABLE_IT();
1138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         __HAL_RTC_TAMPER_TIMESTAMP_EXTI_ENABLE_RISING_EDGE();
1139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         /* Interrupt enable register */
1141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         IER |= (TAMP_IER_TAMP1IE << i);
1142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       }
1143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       if (sAllTamper->TampInput[i].MaskFlag != RTC_TAMPERMASK_FLAG_DISABLE)
1145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       {
1146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         CR2 |= (TAMP_CR2_TAMP1MSK << i);
1147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       }
1148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       if (sAllTamper->TampInput[i].NoErase != RTC_TAMPER_ERASE_BACKUP_ENABLE)
1150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       {
1151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         CR2 |= (TAMP_CR2_TAMP1NOERASE << i);
1152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       }
1153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       /* Set ATOSHARE and configure ATOSELx[] in case of output sharing */
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 50


1155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       if (sAllTamper->TampInput[i].Output != i)
1156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       {
1157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         ATCR1 |= TAMP_ATCR1_ATOSHARE;
1158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         ATCR1 |= sAllTamper->TampInput[i].Output << ((2u * i) + TAMP_ATCR1_ATOSEL1_Pos);
1159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       }
1160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
1161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   WRITE_REG(TAMP->IER, IER);
1164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   WRITE_REG(TAMP->IER, IER);
1165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   WRITE_REG(TAMP->ATCR1, ATCR1);
1166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(TAMP_ATCR2_ATOSEL1)
1167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   WRITE_REG(TAMP->ATCR2, ATCR2);
1168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* TAMP_ATCR2_ATOSEL1 */
1169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   WRITE_REG(TAMP->CR2, CR2);
1170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   WRITE_REG(TAMP->CR1, CR1);
1171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Write seed */
1173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   for (i = 0; i < RTC_ATAMP_SEED_NB_UINT32; i++)
1174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     WRITE_REG(TAMP->ATSEEDR, sAllTamper->Seed[i]);
1176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Wait till RTC SEEDF flag is set and if timeout is reached exit */
1179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tickstart = HAL_GetTick();
1180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   while (READ_BIT(TAMP->ATOR,  TAMP_ATOR_SEEDF) != 0u)
1181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((HAL_GetTick() - tickstart) > RTC_TIMEOUT_VALUE)
1183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
1184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       hrtc->State = HAL_RTC_STATE_TIMEOUT;
1185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       return HAL_TIMEOUT;
1186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
1187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
1190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
1191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Write a new seed. Active tamper must be enabled.
1194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  pSeed Pointer to active tamper seed values.
1196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
1197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetActiveSeed(RTC_HandleTypeDef *hrtc, const uint32_t *pSeed)
1199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
1200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t i, tickstart;
1201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Active Tampers must be enabled */
1203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (READ_BIT(TAMP->ATOR,  TAMP_ATOR_INITS) == 0U)
1204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     return HAL_ERROR;
1206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   for (i = 0; i < RTC_ATAMP_SEED_NB_UINT32; i++)
1209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     WRITE_REG(TAMP->ATSEEDR, pSeed[i]);
1211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 51


1212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Wait till RTC SEEDF flag is set and if timeout is reached exit */
1214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tickstart = HAL_GetTick();
1215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   while (READ_BIT(TAMP->ATOR,  TAMP_ATOR_SEEDF) != 0U)
1216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((HAL_GetTick() - tickstart) > RTC_TIMEOUT_VALUE)
1218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
1219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       hrtc->State = HAL_RTC_STATE_TIMEOUT;
1220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       return HAL_TIMEOUT;
1221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
1222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
1225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
1226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Deactivate all Active Tampers at the same time.
1229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
1231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_DeactivateActiveTampers(RTC_HandleTypeDef *hrtc)
1233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
1234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Get Active tampers */
1235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t ATamp_mask = READ_BIT(TAMP->ATCR1, TAMP_ALL);
1236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   UNUSED(hrtc);
1238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable all actives tampers but not passives tampers */
1239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   CLEAR_BIT(TAMP->CR1, ATamp_mask);
1240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable no erase and mask */
1241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   CLEAR_BIT(TAMP->CR2, (ATamp_mask | ((ATamp_mask & (TAMP_ATCR1_TAMP1AM | TAMP_ATCR1_TAMP2AM | TAMP
1242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clear tamper interrupt and event flags (WO register) of all actives tampers but not passives t
1244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   WRITE_REG(TAMP->SCR, ATamp_mask);
1245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clear all active tampers interrupt mode configuration but not passives tampers */
1247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   CLEAR_BIT(TAMP->IER, ATamp_mask);
1248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   CLEAR_BIT(TAMP->ATCR1, TAMP_ALL | TAMP_ATCR1_ATCKSEL | TAMP_ATCR1_ATPER | \
1250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             TAMP_ATCR1_ATOSHARE | TAMP_ATCR1_FLTEN);
1251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(TAMP_ATCR2_ATOSEL1)
1253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   CLEAR_BIT(TAMP->ATCR2, TAMP_ATCR2_ATOSEL1 | TAMP_ATCR2_ATOSEL2 | TAMP_ATCR2_ATOSEL3 | TAMP_ATCR2_
1254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             TAMP_ATCR2_ATOSEL5 | TAMP_ATCR2_ATOSEL6 | TAMP_ATCR2_ATOSEL7 | TAMP_ATCR2_ATOSEL8);
1255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* TAMP_ATCR2_ATOSEL1 */
1256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
1258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
1259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* TAMP */
1260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @}
1263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /** @addtogroup RTCEx_Exported_Functions_Group1
1266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****  *  @brief   RTC TimeStamp and Tamper functions
1267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****  *
1268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** * @{
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 52


1269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** */
1270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Handle Tamper and TimeStamp interrupt request.
1273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval None
1275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(TAMP)
1277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** void HAL_RTCEx_TamperTimeStampIRQHandler(RTC_HandleTypeDef *hrtc)
1278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
1279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Point on TAMPER registers base address */
1281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   TAMP_TypeDef *tamp = (TAMP_TypeDef *)((uint32_t)hrtc->Instance + TAMP_OFFSET);
1282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clear the EXTI's Flag for RTC TimeStamp and Tamper */
1284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_TIMESTAMP_EXTI_CLEAR_FLAG();
1285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if ((hrtc->Instance->MISR & RTC_MISR_TSMF) != 0u)
1287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
1289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Call TimeStampEvent registered Callback */
1290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     hrtc->TimeStampEventCallback(hrtc);
1291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #else
1292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     HAL_RTCEx_TimeStampEventCallback(hrtc);
1293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* USE_HAL_RTC_REGISTER_CALLBACKS */
1294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Not immediately clear flags because the content of RTC_TSTR and RTC_TSDR are cleared when TS
1295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     hrtc->Instance->SCR = RTC_SCR_CTSF;
1296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Get interrupt status */
1299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tmp = tamp->MISR;
1300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Immediately clear flags */
1302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tamp->SCR = tmp;
1303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check Tamper 1 status */
1305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if ((tmp & RTC_TAMPER_1) == RTC_TAMPER_1)
1306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
1308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Call Tamper 1 Event registered Callback */
1309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     hrtc->Tamper1EventCallback(hrtc);
1310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #else
1311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Tamper 1 callback */
1312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     HAL_RTCEx_Tamper1EventCallback(hrtc);
1313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* USE_HAL_RTC_REGISTER_CALLBACKS */
1314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPER2_SUPPORT)
1317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check Tamper 2 status */
1318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if ((tmp & RTC_TAMPER_2) == RTC_TAMPER_2)
1319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
1321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Call Tamper 2 Event registered Callback */
1322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     hrtc->Tamper2EventCallback(hrtc);
1323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #else
1324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Tamper 2 callback */
1325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     HAL_RTCEx_Tamper2EventCallback(hrtc);
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 53


1326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* USE_HAL_RTC_REGISTER_CALLBACKS */
1327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPER2_SUPPORT */
1329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check Tamper 3 status */
1331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if ((tmp & RTC_TAMPER_3) == RTC_TAMPER_3)
1332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
1334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Call Tamper 3 Event registered Callback */
1335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     hrtc->Tamper3EventCallback(hrtc);
1336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #else
1337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Tamper 3 callback */
1338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     HAL_RTCEx_Tamper3EventCallback(hrtc);
1339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* USE_HAL_RTC_REGISTER_CALLBACKS */
1340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check Internal Tamper 1 status */
1343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if ((tmp & RTC_INT_TAMPER_1) == RTC_INT_TAMPER_1)
1344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
1346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Call Internal Tamper 1 Event registered callback */
1347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     hrtc->InternalTamper1EventCallback(hrtc);
1348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #else
1349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Call Internal Tamper 1 Event by-default callback */
1350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     HAL_RTCEx_InternalTamper1EventCallback(hrtc);
1351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* USE_HAL_RTC_REGISTER_CALLBACKS */
1352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check Internal Tamper 2 status */
1355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if ((tmp & RTC_INT_TAMPER_2) == RTC_INT_TAMPER_2)
1356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
1358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Call Internal Tamper 2 Event registered callback */
1359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     hrtc->InternalTamper2EventCallback(hrtc);
1360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #else
1361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Call Internal Tamper 2 Event by-default callback */
1362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     HAL_RTCEx_InternalTamper2EventCallback(hrtc);
1363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* USE_HAL_RTC_REGISTER_CALLBACKS */
1364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check Internal Tamper 3 status */
1367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if ((tmp & RTC_INT_TAMPER_3) == RTC_INT_TAMPER_3)
1368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
1370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Call Internal Tamper 3 Event registered callback */
1371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     hrtc->InternalTamper3EventCallback(hrtc);
1372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #else
1373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Call Internal Tamper 3 Event by-default callback */
1374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     HAL_RTCEx_InternalTamper3EventCallback(hrtc);
1375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* USE_HAL_RTC_REGISTER_CALLBACKS */
1376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check Internal Tamper 4 status */
1379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if ((tmp & RTC_INT_TAMPER_4) == RTC_INT_TAMPER_4)
1380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
1382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Call Internal Tamper 4 Event registered callback */
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 54


1383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     hrtc->InternalTamper4EventCallback(hrtc);
1384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #else
1385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Call Internal Tamper 4 Event by-default callback */
1386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     HAL_RTCEx_InternalTamper4EventCallback(hrtc);
1387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* USE_HAL_RTC_REGISTER_CALLBACKS */
1388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check Internal Tamper 5 status */
1391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if ((tmp & RTC_INT_TAMPER_5) == RTC_INT_TAMPER_5)
1392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
1394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Call Internal Tamper 5 Event registered callback */
1395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     hrtc->InternalTamper5EventCallback(hrtc);
1396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #else
1397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Call Internal Tamper 5 Event by-default callback */
1398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     HAL_RTCEx_InternalTamper5EventCallback(hrtc);
1399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* USE_HAL_RTC_REGISTER_CALLBACKS */
1400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check Internal Tamper 6 status */
1403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if ((tmp & RTC_INT_TAMPER_6) == RTC_INT_TAMPER_6)
1404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
1406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Call Internal Tamper 6 Event registered callback */
1407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     hrtc->InternalTamper6EventCallback(hrtc);
1408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #else
1409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Call Internal Tamper 6 Event by-default callback */
1410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     HAL_RTCEx_InternalTamper6EventCallback(hrtc);
1411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* USE_HAL_RTC_REGISTER_CALLBACKS */
1412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check Internal Tamper 8 status */
1415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if ((tmp & RTC_INT_TAMPER_8) == RTC_INT_TAMPER_8)
1416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
1418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Call Internal Tamper 8 Event registered callback */
1419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     hrtc->InternalTamper8EventCallback(hrtc);
1420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #else
1421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Call Internal Tamper 8 Event by-default callback */
1422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     HAL_RTCEx_InternalTamper8EventCallback(hrtc);
1423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* USE_HAL_RTC_REGISTER_CALLBACKS */
1424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Change RTC state */
1427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
1428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
1429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #else
1430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** void HAL_RTCEx_TamperTimeStampIRQHandler(RTC_HandleTypeDef *hrtc)
1431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 1649              		.loc 1 1431 1
 1650              		.cfi_startproc
 1651              		@ args = 0, pretend = 0, frame = 8
 1652              		@ frame_needed = 1, uses_anonymous_args = 0
 1653 0000 80B5     		push	{r7, lr}
 1654              	.LCFI53:
 1655              		.cfi_def_cfa_offset 8
 1656              		.cfi_offset 7, -8
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 55


 1657              		.cfi_offset 14, -4
 1658 0002 82B0     		sub	sp, sp, #8
 1659              	.LCFI54:
 1660              		.cfi_def_cfa_offset 16
 1661 0004 00AF     		add	r7, sp, #0
 1662              	.LCFI55:
 1663              		.cfi_def_cfa_register 7
 1664 0006 7860     		str	r0, [r7, #4]
1432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clear the EXTI's Flag for RTC TimeStamp and Tamper */
1433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(DUAL_CORE)
1434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (HAL_GetCurrentCPUID() == CM7_CPUID)
1435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     __HAL_RTC_TAMPER_TIMESTAMP_EXTI_CLEAR_FLAG();
1437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   else
1439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     __HAL_RTC_TAMPER_TIMESTAMP_EXTID2_CLEAR_FLAG();
1441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #else /* SINGLE_CORE */
1443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_TIMESTAMP_EXTI_CLEAR_FLAG();
 1665              		.loc 1 1443 3
 1666 0008 394B     		ldr	r3, .L80
 1667 000a 4FF48022 		mov	r2, #262144
 1668 000e 9A60     		str	r2, [r3, #8]
1444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* DUAL_CORE */
1445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Get the TimeStamp interrupt source enable status */
1447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (__HAL_RTC_TIMESTAMP_GET_IT_SOURCE(hrtc, RTC_IT_TS) != 0U)
 1669              		.loc 1 1447 7
 1670 0010 7B68     		ldr	r3, [r7, #4]
 1671 0012 1B68     		ldr	r3, [r3]
 1672 0014 9B68     		ldr	r3, [r3, #8]
 1673 0016 03F40043 		and	r3, r3, #32768
 1674              		.loc 1 1447 6
 1675 001a 002B     		cmp	r3, #0
 1676 001c 12D0     		beq	.L76
1448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Get the pending status of the TIMESTAMP Interrupt */
1450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if (__HAL_RTC_TIMESTAMP_GET_FLAG(hrtc, RTC_FLAG_TSF) != 0U)
 1677              		.loc 1 1450 9
 1678 001e 7B68     		ldr	r3, [r7, #4]
 1679 0020 1B68     		ldr	r3, [r3]
 1680 0022 DB68     		ldr	r3, [r3, #12]
 1681 0024 03F40063 		and	r3, r3, #2048
 1682              		.loc 1 1450 8
 1683 0028 002B     		cmp	r3, #0
 1684 002a 0BD0     		beq	.L76
1451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
1452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       /* TIMESTAMP callback */
1453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
1454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       hrtc->TimeStampEventCallback(hrtc);
1455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #else  /* (USE_HAL_RTC_REGISTER_CALLBACKS == 1) */
1456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       HAL_RTCEx_TimeStampEventCallback(hrtc);
 1685              		.loc 1 1456 7
 1686 002c 7868     		ldr	r0, [r7, #4]
 1687 002e FFF7FEFF 		bl	HAL_RTCEx_TimeStampEventCallback
1457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* (USE_HAL_RTC_REGISTER_CALLBACKS == 1) */
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 56


1458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       /* Clear the TIMESTAMP interrupt pending bit (this will clear timestamp time and date registe
1460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       __HAL_RTC_TIMESTAMP_CLEAR_FLAG(hrtc, RTC_FLAG_TSF);
 1688              		.loc 1 1460 7
 1689 0032 7B68     		ldr	r3, [r7, #4]
 1690 0034 1B68     		ldr	r3, [r3]
 1691 0036 DB68     		ldr	r3, [r3, #12]
 1692 0038 DAB2     		uxtb	r2, r3
 1693 003a 7B68     		ldr	r3, [r7, #4]
 1694 003c 1B68     		ldr	r3, [r3]
 1695 003e 62F40862 		orn	r2, r2, #2176
 1696 0042 DA60     		str	r2, [r3, #12]
 1697              	.L76:
1461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
1462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Get the Tamper 1 interrupt source enable status */
1465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPxIE_SUPPORT)
1466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (__HAL_RTC_TAMPER_GET_IT_SOURCE(hrtc, RTC_IT_TAMP | RTC_IT_TAMP1) != 0U)
 1698              		.loc 1 1466 7
 1699 0044 7B68     		ldr	r3, [r7, #4]
 1700 0046 1B68     		ldr	r3, [r3]
 1701 0048 1A6C     		ldr	r2, [r3, #64]
 1702 004a 2A4B     		ldr	r3, .L80+4
 1703 004c 1340     		ands	r3, r3, r2
 1704              		.loc 1 1466 6
 1705 004e 002B     		cmp	r3, #0
 1706 0050 12D0     		beq	.L77
1467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #else
1468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (__HAL_RTC_TAMPER_GET_IT_SOURCE(hrtc, RTC_IT_TAMP) != 0U)
1469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPxIE_SUPPORT */
1470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Get the pending status of the Tamper 1 Interrupt */
1472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if (__HAL_RTC_TAMPER_GET_FLAG(hrtc, RTC_FLAG_TAMP1F) != 0U)
 1707              		.loc 1 1472 9
 1708 0052 7B68     		ldr	r3, [r7, #4]
 1709 0054 1B68     		ldr	r3, [r3]
 1710 0056 DB68     		ldr	r3, [r3, #12]
 1711 0058 03F40053 		and	r3, r3, #8192
 1712              		.loc 1 1472 8
 1713 005c 002B     		cmp	r3, #0
 1714 005e 0BD0     		beq	.L77
1473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
1474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       /* Clear the Tamper 1 interrupt pending bit */
1475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       __HAL_RTC_TAMPER_CLEAR_FLAG(hrtc, RTC_FLAG_TAMP1F);
 1715              		.loc 1 1475 7
 1716 0060 7B68     		ldr	r3, [r7, #4]
 1717 0062 1B68     		ldr	r3, [r3]
 1718 0064 DB68     		ldr	r3, [r3, #12]
 1719 0066 DAB2     		uxtb	r2, r3
 1720 0068 7B68     		ldr	r3, [r7, #4]
 1721 006a 1B68     		ldr	r3, [r3]
 1722 006c 62F40252 		orn	r2, r2, #8320
 1723 0070 DA60     		str	r2, [r3, #12]
1476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       /* Tamper 1 callback */
1478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 57


1479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       hrtc->Tamper1EventCallback(hrtc);
1480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #else  /* (USE_HAL_RTC_REGISTER_CALLBACKS == 1) */
1481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       HAL_RTCEx_Tamper1EventCallback(hrtc);
 1724              		.loc 1 1481 7
 1725 0072 7868     		ldr	r0, [r7, #4]
 1726 0074 FFF7FEFF 		bl	HAL_RTCEx_Tamper1EventCallback
 1727              	.L77:
1482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* (USE_HAL_RTC_REGISTER_CALLBACKS == 1) */
1483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
1484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Get the Tamper 2 interrupt source enable status */
1487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPER2_SUPPORT)
1488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPxIE_SUPPORT)
1489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (__HAL_RTC_TAMPER_GET_IT_SOURCE(hrtc, RTC_IT_TAMP | RTC_IT_TAMP2) != 0U)
 1728              		.loc 1 1489 7
 1729 0078 7B68     		ldr	r3, [r7, #4]
 1730 007a 1B68     		ldr	r3, [r3]
 1731 007c 1A6C     		ldr	r2, [r3, #64]
 1732 007e 1E4B     		ldr	r3, .L80+8
 1733 0080 1340     		ands	r3, r3, r2
 1734              		.loc 1 1489 6
 1735 0082 002B     		cmp	r3, #0
 1736 0084 12D0     		beq	.L78
1490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #else
1491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (__HAL_RTC_TAMPER_GET_IT_SOURCE(hrtc, RTC_IT_TAMP) != 0U)
1492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPxIE_SUPPORT */
1493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Get the pending status of the Tamper 2 Interrupt */
1495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if (__HAL_RTC_TAMPER_GET_FLAG(hrtc, RTC_FLAG_TAMP2F) != 0U)
 1737              		.loc 1 1495 9
 1738 0086 7B68     		ldr	r3, [r7, #4]
 1739 0088 1B68     		ldr	r3, [r3]
 1740 008a DB68     		ldr	r3, [r3, #12]
 1741 008c 03F48043 		and	r3, r3, #16384
 1742              		.loc 1 1495 8
 1743 0090 002B     		cmp	r3, #0
 1744 0092 0BD0     		beq	.L78
1496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
1497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       /* Clear the Tamper 2 interrupt pending bit */
1498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       __HAL_RTC_TAMPER_CLEAR_FLAG(hrtc, RTC_FLAG_TAMP2F);
 1745              		.loc 1 1498 7
 1746 0094 7B68     		ldr	r3, [r7, #4]
 1747 0096 1B68     		ldr	r3, [r3]
 1748 0098 DB68     		ldr	r3, [r3, #12]
 1749 009a DAB2     		uxtb	r2, r3
 1750 009c 7B68     		ldr	r3, [r7, #4]
 1751 009e 1B68     		ldr	r3, [r3]
 1752 00a0 62F48142 		orn	r2, r2, #16512
 1753 00a4 DA60     		str	r2, [r3, #12]
1499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       /* Tamper 2 callback */
1501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
1502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       hrtc->Tamper2EventCallback(hrtc);
1503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #else  /* (USE_HAL_RTC_REGISTER_CALLBACKS == 1) */
1504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       HAL_RTCEx_Tamper2EventCallback(hrtc);
 1754              		.loc 1 1504 7
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 58


 1755 00a6 7868     		ldr	r0, [r7, #4]
 1756 00a8 FFF7FEFF 		bl	HAL_RTCEx_Tamper2EventCallback
 1757              	.L78:
1505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* (USE_HAL_RTC_REGISTER_CALLBACKS == 1) */
1506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
1507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPER2_SUPPORT */
1509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Get the Tamper 3 interrupts source enable status */
1511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPxIE_SUPPORT)
1512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (__HAL_RTC_TAMPER_GET_IT_SOURCE(hrtc, RTC_IT_TAMP | RTC_IT_TAMP3) != 0U)
 1758              		.loc 1 1512 7
 1759 00ac 7B68     		ldr	r3, [r7, #4]
 1760 00ae 1B68     		ldr	r3, [r3]
 1761 00b0 1A6C     		ldr	r2, [r3, #64]
 1762 00b2 124B     		ldr	r3, .L80+12
 1763 00b4 1340     		ands	r3, r3, r2
 1764              		.loc 1 1512 6
 1765 00b6 002B     		cmp	r3, #0
 1766 00b8 12D0     		beq	.L79
1513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #else
1514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (__HAL_RTC_TAMPER_GET_IT_SOURCE(hrtc, RTC_IT_TAMP) != 0U)
1515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPxIE_SUPPORT */
1516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Get the pending status of the Tamper 3 Interrupt */
1518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if (__HAL_RTC_TAMPER_GET_FLAG(hrtc, RTC_FLAG_TAMP3F) != 0U)
 1767              		.loc 1 1518 9
 1768 00ba 7B68     		ldr	r3, [r7, #4]
 1769 00bc 1B68     		ldr	r3, [r3]
 1770 00be DB68     		ldr	r3, [r3, #12]
 1771 00c0 03F40043 		and	r3, r3, #32768
 1772              		.loc 1 1518 8
 1773 00c4 002B     		cmp	r3, #0
 1774 00c6 0BD0     		beq	.L79
1519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
1520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       /* Clear the Tamper 3 interrupt pending bit */
1521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       __HAL_RTC_TAMPER_CLEAR_FLAG(hrtc, RTC_FLAG_TAMP3F);
 1775              		.loc 1 1521 7
 1776 00c8 7B68     		ldr	r3, [r7, #4]
 1777 00ca 1B68     		ldr	r3, [r3]
 1778 00cc DB68     		ldr	r3, [r3, #12]
 1779 00ce D9B2     		uxtb	r1, r3
 1780 00d0 7B68     		ldr	r3, [r7, #4]
 1781 00d2 1A68     		ldr	r2, [r3]
 1782 00d4 0A4B     		ldr	r3, .L80+16
 1783 00d6 0B43     		orrs	r3, r3, r1
 1784 00d8 D360     		str	r3, [r2, #12]
1522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       /* Tamper 3 callback */
1524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
1525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       hrtc->Tamper3EventCallback(hrtc);
1526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #else  /* (USE_HAL_RTC_REGISTER_CALLBACKS == 1) */
1527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       HAL_RTCEx_Tamper3EventCallback(hrtc);
 1785              		.loc 1 1527 7
 1786 00da 7868     		ldr	r0, [r7, #4]
 1787 00dc FFF7FEFF 		bl	HAL_RTCEx_Tamper3EventCallback
 1788              	.L79:
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 59


1528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* (USE_HAL_RTC_REGISTER_CALLBACKS == 1) */
1529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
1530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Change RTC state */
1533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 1789              		.loc 1 1533 15
 1790 00e0 7B68     		ldr	r3, [r7, #4]
 1791 00e2 0122     		movs	r2, #1
 1792 00e4 83F82120 		strb	r2, [r3, #33]
1534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 1793              		.loc 1 1534 1
 1794 00e8 00BF     		nop
 1795 00ea 0837     		adds	r7, r7, #8
 1796              	.LCFI56:
 1797              		.cfi_def_cfa_offset 8
 1798 00ec BD46     		mov	sp, r7
 1799              	.LCFI57:
 1800              		.cfi_def_cfa_register 13
 1801              		@ sp needed
 1802 00ee 80BD     		pop	{r7, pc}
 1803              	.L81:
 1804              		.align	2
 1805              	.L80:
 1806 00f0 80000058 		.word	1476395136
 1807 00f4 04000100 		.word	65540
 1808 00f8 04000800 		.word	524292
 1809 00fc 04004000 		.word	4194308
 1810 0100 7F7FFFFF 		.word	-32897
 1811              		.cfi_endproc
 1812              	.LFE153:
 1814              		.section	.text.HAL_RTCEx_TimeStampEventCallback,"ax",%progbits
 1815              		.align	1
 1816              		.weak	HAL_RTCEx_TimeStampEventCallback
 1817              		.syntax unified
 1818              		.thumb
 1819              		.thumb_func
 1821              	HAL_RTCEx_TimeStampEventCallback:
 1822              	.LFB154:
1535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* TAMP */
1536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  TimeStamp callback.
1539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval None
1541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_TimeStampEventCallback(RTC_HandleTypeDef *hrtc)
1543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 1823              		.loc 1 1543 1
 1824              		.cfi_startproc
 1825              		@ args = 0, pretend = 0, frame = 8
 1826              		@ frame_needed = 1, uses_anonymous_args = 0
 1827              		@ link register save eliminated.
 1828 0000 80B4     		push	{r7}
 1829              	.LCFI58:
 1830              		.cfi_def_cfa_offset 4
 1831              		.cfi_offset 7, -4
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 60


 1832 0002 83B0     		sub	sp, sp, #12
 1833              	.LCFI59:
 1834              		.cfi_def_cfa_offset 16
 1835 0004 00AF     		add	r7, sp, #0
 1836              	.LCFI60:
 1837              		.cfi_def_cfa_register 7
 1838 0006 7860     		str	r0, [r7, #4]
1544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
1545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   UNUSED(hrtc);
1546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             the HAL_RTCEx_TimeStampEventCallback could be implemented in the user file
1549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 1839              		.loc 1 1550 1
 1840 0008 00BF     		nop
 1841 000a 0C37     		adds	r7, r7, #12
 1842              	.LCFI61:
 1843              		.cfi_def_cfa_offset 4
 1844 000c BD46     		mov	sp, r7
 1845              	.LCFI62:
 1846              		.cfi_def_cfa_register 13
 1847              		@ sp needed
 1848 000e 5DF8047B 		ldr	r7, [sp], #4
 1849              	.LCFI63:
 1850              		.cfi_restore 7
 1851              		.cfi_def_cfa_offset 0
 1852 0012 7047     		bx	lr
 1853              		.cfi_endproc
 1854              	.LFE154:
 1856              		.section	.text.HAL_RTCEx_Tamper1EventCallback,"ax",%progbits
 1857              		.align	1
 1858              		.weak	HAL_RTCEx_Tamper1EventCallback
 1859              		.syntax unified
 1860              		.thumb
 1861              		.thumb_func
 1863              	HAL_RTCEx_Tamper1EventCallback:
 1864              	.LFB155:
1551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @}
1554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /** @addtogroup RTCEx_Exported_Functions_Group5
1557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief      Extended RTC Tamper functions
1558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *
1559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** * @{
1560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** */
1561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Tamper 1 callback.
1564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval None
1566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_Tamper1EventCallback(RTC_HandleTypeDef * hrtc)
1568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 1865              		.loc 1 1568 1
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 61


 1866              		.cfi_startproc
 1867              		@ args = 0, pretend = 0, frame = 8
 1868              		@ frame_needed = 1, uses_anonymous_args = 0
 1869              		@ link register save eliminated.
 1870 0000 80B4     		push	{r7}
 1871              	.LCFI64:
 1872              		.cfi_def_cfa_offset 4
 1873              		.cfi_offset 7, -4
 1874 0002 83B0     		sub	sp, sp, #12
 1875              	.LCFI65:
 1876              		.cfi_def_cfa_offset 16
 1877 0004 00AF     		add	r7, sp, #0
 1878              	.LCFI66:
 1879              		.cfi_def_cfa_register 7
 1880 0006 7860     		str	r0, [r7, #4]
1569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
1570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   UNUSED(hrtc);
1571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             the HAL_RTCEx_Tamper1EventCallback could be implemented in the user file
1574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****    */
1575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 1881              		.loc 1 1575 1
 1882 0008 00BF     		nop
 1883 000a 0C37     		adds	r7, r7, #12
 1884              	.LCFI67:
 1885              		.cfi_def_cfa_offset 4
 1886 000c BD46     		mov	sp, r7
 1887              	.LCFI68:
 1888              		.cfi_def_cfa_register 13
 1889              		@ sp needed
 1890 000e 5DF8047B 		ldr	r7, [sp], #4
 1891              	.LCFI69:
 1892              		.cfi_restore 7
 1893              		.cfi_def_cfa_offset 0
 1894 0012 7047     		bx	lr
 1895              		.cfi_endproc
 1896              	.LFE155:
 1898              		.section	.text.HAL_RTCEx_Tamper2EventCallback,"ax",%progbits
 1899              		.align	1
 1900              		.weak	HAL_RTCEx_Tamper2EventCallback
 1901              		.syntax unified
 1902              		.thumb
 1903              		.thumb_func
 1905              	HAL_RTCEx_Tamper2EventCallback:
 1906              	.LFB156:
1576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPER2_SUPPORT)
1578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Tamper 2 callback.
1580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval None
1582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_Tamper2EventCallback(RTC_HandleTypeDef * hrtc)
1584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 1907              		.loc 1 1584 1
 1908              		.cfi_startproc
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 62


 1909              		@ args = 0, pretend = 0, frame = 8
 1910              		@ frame_needed = 1, uses_anonymous_args = 0
 1911              		@ link register save eliminated.
 1912 0000 80B4     		push	{r7}
 1913              	.LCFI70:
 1914              		.cfi_def_cfa_offset 4
 1915              		.cfi_offset 7, -4
 1916 0002 83B0     		sub	sp, sp, #12
 1917              	.LCFI71:
 1918              		.cfi_def_cfa_offset 16
 1919 0004 00AF     		add	r7, sp, #0
 1920              	.LCFI72:
 1921              		.cfi_def_cfa_register 7
 1922 0006 7860     		str	r0, [r7, #4]
1585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
1586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   UNUSED(hrtc);
1587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             the HAL_RTCEx_Tamper2EventCallback could be implemented in the user file
1590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****    */
1591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 1923              		.loc 1 1591 1
 1924 0008 00BF     		nop
 1925 000a 0C37     		adds	r7, r7, #12
 1926              	.LCFI73:
 1927              		.cfi_def_cfa_offset 4
 1928 000c BD46     		mov	sp, r7
 1929              	.LCFI74:
 1930              		.cfi_def_cfa_register 13
 1931              		@ sp needed
 1932 000e 5DF8047B 		ldr	r7, [sp], #4
 1933              	.LCFI75:
 1934              		.cfi_restore 7
 1935              		.cfi_def_cfa_offset 0
 1936 0012 7047     		bx	lr
 1937              		.cfi_endproc
 1938              	.LFE156:
 1940              		.section	.text.HAL_RTCEx_Tamper3EventCallback,"ax",%progbits
 1941              		.align	1
 1942              		.weak	HAL_RTCEx_Tamper3EventCallback
 1943              		.syntax unified
 1944              		.thumb
 1945              		.thumb_func
 1947              	HAL_RTCEx_Tamper3EventCallback:
 1948              	.LFB157:
1592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPER2_SUPPORT */
1593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Tamper 3 callback.
1596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval None
1598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_Tamper3EventCallback(RTC_HandleTypeDef * hrtc)
1600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 1949              		.loc 1 1600 1
 1950              		.cfi_startproc
 1951              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 63


 1952              		@ frame_needed = 1, uses_anonymous_args = 0
 1953              		@ link register save eliminated.
 1954 0000 80B4     		push	{r7}
 1955              	.LCFI76:
 1956              		.cfi_def_cfa_offset 4
 1957              		.cfi_offset 7, -4
 1958 0002 83B0     		sub	sp, sp, #12
 1959              	.LCFI77:
 1960              		.cfi_def_cfa_offset 16
 1961 0004 00AF     		add	r7, sp, #0
 1962              	.LCFI78:
 1963              		.cfi_def_cfa_register 7
 1964 0006 7860     		str	r0, [r7, #4]
1601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
1602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   UNUSED(hrtc);
1603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             the HAL_RTCEx_Tamper3EventCallback could be implemented in the user file
1606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****    */
1607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 1965              		.loc 1 1607 1
 1966 0008 00BF     		nop
 1967 000a 0C37     		adds	r7, r7, #12
 1968              	.LCFI79:
 1969              		.cfi_def_cfa_offset 4
 1970 000c BD46     		mov	sp, r7
 1971              	.LCFI80:
 1972              		.cfi_def_cfa_register 13
 1973              		@ sp needed
 1974 000e 5DF8047B 		ldr	r7, [sp], #4
 1975              	.LCFI81:
 1976              		.cfi_restore 7
 1977              		.cfi_def_cfa_offset 0
 1978 0012 7047     		bx	lr
 1979              		.cfi_endproc
 1980              	.LFE157:
 1982              		.section	.text.HAL_RTCEx_PollForTimeStampEvent,"ax",%progbits
 1983              		.align	1
 1984              		.global	HAL_RTCEx_PollForTimeStampEvent
 1985              		.syntax unified
 1986              		.thumb
 1987              		.thumb_func
 1989              	HAL_RTCEx_PollForTimeStampEvent:
 1990              	.LFB158:
1608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(TAMP)
1610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Internal Tamper 1 callback.
1612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval None
1614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_InternalTamper1EventCallback(RTC_HandleTypeDef *hrtc)
1616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
1617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
1618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   UNUSED(hrtc);
1619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 64


1621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             the HAL_RTCEx_InternalTamper1EventCallback could be implemented in the user file
1622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****    */
1623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
1624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Internal Tamper 2 callback.
1627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval None
1629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_InternalTamper2EventCallback(RTC_HandleTypeDef *hrtc)
1631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
1632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
1633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   UNUSED(hrtc);
1634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             the HAL_RTCEx_InternalTamper2EventCallback could be implemented in the user file
1637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****    */
1638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
1639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Internal Tamper 3 callback.
1642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval None
1644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_InternalTamper3EventCallback(RTC_HandleTypeDef *hrtc)
1646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
1647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
1648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   UNUSED(hrtc);
1649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             the HAL_RTCEx_InternalTamper3EventCallback could be implemented in the user file
1652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****    */
1653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
1654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Internal Tamper 4 callback.
1657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval None
1659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_InternalTamper4EventCallback(RTC_HandleTypeDef *hrtc)
1661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
1662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
1663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   UNUSED(hrtc);
1664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             the HAL_RTCEx_InternalTamper4EventCallback could be implemented in the user file
1667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****    */
1668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
1669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Internal Tamper 5 callback.
1672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval None
1674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_InternalTamper5EventCallback(RTC_HandleTypeDef *hrtc)
1676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
1677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 65


1678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   UNUSED(hrtc);
1679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             the HAL_RTCEx_InternalTamper5EventCallback could be implemented in the user file
1682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****    */
1683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
1684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Internal Tamper 6 callback.
1687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval None
1689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_InternalTamper6EventCallback(RTC_HandleTypeDef *hrtc)
1691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
1692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
1693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   UNUSED(hrtc);
1694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             the HAL_RTCEx_InternalTamper6EventCallback could be implemented in the user file
1697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****    */
1698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
1699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Internal Tamper 8 callback.
1702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval None
1704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_InternalTamper8EventCallback(RTC_HandleTypeDef *hrtc)
1706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
1707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
1708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   UNUSED(hrtc);
1709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             the HAL_RTCEx_InternalTamper8EventCallback could be implemented in the user file
1712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****    */
1713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
1714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* TAMP */
1715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @}
1718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /** @addtogroup RTCEx_Exported_Functions_Group1
1721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****  *  @brief   RTC TimeStamp and Tamper functions
1722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****  *
1723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** * @{
1724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** */
1725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Handle TimeStamp polling request.
1728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  Timeout Timeout duration
1730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
1731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_PollForTimeStampEvent(RTC_HandleTypeDef *hrtc, uint32_t Timeout)
1733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 1991              		.loc 1 1733 1
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 66


 1992              		.cfi_startproc
 1993              		@ args = 0, pretend = 0, frame = 16
 1994              		@ frame_needed = 1, uses_anonymous_args = 0
 1995 0000 80B5     		push	{r7, lr}
 1996              	.LCFI82:
 1997              		.cfi_def_cfa_offset 8
 1998              		.cfi_offset 7, -8
 1999              		.cfi_offset 14, -4
 2000 0002 84B0     		sub	sp, sp, #16
 2001              	.LCFI83:
 2002              		.cfi_def_cfa_offset 24
 2003 0004 00AF     		add	r7, sp, #0
 2004              	.LCFI84:
 2005              		.cfi_def_cfa_register 7
 2006 0006 7860     		str	r0, [r7, #4]
 2007 0008 3960     		str	r1, [r7]
1734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tickstart = HAL_GetTick();
 2008              		.loc 1 1734 24
 2009 000a FFF7FEFF 		bl	HAL_GetTick
 2010 000e F860     		str	r0, [r7, #12]
1735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   while (__HAL_RTC_TIMESTAMP_GET_FLAG(hrtc, RTC_FLAG_TSF) == 0U)
 2011              		.loc 1 1736 9
 2012 0010 2AE0     		b	.L90
 2013              	.L92:
1737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if (__HAL_RTC_TIMESTAMP_GET_FLAG(hrtc, RTC_FLAG_TSOVF) != 0U)
 2014              		.loc 1 1738 9
 2015 0012 7B68     		ldr	r3, [r7, #4]
 2016 0014 1B68     		ldr	r3, [r3]
 2017 0016 DB68     		ldr	r3, [r3, #12]
 2018 0018 03F48053 		and	r3, r3, #4096
 2019              		.loc 1 1738 8
 2020 001c 002B     		cmp	r3, #0
 2021 001e 0ED0     		beq	.L88
1739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
1740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       /* Clear the TIMESTAMP OverRun Flag */
1741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       __HAL_RTC_TIMESTAMP_CLEAR_FLAG(hrtc, RTC_FLAG_TSOVF);
 2022              		.loc 1 1741 7
 2023 0020 7B68     		ldr	r3, [r7, #4]
 2024 0022 1B68     		ldr	r3, [r3]
 2025 0024 DB68     		ldr	r3, [r3, #12]
 2026 0026 DAB2     		uxtb	r2, r3
 2027 0028 7B68     		ldr	r3, [r7, #4]
 2028 002a 1B68     		ldr	r3, [r3]
 2029 002c 62F48452 		orn	r2, r2, #4224
 2030 0030 DA60     		str	r2, [r3, #12]
1742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       /* Change TIMESTAMP state */
1744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       hrtc->State = HAL_RTC_STATE_ERROR;
 2031              		.loc 1 1744 19
 2032 0032 7B68     		ldr	r3, [r7, #4]
 2033 0034 0422     		movs	r2, #4
 2034 0036 83F82120 		strb	r2, [r3, #33]
1745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       return HAL_ERROR;
 2035              		.loc 1 1746 14
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 67


 2036 003a 0123     		movs	r3, #1
 2037 003c 20E0     		b	.L89
 2038              	.L88:
1747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
1748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if (Timeout != HAL_MAX_DELAY)
 2039              		.loc 1 1749 8
 2040 003e 3B68     		ldr	r3, [r7]
 2041 0040 B3F1FF3F 		cmp	r3, #-1
 2042 0044 10D0     		beq	.L90
1750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
1751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 2043              		.loc 1 1751 13
 2044 0046 FFF7FEFF 		bl	HAL_GetTick
 2045 004a 0246     		mov	r2, r0
 2046              		.loc 1 1751 27 discriminator 1
 2047 004c FB68     		ldr	r3, [r7, #12]
 2048 004e D31A     		subs	r3, r2, r3
 2049              		.loc 1 1751 10 discriminator 1
 2050 0050 3A68     		ldr	r2, [r7]
 2051 0052 9A42     		cmp	r2, r3
 2052 0054 02D3     		bcc	.L91
 2053              		.loc 1 1751 51 discriminator 1
 2054 0056 3B68     		ldr	r3, [r7]
 2055 0058 002B     		cmp	r3, #0
 2056 005a 05D1     		bne	.L90
 2057              	.L91:
1752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       {
1753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 2058              		.loc 1 1753 21
 2059 005c 7B68     		ldr	r3, [r7, #4]
 2060 005e 0322     		movs	r2, #3
 2061 0060 83F82120 		strb	r2, [r3, #33]
1754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 2062              		.loc 1 1754 16
 2063 0064 0323     		movs	r3, #3
 2064 0066 0BE0     		b	.L89
 2065              	.L90:
1736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 2066              		.loc 1 1736 10
 2067 0068 7B68     		ldr	r3, [r7, #4]
 2068 006a 1B68     		ldr	r3, [r3]
 2069 006c DB68     		ldr	r3, [r3, #12]
 2070 006e 03F40063 		and	r3, r3, #2048
1736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 2071              		.loc 1 1736 59
 2072 0072 002B     		cmp	r3, #0
 2073 0074 CDD0     		beq	.L92
1755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       }
1756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
1757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Change RTC state */
1760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 2074              		.loc 1 1760 15
 2075 0076 7B68     		ldr	r3, [r7, #4]
 2076 0078 0122     		movs	r2, #1
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 68


 2077 007a 83F82120 		strb	r2, [r3, #33]
1761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 2078              		.loc 1 1762 10
 2079 007e 0023     		movs	r3, #0
 2080              	.L89:
1763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 2081              		.loc 1 1763 1
 2082 0080 1846     		mov	r0, r3
 2083 0082 1037     		adds	r7, r7, #16
 2084              	.LCFI85:
 2085              		.cfi_def_cfa_offset 8
 2086 0084 BD46     		mov	sp, r7
 2087              	.LCFI86:
 2088              		.cfi_def_cfa_register 13
 2089              		@ sp needed
 2090 0086 80BD     		pop	{r7, pc}
 2091              		.cfi_endproc
 2092              	.LFE158:
 2094              		.section	.text.HAL_RTCEx_PollForTamper1Event,"ax",%progbits
 2095              		.align	1
 2096              		.global	HAL_RTCEx_PollForTamper1Event
 2097              		.syntax unified
 2098              		.thumb
 2099              		.thumb_func
 2101              	HAL_RTCEx_PollForTamper1Event:
 2102              	.LFB159:
1764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @}
1767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /** @addtogroup RTCEx_Exported_Functions_Group5
1770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief      Extended RTC Tamper functions
1771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *
1772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** * @{
1773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** */
1774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Handle Tamper1 Polling.
1777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  Timeout Timeout duration
1779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
1780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_PollForTamper1Event(RTC_HandleTypeDef * hrtc, uint32_t Timeout)
1782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 2103              		.loc 1 1782 1
 2104              		.cfi_startproc
 2105              		@ args = 0, pretend = 0, frame = 16
 2106              		@ frame_needed = 1, uses_anonymous_args = 0
 2107 0000 80B5     		push	{r7, lr}
 2108              	.LCFI87:
 2109              		.cfi_def_cfa_offset 8
 2110              		.cfi_offset 7, -8
 2111              		.cfi_offset 14, -4
 2112 0002 84B0     		sub	sp, sp, #16
 2113              	.LCFI88:
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 69


 2114              		.cfi_def_cfa_offset 24
 2115 0004 00AF     		add	r7, sp, #0
 2116              	.LCFI89:
 2117              		.cfi_def_cfa_register 7
 2118 0006 7860     		str	r0, [r7, #4]
 2119 0008 3960     		str	r1, [r7]
1783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tickstart = HAL_GetTick();
 2120              		.loc 1 1783 24
 2121 000a FFF7FEFF 		bl	HAL_GetTick
 2122 000e F860     		str	r0, [r7, #12]
1784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Get the status of the Interrupt */
1786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   while (__HAL_RTC_TAMPER_GET_FLAG(hrtc, RTC_FLAG_TAMP1F) == 0U)
 2123              		.loc 1 1786 9
 2124 0010 14E0     		b	.L95
 2125              	.L98:
1787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if (Timeout != HAL_MAX_DELAY)
 2126              		.loc 1 1788 8
 2127 0012 3B68     		ldr	r3, [r7]
 2128 0014 B3F1FF3F 		cmp	r3, #-1
 2129 0018 10D0     		beq	.L95
1789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
1790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 2130              		.loc 1 1790 13
 2131 001a FFF7FEFF 		bl	HAL_GetTick
 2132 001e 0246     		mov	r2, r0
 2133              		.loc 1 1790 27 discriminator 1
 2134 0020 FB68     		ldr	r3, [r7, #12]
 2135 0022 D31A     		subs	r3, r2, r3
 2136              		.loc 1 1790 10 discriminator 1
 2137 0024 3A68     		ldr	r2, [r7]
 2138 0026 9A42     		cmp	r2, r3
 2139 0028 02D3     		bcc	.L96
 2140              		.loc 1 1790 51 discriminator 1
 2141 002a 3B68     		ldr	r3, [r7]
 2142 002c 002B     		cmp	r3, #0
 2143 002e 05D1     		bne	.L95
 2144              	.L96:
1791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       {
1792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 2145              		.loc 1 1792 21
 2146 0030 7B68     		ldr	r3, [r7, #4]
 2147 0032 0322     		movs	r2, #3
 2148 0034 83F82120 		strb	r2, [r3, #33]
1793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 2149              		.loc 1 1793 16
 2150 0038 0323     		movs	r3, #3
 2151 003a 14E0     		b	.L97
 2152              	.L95:
1786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 2153              		.loc 1 1786 10
 2154 003c 7B68     		ldr	r3, [r7, #4]
 2155 003e 1B68     		ldr	r3, [r3]
 2156 0040 DB68     		ldr	r3, [r3, #12]
 2157 0042 03F40053 		and	r3, r3, #8192
1786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 70


 2158              		.loc 1 1786 59
 2159 0046 002B     		cmp	r3, #0
 2160 0048 E3D0     		beq	.L98
1794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       }
1795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
1796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clear the Tamper Flag */
1799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_CLEAR_FLAG(hrtc, RTC_FLAG_TAMP1F);
 2161              		.loc 1 1799 3
 2162 004a 7B68     		ldr	r3, [r7, #4]
 2163 004c 1B68     		ldr	r3, [r3]
 2164 004e DB68     		ldr	r3, [r3, #12]
 2165 0050 DAB2     		uxtb	r2, r3
 2166 0052 7B68     		ldr	r3, [r7, #4]
 2167 0054 1B68     		ldr	r3, [r3]
 2168 0056 62F40252 		orn	r2, r2, #8320
 2169 005a DA60     		str	r2, [r3, #12]
1800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Change RTC state */
1802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 2170              		.loc 1 1802 15
 2171 005c 7B68     		ldr	r3, [r7, #4]
 2172 005e 0122     		movs	r2, #1
 2173 0060 83F82120 		strb	r2, [r3, #33]
1803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 2174              		.loc 1 1804 10
 2175 0064 0023     		movs	r3, #0
 2176              	.L97:
1805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 2177              		.loc 1 1805 1
 2178 0066 1846     		mov	r0, r3
 2179 0068 1037     		adds	r7, r7, #16
 2180              	.LCFI90:
 2181              		.cfi_def_cfa_offset 8
 2182 006a BD46     		mov	sp, r7
 2183              	.LCFI91:
 2184              		.cfi_def_cfa_register 13
 2185              		@ sp needed
 2186 006c 80BD     		pop	{r7, pc}
 2187              		.cfi_endproc
 2188              	.LFE159:
 2190              		.section	.text.HAL_RTCEx_PollForTamper2Event,"ax",%progbits
 2191              		.align	1
 2192              		.global	HAL_RTCEx_PollForTamper2Event
 2193              		.syntax unified
 2194              		.thumb
 2195              		.thumb_func
 2197              	HAL_RTCEx_PollForTamper2Event:
 2198              	.LFB160:
1806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPER2_SUPPORT)
1808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Handle Tamper2 Polling.
1810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  Timeout Timeout duration
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 71


1812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
1813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_PollForTamper2Event(RTC_HandleTypeDef * hrtc, uint32_t Timeout)
1815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 2199              		.loc 1 1815 1
 2200              		.cfi_startproc
 2201              		@ args = 0, pretend = 0, frame = 16
 2202              		@ frame_needed = 1, uses_anonymous_args = 0
 2203 0000 80B5     		push	{r7, lr}
 2204              	.LCFI92:
 2205              		.cfi_def_cfa_offset 8
 2206              		.cfi_offset 7, -8
 2207              		.cfi_offset 14, -4
 2208 0002 84B0     		sub	sp, sp, #16
 2209              	.LCFI93:
 2210              		.cfi_def_cfa_offset 24
 2211 0004 00AF     		add	r7, sp, #0
 2212              	.LCFI94:
 2213              		.cfi_def_cfa_register 7
 2214 0006 7860     		str	r0, [r7, #4]
 2215 0008 3960     		str	r1, [r7]
1816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tickstart = HAL_GetTick();
 2216              		.loc 1 1816 24
 2217 000a FFF7FEFF 		bl	HAL_GetTick
 2218 000e F860     		str	r0, [r7, #12]
1817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Get the status of the Interrupt */
1819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   while (__HAL_RTC_TAMPER_GET_FLAG(hrtc, RTC_FLAG_TAMP2F) == 0U)
 2219              		.loc 1 1819 9
 2220 0010 14E0     		b	.L101
 2221              	.L104:
1820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if (Timeout != HAL_MAX_DELAY)
 2222              		.loc 1 1821 8
 2223 0012 3B68     		ldr	r3, [r7]
 2224 0014 B3F1FF3F 		cmp	r3, #-1
 2225 0018 10D0     		beq	.L101
1822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
1823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 2226              		.loc 1 1823 13
 2227 001a FFF7FEFF 		bl	HAL_GetTick
 2228 001e 0246     		mov	r2, r0
 2229              		.loc 1 1823 27 discriminator 1
 2230 0020 FB68     		ldr	r3, [r7, #12]
 2231 0022 D31A     		subs	r3, r2, r3
 2232              		.loc 1 1823 10 discriminator 1
 2233 0024 3A68     		ldr	r2, [r7]
 2234 0026 9A42     		cmp	r2, r3
 2235 0028 02D3     		bcc	.L102
 2236              		.loc 1 1823 51 discriminator 1
 2237 002a 3B68     		ldr	r3, [r7]
 2238 002c 002B     		cmp	r3, #0
 2239 002e 05D1     		bne	.L101
 2240              	.L102:
1824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       {
1825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 2241              		.loc 1 1825 21
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 72


 2242 0030 7B68     		ldr	r3, [r7, #4]
 2243 0032 0322     		movs	r2, #3
 2244 0034 83F82120 		strb	r2, [r3, #33]
1826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 2245              		.loc 1 1826 16
 2246 0038 0323     		movs	r3, #3
 2247 003a 14E0     		b	.L103
 2248              	.L101:
1819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 2249              		.loc 1 1819 10
 2250 003c 7B68     		ldr	r3, [r7, #4]
 2251 003e 1B68     		ldr	r3, [r3]
 2252 0040 DB68     		ldr	r3, [r3, #12]
 2253 0042 03F48043 		and	r3, r3, #16384
1819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 2254              		.loc 1 1819 59
 2255 0046 002B     		cmp	r3, #0
 2256 0048 E3D0     		beq	.L104
1827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       }
1828:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
1829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clear the Tamper Flag */
1832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_CLEAR_FLAG(hrtc, RTC_FLAG_TAMP2F);
 2257              		.loc 1 1832 3
 2258 004a 7B68     		ldr	r3, [r7, #4]
 2259 004c 1B68     		ldr	r3, [r3]
 2260 004e DB68     		ldr	r3, [r3, #12]
 2261 0050 DAB2     		uxtb	r2, r3
 2262 0052 7B68     		ldr	r3, [r7, #4]
 2263 0054 1B68     		ldr	r3, [r3]
 2264 0056 62F48142 		orn	r2, r2, #16512
 2265 005a DA60     		str	r2, [r3, #12]
1833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Change RTC state */
1835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 2266              		.loc 1 1835 15
 2267 005c 7B68     		ldr	r3, [r7, #4]
 2268 005e 0122     		movs	r2, #1
 2269 0060 83F82120 		strb	r2, [r3, #33]
1836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 2270              		.loc 1 1837 10
 2271 0064 0023     		movs	r3, #0
 2272              	.L103:
1838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 2273              		.loc 1 1838 1
 2274 0066 1846     		mov	r0, r3
 2275 0068 1037     		adds	r7, r7, #16
 2276              	.LCFI95:
 2277              		.cfi_def_cfa_offset 8
 2278 006a BD46     		mov	sp, r7
 2279              	.LCFI96:
 2280              		.cfi_def_cfa_register 13
 2281              		@ sp needed
 2282 006c 80BD     		pop	{r7, pc}
 2283              		.cfi_endproc
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 73


 2284              	.LFE160:
 2286              		.section	.text.HAL_RTCEx_PollForTamper3Event,"ax",%progbits
 2287              		.align	1
 2288              		.global	HAL_RTCEx_PollForTamper3Event
 2289              		.syntax unified
 2290              		.thumb
 2291              		.thumb_func
 2293              	HAL_RTCEx_PollForTamper3Event:
 2294              	.LFB161:
1839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPER2_SUPPORT */
1840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Handle Tamper3 Polling.
1843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  Timeout Timeout duration
1845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
1846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_PollForTamper3Event(RTC_HandleTypeDef * hrtc, uint32_t Timeout)
1848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 2295              		.loc 1 1848 1
 2296              		.cfi_startproc
 2297              		@ args = 0, pretend = 0, frame = 16
 2298              		@ frame_needed = 1, uses_anonymous_args = 0
 2299 0000 80B5     		push	{r7, lr}
 2300              	.LCFI97:
 2301              		.cfi_def_cfa_offset 8
 2302              		.cfi_offset 7, -8
 2303              		.cfi_offset 14, -4
 2304 0002 84B0     		sub	sp, sp, #16
 2305              	.LCFI98:
 2306              		.cfi_def_cfa_offset 24
 2307 0004 00AF     		add	r7, sp, #0
 2308              	.LCFI99:
 2309              		.cfi_def_cfa_register 7
 2310 0006 7860     		str	r0, [r7, #4]
 2311 0008 3960     		str	r1, [r7]
1849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tickstart = HAL_GetTick();
 2312              		.loc 1 1849 24
 2313 000a FFF7FEFF 		bl	HAL_GetTick
 2314 000e F860     		str	r0, [r7, #12]
1850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Get the status of the Interrupt */
1852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   while (__HAL_RTC_TAMPER_GET_FLAG(hrtc, RTC_FLAG_TAMP3F) == 0U)
 2315              		.loc 1 1852 9
 2316 0010 14E0     		b	.L107
 2317              	.L110:
1853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if (Timeout != HAL_MAX_DELAY)
 2318              		.loc 1 1854 8
 2319 0012 3B68     		ldr	r3, [r7]
 2320 0014 B3F1FF3F 		cmp	r3, #-1
 2321 0018 10D0     		beq	.L107
1855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
1856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 2322              		.loc 1 1856 13
 2323 001a FFF7FEFF 		bl	HAL_GetTick
 2324 001e 0246     		mov	r2, r0
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 74


 2325              		.loc 1 1856 27 discriminator 1
 2326 0020 FB68     		ldr	r3, [r7, #12]
 2327 0022 D31A     		subs	r3, r2, r3
 2328              		.loc 1 1856 10 discriminator 1
 2329 0024 3A68     		ldr	r2, [r7]
 2330 0026 9A42     		cmp	r2, r3
 2331 0028 02D3     		bcc	.L108
 2332              		.loc 1 1856 51 discriminator 1
 2333 002a 3B68     		ldr	r3, [r7]
 2334 002c 002B     		cmp	r3, #0
 2335 002e 05D1     		bne	.L107
 2336              	.L108:
1857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       {
1858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 2337              		.loc 1 1858 21
 2338 0030 7B68     		ldr	r3, [r7, #4]
 2339 0032 0322     		movs	r2, #3
 2340 0034 83F82120 		strb	r2, [r3, #33]
1859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 2341              		.loc 1 1859 16
 2342 0038 0323     		movs	r3, #3
 2343 003a 14E0     		b	.L109
 2344              	.L107:
1852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 2345              		.loc 1 1852 10
 2346 003c 7B68     		ldr	r3, [r7, #4]
 2347 003e 1B68     		ldr	r3, [r3]
 2348 0040 DB68     		ldr	r3, [r3, #12]
 2349 0042 03F40043 		and	r3, r3, #32768
1852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 2350              		.loc 1 1852 59
 2351 0046 002B     		cmp	r3, #0
 2352 0048 E3D0     		beq	.L110
1860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       }
1861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
1862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clear the Tamper Flag */
1865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_CLEAR_FLAG(hrtc, RTC_FLAG_TAMP3F);
 2353              		.loc 1 1865 3
 2354 004a 7B68     		ldr	r3, [r7, #4]
 2355 004c 1B68     		ldr	r3, [r3]
 2356 004e DB68     		ldr	r3, [r3, #12]
 2357 0050 D9B2     		uxtb	r1, r3
 2358 0052 7B68     		ldr	r3, [r7, #4]
 2359 0054 1A68     		ldr	r2, [r3]
 2360 0056 064B     		ldr	r3, .L111
 2361 0058 0B43     		orrs	r3, r3, r1
 2362 005a D360     		str	r3, [r2, #12]
1866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Change RTC state */
1868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 2363              		.loc 1 1868 15
 2364 005c 7B68     		ldr	r3, [r7, #4]
 2365 005e 0122     		movs	r2, #1
 2366 0060 83F82120 		strb	r2, [r3, #33]
1869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 75


1870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 2367              		.loc 1 1870 10
 2368 0064 0023     		movs	r3, #0
 2369              	.L109:
1871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 2370              		.loc 1 1871 1
 2371 0066 1846     		mov	r0, r3
 2372 0068 1037     		adds	r7, r7, #16
 2373              	.LCFI100:
 2374              		.cfi_def_cfa_offset 8
 2375 006a BD46     		mov	sp, r7
 2376              	.LCFI101:
 2377              		.cfi_def_cfa_register 13
 2378              		@ sp needed
 2379 006c 80BD     		pop	{r7, pc}
 2380              	.L112:
 2381 006e 00BF     		.align	2
 2382              	.L111:
 2383 0070 7F7FFFFF 		.word	-32897
 2384              		.cfi_endproc
 2385              	.LFE161:
 2387              		.section	.text.HAL_RTCEx_SetWakeUpTimer,"ax",%progbits
 2388              		.align	1
 2389              		.global	HAL_RTCEx_SetWakeUpTimer
 2390              		.syntax unified
 2391              		.thumb
 2392              		.thumb_func
 2394              	HAL_RTCEx_SetWakeUpTimer:
 2395              	.LFB162:
1872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(TAMP)
1874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Internal Tamper event polling.
1876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  IntTamper selected tamper.
1878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *          This parameter can be any combination of existing internal tampers.
1879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  Timeout Timeout duration
1880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
1881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_PollForInternalTamperEvent(RTC_HandleTypeDef *hrtc, uint32_t IntTamper,
1883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
1884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   UNUSED(hrtc);
1885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_INTERNAL_TAMPER(IntTamper));
1886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tickstart = HAL_GetTick();
1888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Get the status of the Interrupt */
1890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   while (READ_BIT(TAMP->SR, IntTamper) != IntTamper)
1891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1892:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if (Timeout != HAL_MAX_DELAY)
1893:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
1894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
1895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       {
1896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
1897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       }
1898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
1899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 76


1900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clear the Tamper Flag */
1902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   WRITE_REG(TAMP->SCR, IntTamper);
1903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
1905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
1906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* TAMP */
1907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1908:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @}
1910:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /** @addtogroup RTCEx_Exported_Functions_Group2
1913:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief    RTC Wake-up functions
1914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *
1915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** @verbatim
1916:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****  ===============================================================================
1917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****                         ##### RTC Wake-up functions #####
1918:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****  ===============================================================================
1919:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1920:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****  [..] This section provides functions allowing to configure Wake-up feature
1921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1922:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** @endverbatim
1923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @{
1924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1926:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Set wake up timer.
1928:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  WakeUpCounter Wake up counter
1930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  WakeUpClock Wake up clock
1931:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
1932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetWakeUpTimer(RTC_HandleTypeDef *hrtc, uint32_t WakeUpCounter, uint32_
1934:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 2396              		.loc 1 1934 1
 2397              		.cfi_startproc
 2398              		@ args = 0, pretend = 0, frame = 24
 2399              		@ frame_needed = 1, uses_anonymous_args = 0
 2400 0000 80B5     		push	{r7, lr}
 2401              	.LCFI102:
 2402              		.cfi_def_cfa_offset 8
 2403              		.cfi_offset 7, -8
 2404              		.cfi_offset 14, -4
 2405 0002 86B0     		sub	sp, sp, #24
 2406              	.LCFI103:
 2407              		.cfi_def_cfa_offset 32
 2408 0004 00AF     		add	r7, sp, #0
 2409              	.LCFI104:
 2410              		.cfi_def_cfa_register 7
 2411 0006 F860     		str	r0, [r7, #12]
 2412 0008 B960     		str	r1, [r7, #8]
 2413 000a 7A60     		str	r2, [r7, #4]
1935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tickstart;
1936:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check the parameters */
1938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_WAKEUP_CLOCK(WakeUpClock));
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 77


1939:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_WAKEUP_COUNTER(WakeUpCounter));
1940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Locked */
1942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 2414              		.loc 1 1942 3
 2415 000c FB68     		ldr	r3, [r7, #12]
 2416 000e 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 2417 0012 012B     		cmp	r3, #1
 2418 0014 01D1     		bne	.L114
 2419              		.loc 1 1942 3 is_stmt 0 discriminator 1
 2420 0016 0223     		movs	r3, #2
 2421              		.loc 1 1942 3
 2422 0018 65E0     		b	.L115
 2423              	.L114:
 2424              		.loc 1 1942 3 discriminator 2
 2425 001a FB68     		ldr	r3, [r7, #12]
 2426 001c 0122     		movs	r2, #1
 2427 001e 83F82020 		strb	r2, [r3, #32]
1943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 2428              		.loc 1 1944 15 is_stmt 1
 2429 0022 FB68     		ldr	r3, [r7, #12]
 2430 0024 0222     		movs	r2, #2
 2431 0026 83F82120 		strb	r2, [r3, #33]
1945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1946:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
1947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 2432              		.loc 1 1947 3
 2433 002a FB68     		ldr	r3, [r7, #12]
 2434 002c 1B68     		ldr	r3, [r3]
 2435 002e CA22     		movs	r2, #202
 2436 0030 5A62     		str	r2, [r3, #36]
 2437 0032 FB68     		ldr	r3, [r7, #12]
 2438 0034 1B68     		ldr	r3, [r3]
 2439 0036 5322     		movs	r2, #83
 2440 0038 5A62     		str	r2, [r3, #36]
1948:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1949:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clear WUTE in RTC_CR to disable the wakeup timer */
1950:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   CLEAR_BIT(RTC->CR, RTC_CR_WUTE);
 2441              		.loc 1 1950 3
 2442 003a 2D4B     		ldr	r3, .L119
 2443 003c 9B68     		ldr	r3, [r3, #8]
 2444 003e 2C4A     		ldr	r2, .L119
 2445 0040 23F48063 		bic	r3, r3, #1024
 2446 0044 9360     		str	r3, [r2, #8]
1951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Poll WUTWF until it is set in RTC_ICSR / RTC_ISR to make sure the access to wakeup autoreload
1953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   counter and to WUCKSEL[2:0] bits is allowed. This step must be skipped in
1954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   calendar initialization mode. */
1955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(TAMP)
1956:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (READ_BIT(RTC->ICSR, RTC_ICSR_INITF) == 0U)
1957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     tickstart = HAL_GetTick();
1959:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     while (READ_BIT(hrtc->Instance->ICSR, RTC_FLAG_WUTWF) == 0U)
1961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #else
1962:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (READ_BIT(RTC->ISR, RTC_ISR_INITF) == 0U)
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 78


 2447              		.loc 1 1962 7
 2448 0046 2A4B     		ldr	r3, .L119
 2449 0048 DB68     		ldr	r3, [r3, #12]
 2450 004a 03F04003 		and	r3, r3, #64
 2451              		.loc 1 1962 6
 2452 004e 002B     		cmp	r3, #0
 2453 0050 20D1     		bne	.L116
1963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1964:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     tickstart = HAL_GetTick();
 2454              		.loc 1 1964 17
 2455 0052 FFF7FEFF 		bl	HAL_GetTick
 2456 0056 7861     		str	r0, [r7, #20]
1965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     while(__HAL_RTC_WAKEUPTIMER_GET_FLAG(hrtc, RTC_FLAG_WUTWF) == 0U)
 2457              		.loc 1 1966 10
 2458 0058 15E0     		b	.L117
 2459              	.L118:
1967:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* TAMP */
1968:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
1969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       if ((HAL_GetTick() - tickstart) > RTC_TIMEOUT_VALUE)
 2460              		.loc 1 1969 12
 2461 005a FFF7FEFF 		bl	HAL_GetTick
 2462 005e 0246     		mov	r2, r0
 2463              		.loc 1 1969 26 discriminator 1
 2464 0060 7B69     		ldr	r3, [r7, #20]
 2465 0062 D31A     		subs	r3, r2, r3
 2466              		.loc 1 1969 10 discriminator 1
 2467 0064 B3F57A7F 		cmp	r3, #1000
 2468 0068 0DD9     		bls	.L117
1970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       {
1971:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         /* Enable the write protection for RTC registers */
1972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 2469              		.loc 1 1972 9
 2470 006a FB68     		ldr	r3, [r7, #12]
 2471 006c 1B68     		ldr	r3, [r3]
 2472 006e FF22     		movs	r2, #255
 2473 0070 5A62     		str	r2, [r3, #36]
1973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1974:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 2474              		.loc 1 1974 21
 2475 0072 FB68     		ldr	r3, [r7, #12]
 2476 0074 0322     		movs	r2, #3
 2477 0076 83F82120 		strb	r2, [r3, #33]
1975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         /* Process Unlocked */
1977:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         __HAL_UNLOCK(hrtc);
 2478              		.loc 1 1977 9
 2479 007a FB68     		ldr	r3, [r7, #12]
 2480 007c 0022     		movs	r2, #0
 2481 007e 83F82020 		strb	r2, [r3, #32]
1978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 2482              		.loc 1 1979 16
 2483 0082 0323     		movs	r3, #3
 2484 0084 2FE0     		b	.L115
 2485              	.L117:
1966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* TAMP */
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 79


 2486              		.loc 1 1966 11
 2487 0086 FB68     		ldr	r3, [r7, #12]
 2488 0088 1B68     		ldr	r3, [r3]
 2489 008a DB68     		ldr	r3, [r3, #12]
 2490 008c 03F00403 		and	r3, r3, #4
1966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* TAMP */
 2491              		.loc 1 1966 64
 2492 0090 002B     		cmp	r3, #0
 2493 0092 E2D0     		beq	.L118
 2494              	.L116:
1980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       }
1981:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
1982:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1983:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clear the Wakeup Timer clock source bits and configure the clock source in CR register */
1985:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t CR_tmp = hrtc->Instance->CR;
 2495              		.loc 1 1985 25
 2496 0094 FB68     		ldr	r3, [r7, #12]
 2497 0096 1B68     		ldr	r3, [r3]
 2498              		.loc 1 1985 12
 2499 0098 9B68     		ldr	r3, [r3, #8]
 2500 009a 3B61     		str	r3, [r7, #16]
1986:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   CR_tmp &= (uint32_t)~RTC_CR_WUCKSEL;
 2501              		.loc 1 1986 10
 2502 009c 3B69     		ldr	r3, [r7, #16]
 2503 009e 23F00703 		bic	r3, r3, #7
 2504 00a2 3B61     		str	r3, [r7, #16]
1987:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   CR_tmp |= (uint32_t)WakeUpClock;
 2505              		.loc 1 1987 10
 2506 00a4 3A69     		ldr	r2, [r7, #16]
 2507 00a6 7B68     		ldr	r3, [r7, #4]
 2508 00a8 1343     		orrs	r3, r3, r2
 2509 00aa 3B61     		str	r3, [r7, #16]
1988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->Instance->CR = CR_tmp;
 2510              		.loc 1 1988 7
 2511 00ac FB68     		ldr	r3, [r7, #12]
 2512 00ae 1B68     		ldr	r3, [r3]
 2513              		.loc 1 1988 22
 2514 00b0 3A69     		ldr	r2, [r7, #16]
 2515 00b2 9A60     		str	r2, [r3, #8]
1989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure the Wakeup Timer counter */
1991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->Instance->WUTR = (uint32_t)WakeUpCounter;
 2516              		.loc 1 1991 7
 2517 00b4 FB68     		ldr	r3, [r7, #12]
 2518 00b6 1B68     		ldr	r3, [r3]
 2519              		.loc 1 1991 24
 2520 00b8 BA68     		ldr	r2, [r7, #8]
 2521 00ba 5A61     		str	r2, [r3, #20]
1992:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1993:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable the Wakeup Timer */
1994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_ENABLE(hrtc);
 2522              		.loc 1 1994 3
 2523 00bc FB68     		ldr	r3, [r7, #12]
 2524 00be 1B68     		ldr	r3, [r3]
 2525 00c0 9A68     		ldr	r2, [r3, #8]
 2526 00c2 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 80


 2527 00c4 1B68     		ldr	r3, [r3]
 2528 00c6 42F48062 		orr	r2, r2, #1024
 2529 00ca 9A60     		str	r2, [r3, #8]
1995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1996:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
1997:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 2530              		.loc 1 1997 3
 2531 00cc FB68     		ldr	r3, [r7, #12]
 2532 00ce 1B68     		ldr	r3, [r3]
 2533 00d0 FF22     		movs	r2, #255
 2534 00d2 5A62     		str	r2, [r3, #36]
1998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 2535              		.loc 1 1999 15
 2536 00d4 FB68     		ldr	r3, [r7, #12]
 2537 00d6 0122     		movs	r2, #1
 2538 00d8 83F82120 		strb	r2, [r3, #33]
2000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2001:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Unlocked */
2002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 2539              		.loc 1 2002 3
 2540 00dc FB68     		ldr	r3, [r7, #12]
 2541 00de 0022     		movs	r2, #0
 2542 00e0 83F82020 		strb	r2, [r3, #32]
2003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 2543              		.loc 1 2004 10
 2544 00e4 0023     		movs	r3, #0
 2545              	.L115:
2005:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 2546              		.loc 1 2005 1
 2547 00e6 1846     		mov	r0, r3
 2548 00e8 1837     		adds	r7, r7, #24
 2549              	.LCFI105:
 2550              		.cfi_def_cfa_offset 8
 2551 00ea BD46     		mov	sp, r7
 2552              	.LCFI106:
 2553              		.cfi_def_cfa_register 13
 2554              		@ sp needed
 2555 00ec 80BD     		pop	{r7, pc}
 2556              	.L120:
 2557 00ee 00BF     		.align	2
 2558              	.L119:
 2559 00f0 00400058 		.word	1476411392
 2560              		.cfi_endproc
 2561              	.LFE162:
 2563              		.section	.text.HAL_RTCEx_SetWakeUpTimer_IT,"ax",%progbits
 2564              		.align	1
 2565              		.global	HAL_RTCEx_SetWakeUpTimer_IT
 2566              		.syntax unified
 2567              		.thumb
 2568              		.thumb_func
 2570              	HAL_RTCEx_SetWakeUpTimer_IT:
 2571              	.LFB163:
2006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2007:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
2008:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Set wake up timer with interrupt.
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 81


2009:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
2010:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  WakeUpCounter Wake up counter
2011:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  WakeUpClock Wake up clock
2012:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
2013:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
2014:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetWakeUpTimer_IT(RTC_HandleTypeDef *hrtc, uint32_t WakeUpCounter, uint
2015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 2572              		.loc 1 2015 1
 2573              		.cfi_startproc
 2574              		@ args = 0, pretend = 0, frame = 24
 2575              		@ frame_needed = 1, uses_anonymous_args = 0
 2576 0000 80B5     		push	{r7, lr}
 2577              	.LCFI107:
 2578              		.cfi_def_cfa_offset 8
 2579              		.cfi_offset 7, -8
 2580              		.cfi_offset 14, -4
 2581 0002 86B0     		sub	sp, sp, #24
 2582              	.LCFI108:
 2583              		.cfi_def_cfa_offset 32
 2584 0004 00AF     		add	r7, sp, #0
 2585              	.LCFI109:
 2586              		.cfi_def_cfa_register 7
 2587 0006 F860     		str	r0, [r7, #12]
 2588 0008 B960     		str	r1, [r7, #8]
 2589 000a 7A60     		str	r2, [r7, #4]
2016:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tickstart;
2017:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check the parameters */
2019:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_WAKEUP_CLOCK(WakeUpClock));
2020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_WAKEUP_COUNTER(WakeUpCounter));
2021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Locked */
2023:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 2590              		.loc 1 2023 3
 2591 000c FB68     		ldr	r3, [r7, #12]
 2592 000e 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 2593 0012 012B     		cmp	r3, #1
 2594 0014 01D1     		bne	.L122
 2595              		.loc 1 2023 3 is_stmt 0 discriminator 1
 2596 0016 0223     		movs	r3, #2
 2597              		.loc 1 2023 3
 2598 0018 7BE0     		b	.L123
 2599              	.L122:
 2600              		.loc 1 2023 3 discriminator 2
 2601 001a FB68     		ldr	r3, [r7, #12]
 2602 001c 0122     		movs	r2, #1
 2603 001e 83F82020 		strb	r2, [r3, #32]
2024:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 2604              		.loc 1 2025 15 is_stmt 1
 2605 0022 FB68     		ldr	r3, [r7, #12]
 2606 0024 0222     		movs	r2, #2
 2607 0026 83F82120 		strb	r2, [r3, #33]
2026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2027:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
2028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 2608              		.loc 1 2028 3
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 82


 2609 002a FB68     		ldr	r3, [r7, #12]
 2610 002c 1B68     		ldr	r3, [r3]
 2611 002e CA22     		movs	r2, #202
 2612 0030 5A62     		str	r2, [r3, #36]
 2613 0032 FB68     		ldr	r3, [r7, #12]
 2614 0034 1B68     		ldr	r3, [r3]
 2615 0036 5322     		movs	r2, #83
 2616 0038 5A62     		str	r2, [r3, #36]
2029:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clear WUTE in RTC_CR to disable the wakeup timer */
2031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   CLEAR_BIT(RTC->CR, RTC_CR_WUTE);
 2617              		.loc 1 2031 3
 2618 003a 384B     		ldr	r3, .L127
 2619 003c 9B68     		ldr	r3, [r3, #8]
 2620 003e 374A     		ldr	r2, .L127
 2621 0040 23F48063 		bic	r3, r3, #1024
 2622 0044 9360     		str	r3, [r2, #8]
2032:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Poll WUTWF until it is set in RTC_ICSR to make sure the access to wakeup autoreload
2034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   counter and to WUCKSEL[2:0] bits is allowed. This step must be skipped in
2035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   calendar initialization mode. */
2036:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(TAMP)
2037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (READ_BIT(RTC->ICSR, RTC_ICSR_INITF) == 0U)
2038:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
2039:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     tickstart = HAL_GetTick();
2040:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     while (READ_BIT(hrtc->Instance->ICSR, RTC_FLAG_WUTWF) == 0U)
2042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #else
2043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (READ_BIT(RTC->ISR, RTC_ISR_INITF) == 0U)
 2623              		.loc 1 2043 7
 2624 0046 354B     		ldr	r3, .L127
 2625 0048 DB68     		ldr	r3, [r3, #12]
 2626 004a 03F04003 		and	r3, r3, #64
 2627              		.loc 1 2043 6
 2628 004e 002B     		cmp	r3, #0
 2629 0050 20D1     		bne	.L124
2044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
2045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     tickstart = HAL_GetTick();
 2630              		.loc 1 2045 17
 2631 0052 FFF7FEFF 		bl	HAL_GetTick
 2632 0056 7861     		str	r0, [r7, #20]
2046:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     while(__HAL_RTC_WAKEUPTIMER_GET_FLAG(hrtc, RTC_FLAG_WUTWF) == 0U)
 2633              		.loc 1 2047 10
 2634 0058 15E0     		b	.L125
 2635              	.L126:
2048:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* TAMP */
2049:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
2050:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       if ((HAL_GetTick() - tickstart) > RTC_TIMEOUT_VALUE)
 2636              		.loc 1 2050 12
 2637 005a FFF7FEFF 		bl	HAL_GetTick
 2638 005e 0246     		mov	r2, r0
 2639              		.loc 1 2050 26 discriminator 1
 2640 0060 7B69     		ldr	r3, [r7, #20]
 2641 0062 D31A     		subs	r3, r2, r3
 2642              		.loc 1 2050 10 discriminator 1
 2643 0064 B3F57A7F 		cmp	r3, #1000
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 83


 2644 0068 0DD9     		bls	.L125
2051:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       {
2052:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         /* Enable the write protection for RTC registers */
2053:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 2645              		.loc 1 2053 9
 2646 006a FB68     		ldr	r3, [r7, #12]
 2647 006c 1B68     		ldr	r3, [r3]
 2648 006e FF22     		movs	r2, #255
 2649 0070 5A62     		str	r2, [r3, #36]
2054:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 2650              		.loc 1 2055 21
 2651 0072 FB68     		ldr	r3, [r7, #12]
 2652 0074 0322     		movs	r2, #3
 2653 0076 83F82120 		strb	r2, [r3, #33]
2056:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         /* Process Unlocked */
2058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         __HAL_UNLOCK(hrtc);
 2654              		.loc 1 2058 9
 2655 007a FB68     		ldr	r3, [r7, #12]
 2656 007c 0022     		movs	r2, #0
 2657 007e 83F82020 		strb	r2, [r3, #32]
2059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2060:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 2658              		.loc 1 2060 16
 2659 0082 0323     		movs	r3, #3
 2660 0084 45E0     		b	.L123
 2661              	.L125:
2047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* TAMP */
 2662              		.loc 1 2047 11
 2663 0086 FB68     		ldr	r3, [r7, #12]
 2664 0088 1B68     		ldr	r3, [r3]
 2665 008a DB68     		ldr	r3, [r3, #12]
 2666 008c 03F00403 		and	r3, r3, #4
2047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* TAMP */
 2667              		.loc 1 2047 64
 2668 0090 002B     		cmp	r3, #0
 2669 0092 E2D0     		beq	.L126
 2670              	.L124:
2061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       }
2062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
2063:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
2064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2065:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure the Wakeup Timer counter */
2066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->Instance->WUTR = (uint32_t)WakeUpCounter;
 2671              		.loc 1 2066 7
 2672 0094 FB68     		ldr	r3, [r7, #12]
 2673 0096 1B68     		ldr	r3, [r3]
 2674              		.loc 1 2066 24
 2675 0098 BA68     		ldr	r2, [r7, #8]
 2676 009a 5A61     		str	r2, [r3, #20]
 2677              	.LBB2:
2067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clear the Wakeup Timer clock source bits and configure the clock source in CR register */
2069:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
2070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     uint32_t CR_tmp = hrtc->Instance->CR;
 2678              		.loc 1 2070 27
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 84


 2679 009c FB68     		ldr	r3, [r7, #12]
 2680 009e 1B68     		ldr	r3, [r3]
 2681              		.loc 1 2070 14
 2682 00a0 9B68     		ldr	r3, [r3, #8]
 2683 00a2 3B61     		str	r3, [r7, #16]
2071:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     CR_tmp &= (uint32_t)~RTC_CR_WUCKSEL;
 2684              		.loc 1 2071 12
 2685 00a4 3B69     		ldr	r3, [r7, #16]
 2686 00a6 23F00703 		bic	r3, r3, #7
 2687 00aa 3B61     		str	r3, [r7, #16]
2072:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     CR_tmp |= (uint32_t)WakeUpClock;
 2688              		.loc 1 2072 12
 2689 00ac 3A69     		ldr	r2, [r7, #16]
 2690 00ae 7B68     		ldr	r3, [r7, #4]
 2691 00b0 1343     		orrs	r3, r3, r2
 2692 00b2 3B61     		str	r3, [r7, #16]
2073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     hrtc->Instance->CR = CR_tmp;
 2693              		.loc 1 2073 9
 2694 00b4 FB68     		ldr	r3, [r7, #12]
 2695 00b6 1B68     		ldr	r3, [r3]
 2696              		.loc 1 2073 24
 2697 00b8 3A69     		ldr	r2, [r7, #16]
 2698 00ba 9A60     		str	r2, [r3, #8]
 2699              	.LBE2:
2074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
2075:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2076:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* RTC WakeUpTimer Interrupt Configuration: EXTI configuration */
2077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(DUAL_CORE)
2078:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (HAL_GetCurrentCPUID() == CM7_CPUID)
2079:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
2080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     __HAL_RTC_WAKEUPTIMER_EXTI_ENABLE_IT();
2081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
2082:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   else
2083:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
2084:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     __HAL_RTC_WAKEUPTIMER_EXTID2_ENABLE_IT();
2085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
2086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #else /* SINGLE_CORE */
2087:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_EXTI_ENABLE_IT();
 2700              		.loc 1 2087 3
 2701 00bc 184B     		ldr	r3, .L127+4
 2702 00be 1B68     		ldr	r3, [r3]
 2703 00c0 174A     		ldr	r2, .L127+4
 2704 00c2 43F40023 		orr	r3, r3, #524288
 2705 00c6 1360     		str	r3, [r2]
2088:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* DUAL_CORE */
2089:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2090:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_EXTI_ENABLE_RISING_EDGE();
 2706              		.loc 1 2090 3
 2707 00c8 4FF0B043 		mov	r3, #1476395008
 2708 00cc 1B68     		ldr	r3, [r3]
 2709 00ce 4FF0B042 		mov	r2, #1476395008
 2710 00d2 43F40023 		orr	r3, r3, #524288
 2711 00d6 1360     		str	r3, [r2]
2091:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2092:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure the Interrupt in the RTC_CR register */
2093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_ENABLE_IT(hrtc, RTC_IT_WUT);
 2712              		.loc 1 2093 3
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 85


 2713 00d8 FB68     		ldr	r3, [r7, #12]
 2714 00da 1B68     		ldr	r3, [r3]
 2715 00dc 9A68     		ldr	r2, [r3, #8]
 2716 00de FB68     		ldr	r3, [r7, #12]
 2717 00e0 1B68     		ldr	r3, [r3]
 2718 00e2 42F48042 		orr	r2, r2, #16384
 2719 00e6 9A60     		str	r2, [r3, #8]
2094:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2095:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable the Wakeup Timer */
2096:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_ENABLE(hrtc);
 2720              		.loc 1 2096 3
 2721 00e8 FB68     		ldr	r3, [r7, #12]
 2722 00ea 1B68     		ldr	r3, [r3]
 2723 00ec 9A68     		ldr	r2, [r3, #8]
 2724 00ee FB68     		ldr	r3, [r7, #12]
 2725 00f0 1B68     		ldr	r3, [r3]
 2726 00f2 42F48062 		orr	r2, r2, #1024
 2727 00f6 9A60     		str	r2, [r3, #8]
2097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
2099:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 2728              		.loc 1 2099 3
 2729 00f8 FB68     		ldr	r3, [r7, #12]
 2730 00fa 1B68     		ldr	r3, [r3]
 2731 00fc FF22     		movs	r2, #255
 2732 00fe 5A62     		str	r2, [r3, #36]
2100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 2733              		.loc 1 2101 15
 2734 0100 FB68     		ldr	r3, [r7, #12]
 2735 0102 0122     		movs	r2, #1
 2736 0104 83F82120 		strb	r2, [r3, #33]
2102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Unlocked */
2104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 2737              		.loc 1 2104 3
 2738 0108 FB68     		ldr	r3, [r7, #12]
 2739 010a 0022     		movs	r2, #0
 2740 010c 83F82020 		strb	r2, [r3, #32]
2105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 2741              		.loc 1 2106 10
 2742 0110 0023     		movs	r3, #0
 2743              	.L123:
2107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 2744              		.loc 1 2107 1
 2745 0112 1846     		mov	r0, r3
 2746 0114 1837     		adds	r7, r7, #24
 2747              	.LCFI110:
 2748              		.cfi_def_cfa_offset 8
 2749 0116 BD46     		mov	sp, r7
 2750              	.LCFI111:
 2751              		.cfi_def_cfa_register 13
 2752              		@ sp needed
 2753 0118 80BD     		pop	{r7, pc}
 2754              	.L128:
 2755 011a 00BF     		.align	2
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 86


 2756              	.L127:
 2757 011c 00400058 		.word	1476411392
 2758 0120 80000058 		.word	1476395136
 2759              		.cfi_endproc
 2760              	.LFE163:
 2762              		.section	.text.HAL_RTCEx_DeactivateWakeUpTimer,"ax",%progbits
 2763              		.align	1
 2764              		.global	HAL_RTCEx_DeactivateWakeUpTimer
 2765              		.syntax unified
 2766              		.thumb
 2767              		.thumb_func
 2769              	HAL_RTCEx_DeactivateWakeUpTimer:
 2770              	.LFB164:
2108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
2110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Deactivate wake up timer counter.
2111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
2112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
2113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
2114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_DeactivateWakeUpTimer(RTC_HandleTypeDef *hrtc)
2115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 2771              		.loc 1 2115 1
 2772              		.cfi_startproc
 2773              		@ args = 0, pretend = 0, frame = 16
 2774              		@ frame_needed = 1, uses_anonymous_args = 0
 2775 0000 80B5     		push	{r7, lr}
 2776              	.LCFI112:
 2777              		.cfi_def_cfa_offset 8
 2778              		.cfi_offset 7, -8
 2779              		.cfi_offset 14, -4
 2780 0002 84B0     		sub	sp, sp, #16
 2781              	.LCFI113:
 2782              		.cfi_def_cfa_offset 24
 2783 0004 00AF     		add	r7, sp, #0
 2784              	.LCFI114:
 2785              		.cfi_def_cfa_register 7
 2786 0006 7860     		str	r0, [r7, #4]
2116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tickstart;
2117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Locked */
2119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 2787              		.loc 1 2119 3
 2788 0008 7B68     		ldr	r3, [r7, #4]
 2789 000a 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 2790 000e 012B     		cmp	r3, #1
 2791 0010 01D1     		bne	.L130
 2792              		.loc 1 2119 3 is_stmt 0 discriminator 1
 2793 0012 0223     		movs	r3, #2
 2794              		.loc 1 2119 3
 2795 0014 4DE0     		b	.L131
 2796              	.L130:
 2797              		.loc 1 2119 3 discriminator 2
 2798 0016 7B68     		ldr	r3, [r7, #4]
 2799 0018 0122     		movs	r2, #1
 2800 001a 83F82020 		strb	r2, [r3, #32]
2120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 87


 2801              		.loc 1 2121 15 is_stmt 1
 2802 001e 7B68     		ldr	r3, [r7, #4]
 2803 0020 0222     		movs	r2, #2
 2804 0022 83F82120 		strb	r2, [r3, #33]
2122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
2124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 2805              		.loc 1 2124 3
 2806 0026 7B68     		ldr	r3, [r7, #4]
 2807 0028 1B68     		ldr	r3, [r3]
 2808 002a CA22     		movs	r2, #202
 2809 002c 5A62     		str	r2, [r3, #36]
 2810 002e 7B68     		ldr	r3, [r7, #4]
 2811 0030 1B68     		ldr	r3, [r3]
 2812 0032 5322     		movs	r2, #83
 2813 0034 5A62     		str	r2, [r3, #36]
2125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the Wakeup Timer */
2127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_DISABLE(hrtc);
 2814              		.loc 1 2127 3
 2815 0036 7B68     		ldr	r3, [r7, #4]
 2816 0038 1B68     		ldr	r3, [r3]
 2817 003a 9A68     		ldr	r2, [r3, #8]
 2818 003c 7B68     		ldr	r3, [r7, #4]
 2819 003e 1B68     		ldr	r3, [r3]
 2820 0040 22F48062 		bic	r2, r2, #1024
 2821 0044 9A60     		str	r2, [r3, #8]
2128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* In case of interrupt mode is used, the interrupt source must disabled */
2130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_DISABLE_IT(hrtc, RTC_IT_WUT);
 2822              		.loc 1 2130 3
 2823 0046 7B68     		ldr	r3, [r7, #4]
 2824 0048 1B68     		ldr	r3, [r3]
 2825 004a 9A68     		ldr	r2, [r3, #8]
 2826 004c 7B68     		ldr	r3, [r7, #4]
 2827 004e 1B68     		ldr	r3, [r3]
 2828 0050 22F48042 		bic	r2, r2, #16384
 2829 0054 9A60     		str	r2, [r3, #8]
2131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tickstart = HAL_GetTick();
 2830              		.loc 1 2132 15
 2831 0056 FFF7FEFF 		bl	HAL_GetTick
 2832 005a F860     		str	r0, [r7, #12]
2133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Wait till RTC WUTWF flag is set and if timeout is reached exit */
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(TAMP)
2135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   while (READ_BIT(hrtc->Instance->ICSR, RTC_FLAG_WUTWF) == 0U)
2136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #else
2137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   while(__HAL_RTC_WAKEUPTIMER_GET_FLAG(hrtc, RTC_FLAG_WUTWF) == 0U)
 2833              		.loc 1 2137 8
 2834 005c 15E0     		b	.L132
 2835              	.L133:
2138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* TAMP */
2139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
2140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((HAL_GetTick() - tickstart) > RTC_TIMEOUT_VALUE)
 2836              		.loc 1 2140 10
 2837 005e FFF7FEFF 		bl	HAL_GetTick
 2838 0062 0246     		mov	r2, r0
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 88


 2839              		.loc 1 2140 24 discriminator 1
 2840 0064 FB68     		ldr	r3, [r7, #12]
 2841 0066 D31A     		subs	r3, r2, r3
 2842              		.loc 1 2140 8 discriminator 1
 2843 0068 B3F57A7F 		cmp	r3, #1000
 2844 006c 0DD9     		bls	.L132
2141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
2142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       /* Enable the write protection for RTC registers */
2143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 2845              		.loc 1 2143 7
 2846 006e 7B68     		ldr	r3, [r7, #4]
 2847 0070 1B68     		ldr	r3, [r3]
 2848 0072 FF22     		movs	r2, #255
 2849 0074 5A62     		str	r2, [r3, #36]
2144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       hrtc->State = HAL_RTC_STATE_TIMEOUT;
 2850              		.loc 1 2145 19
 2851 0076 7B68     		ldr	r3, [r7, #4]
 2852 0078 0322     		movs	r2, #3
 2853 007a 83F82120 		strb	r2, [r3, #33]
2146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       /* Process Unlocked */
2148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       __HAL_UNLOCK(hrtc);
 2854              		.loc 1 2148 7
 2855 007e 7B68     		ldr	r3, [r7, #4]
 2856 0080 0022     		movs	r2, #0
 2857 0082 83F82020 		strb	r2, [r3, #32]
2149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       return HAL_TIMEOUT;
 2858              		.loc 1 2150 14
 2859 0086 0323     		movs	r3, #3
 2860 0088 13E0     		b	.L131
 2861              	.L132:
2137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* TAMP */
 2862              		.loc 1 2137 9
 2863 008a 7B68     		ldr	r3, [r7, #4]
 2864 008c 1B68     		ldr	r3, [r3]
 2865 008e DB68     		ldr	r3, [r3, #12]
 2866 0090 03F00403 		and	r3, r3, #4
2137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* TAMP */
 2867              		.loc 1 2137 62
 2868 0094 002B     		cmp	r3, #0
 2869 0096 E2D0     		beq	.L133
2151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
2152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
2153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
2155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 2870              		.loc 1 2155 3
 2871 0098 7B68     		ldr	r3, [r7, #4]
 2872 009a 1B68     		ldr	r3, [r3]
 2873 009c FF22     		movs	r2, #255
 2874 009e 5A62     		str	r2, [r3, #36]
2156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 2875              		.loc 1 2157 15
 2876 00a0 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 89


 2877 00a2 0122     		movs	r2, #1
 2878 00a4 83F82120 		strb	r2, [r3, #33]
2158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Unlocked */
2160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 2879              		.loc 1 2160 3
 2880 00a8 7B68     		ldr	r3, [r7, #4]
 2881 00aa 0022     		movs	r2, #0
 2882 00ac 83F82020 		strb	r2, [r3, #32]
2161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 2883              		.loc 1 2162 10
 2884 00b0 0023     		movs	r3, #0
 2885              	.L131:
2163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 2886              		.loc 1 2163 1
 2887 00b2 1846     		mov	r0, r3
 2888 00b4 1037     		adds	r7, r7, #16
 2889              	.LCFI115:
 2890              		.cfi_def_cfa_offset 8
 2891 00b6 BD46     		mov	sp, r7
 2892              	.LCFI116:
 2893              		.cfi_def_cfa_register 13
 2894              		@ sp needed
 2895 00b8 80BD     		pop	{r7, pc}
 2896              		.cfi_endproc
 2897              	.LFE164:
 2899              		.section	.text.HAL_RTCEx_GetWakeUpTimer,"ax",%progbits
 2900              		.align	1
 2901              		.global	HAL_RTCEx_GetWakeUpTimer
 2902              		.syntax unified
 2903              		.thumb
 2904              		.thumb_func
 2906              	HAL_RTCEx_GetWakeUpTimer:
 2907              	.LFB165:
2164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
2166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Get wake up timer counter.
2167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
2168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval Counter value
2169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
2170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** uint32_t HAL_RTCEx_GetWakeUpTimer(const RTC_HandleTypeDef *hrtc)
2171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 2908              		.loc 1 2171 1
 2909              		.cfi_startproc
 2910              		@ args = 0, pretend = 0, frame = 8
 2911              		@ frame_needed = 1, uses_anonymous_args = 0
 2912              		@ link register save eliminated.
 2913 0000 80B4     		push	{r7}
 2914              	.LCFI117:
 2915              		.cfi_def_cfa_offset 4
 2916              		.cfi_offset 7, -4
 2917 0002 83B0     		sub	sp, sp, #12
 2918              	.LCFI118:
 2919              		.cfi_def_cfa_offset 16
 2920 0004 00AF     		add	r7, sp, #0
 2921              	.LCFI119:
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 90


 2922              		.cfi_def_cfa_register 7
 2923 0006 7860     		str	r0, [r7, #4]
2172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Get the counter value */
2173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return ((uint32_t)(hrtc->Instance->WUTR & RTC_WUTR_WUT));
 2924              		.loc 1 2173 26
 2925 0008 7B68     		ldr	r3, [r7, #4]
 2926 000a 1B68     		ldr	r3, [r3]
 2927              		.loc 1 2173 36
 2928 000c 5B69     		ldr	r3, [r3, #20]
 2929              		.loc 1 2173 11
 2930 000e 9BB2     		uxth	r3, r3
2174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 2931              		.loc 1 2174 1
 2932 0010 1846     		mov	r0, r3
 2933 0012 0C37     		adds	r7, r7, #12
 2934              	.LCFI120:
 2935              		.cfi_def_cfa_offset 4
 2936 0014 BD46     		mov	sp, r7
 2937              	.LCFI121:
 2938              		.cfi_def_cfa_register 13
 2939              		@ sp needed
 2940 0016 5DF8047B 		ldr	r7, [sp], #4
 2941              	.LCFI122:
 2942              		.cfi_restore 7
 2943              		.cfi_def_cfa_offset 0
 2944 001a 7047     		bx	lr
 2945              		.cfi_endproc
 2946              	.LFE165:
 2948              		.section	.text.HAL_RTCEx_WakeUpTimerIRQHandler,"ax",%progbits
 2949              		.align	1
 2950              		.global	HAL_RTCEx_WakeUpTimerIRQHandler
 2951              		.syntax unified
 2952              		.thumb
 2953              		.thumb_func
 2955              	HAL_RTCEx_WakeUpTimerIRQHandler:
 2956              	.LFB166:
2175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
2177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Handle Wake Up Timer interrupt request.
2178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
2179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval None
2180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
2181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** void HAL_RTCEx_WakeUpTimerIRQHandler(RTC_HandleTypeDef *hrtc)
2182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 2957              		.loc 1 2182 1
 2958              		.cfi_startproc
 2959              		@ args = 0, pretend = 0, frame = 8
 2960              		@ frame_needed = 1, uses_anonymous_args = 0
 2961 0000 80B5     		push	{r7, lr}
 2962              	.LCFI123:
 2963              		.cfi_def_cfa_offset 8
 2964              		.cfi_offset 7, -8
 2965              		.cfi_offset 14, -4
 2966 0002 82B0     		sub	sp, sp, #8
 2967              	.LCFI124:
 2968              		.cfi_def_cfa_offset 16
 2969 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 91


 2970              	.LCFI125:
 2971              		.cfi_def_cfa_register 7
 2972 0006 7860     		str	r0, [r7, #4]
2183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clear the EXTI's line Flag for RTC WakeUpTimer */
2184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(DUAL_CORE)
2185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (HAL_GetCurrentCPUID() == CM7_CPUID)
2186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
2187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     __HAL_RTC_WAKEUPTIMER_EXTI_CLEAR_FLAG();
2188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
2189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   else
2190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
2191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     __HAL_RTC_WAKEUPTIMER_EXTID2_CLEAR_FLAG();
2192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
2193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #else /* SINGLE_CORE */
2194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_EXTI_CLEAR_FLAG();
 2973              		.loc 1 2194 3
 2974 0008 0F4B     		ldr	r3, .L138
 2975 000a 4FF40022 		mov	r2, #524288
 2976 000e 9A60     		str	r2, [r3, #8]
2195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* DUAL_CORE */
2196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(TAMP)
2198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Get the pending status of the WAKEUPTIMER Interrupt */
2199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if ((hrtc->Instance->MISR & RTC_MISR_WUTMF) != 0u)
2200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
2201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Immediately clear flags */
2202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     hrtc->Instance->SCR = RTC_SCR_CWUTF;
2203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* WAKEUPTIMER callback */
2205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
2206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Call WakeUpTimerEvent registered Callback */
2207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     hrtc->WakeUpTimerEventCallback(hrtc);
2208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   #else
2209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     HAL_RTCEx_WakeUpTimerEventCallback(hrtc);
2210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   #endif /* USE_HAL_RTC_REGISTER_CALLBACKS */
2211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
2212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #else
2213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Get the pending status of the WAKEUPTIMER Interrupt */
2214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (__HAL_RTC_WAKEUPTIMER_GET_FLAG(hrtc, RTC_FLAG_WUTF) != 0U)
 2977              		.loc 1 2214 7
 2978 0010 7B68     		ldr	r3, [r7, #4]
 2979 0012 1B68     		ldr	r3, [r3]
 2980 0014 DB68     		ldr	r3, [r3, #12]
 2981 0016 03F48063 		and	r3, r3, #1024
 2982              		.loc 1 2214 6
 2983 001a 002B     		cmp	r3, #0
 2984 001c 0BD0     		beq	.L137
2215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
2216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Clear the WAKEUPTIMER interrupt pending bit */
2217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     __HAL_RTC_WAKEUPTIMER_CLEAR_FLAG(hrtc, RTC_FLAG_WUTF);
 2985              		.loc 1 2217 5
 2986 001e 7B68     		ldr	r3, [r7, #4]
 2987 0020 1B68     		ldr	r3, [r3]
 2988 0022 DB68     		ldr	r3, [r3, #12]
 2989 0024 DAB2     		uxtb	r2, r3
 2990 0026 7B68     		ldr	r3, [r7, #4]
 2991 0028 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 92


 2992 002a 62F49062 		orn	r2, r2, #1152
 2993 002e DA60     		str	r2, [r3, #12]
2218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* WAKEUPTIMER callback */
2220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
2221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Call WakeUpTimerEvent registered Callback */
2222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     hrtc->WakeUpTimerEventCallback(hrtc);
2223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   #else
2224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     HAL_RTCEx_WakeUpTimerEventCallback(hrtc);
 2994              		.loc 1 2224 5
 2995 0030 7868     		ldr	r0, [r7, #4]
 2996 0032 FFF7FEFF 		bl	HAL_RTCEx_WakeUpTimerEventCallback
 2997              	.L137:
2225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   #endif /* USE_HAL_RTC_REGISTER_CALLBACKS */
2226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
2227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* TAMP */
2228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Change RTC state */
2230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 2998              		.loc 1 2230 15
 2999 0036 7B68     		ldr	r3, [r7, #4]
 3000 0038 0122     		movs	r2, #1
 3001 003a 83F82120 		strb	r2, [r3, #33]
2231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 3002              		.loc 1 2231 1
 3003 003e 00BF     		nop
 3004 0040 0837     		adds	r7, r7, #8
 3005              	.LCFI126:
 3006              		.cfi_def_cfa_offset 8
 3007 0042 BD46     		mov	sp, r7
 3008              	.LCFI127:
 3009              		.cfi_def_cfa_register 13
 3010              		@ sp needed
 3011 0044 80BD     		pop	{r7, pc}
 3012              	.L139:
 3013 0046 00BF     		.align	2
 3014              	.L138:
 3015 0048 80000058 		.word	1476395136
 3016              		.cfi_endproc
 3017              	.LFE166:
 3019              		.section	.text.HAL_RTCEx_WakeUpTimerEventCallback,"ax",%progbits
 3020              		.align	1
 3021              		.weak	HAL_RTCEx_WakeUpTimerEventCallback
 3022              		.syntax unified
 3023              		.thumb
 3024              		.thumb_func
 3026              	HAL_RTCEx_WakeUpTimerEventCallback:
 3027              	.LFB167:
2232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
2234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Wake Up Timer callback.
2235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
2236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval None
2237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
2238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_WakeUpTimerEventCallback(RTC_HandleTypeDef * hrtc)
2239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 3028              		.loc 1 2239 1
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 93


 3029              		.cfi_startproc
 3030              		@ args = 0, pretend = 0, frame = 8
 3031              		@ frame_needed = 1, uses_anonymous_args = 0
 3032              		@ link register save eliminated.
 3033 0000 80B4     		push	{r7}
 3034              	.LCFI128:
 3035              		.cfi_def_cfa_offset 4
 3036              		.cfi_offset 7, -4
 3037 0002 83B0     		sub	sp, sp, #12
 3038              	.LCFI129:
 3039              		.cfi_def_cfa_offset 16
 3040 0004 00AF     		add	r7, sp, #0
 3041              	.LCFI130:
 3042              		.cfi_def_cfa_register 7
 3043 0006 7860     		str	r0, [r7, #4]
2240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
2241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   UNUSED(hrtc);
2242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             the HAL_RTCEx_WakeUpTimerEventCallback could be implemented in the user file
2245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****    */
2246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 3044              		.loc 1 2246 1
 3045 0008 00BF     		nop
 3046 000a 0C37     		adds	r7, r7, #12
 3047              	.LCFI131:
 3048              		.cfi_def_cfa_offset 4
 3049 000c BD46     		mov	sp, r7
 3050              	.LCFI132:
 3051              		.cfi_def_cfa_register 13
 3052              		@ sp needed
 3053 000e 5DF8047B 		ldr	r7, [sp], #4
 3054              	.LCFI133:
 3055              		.cfi_restore 7
 3056              		.cfi_def_cfa_offset 0
 3057 0012 7047     		bx	lr
 3058              		.cfi_endproc
 3059              	.LFE167:
 3061              		.section	.text.HAL_RTCEx_PollForWakeUpTimerEvent,"ax",%progbits
 3062              		.align	1
 3063              		.global	HAL_RTCEx_PollForWakeUpTimerEvent
 3064              		.syntax unified
 3065              		.thumb
 3066              		.thumb_func
 3068              	HAL_RTCEx_PollForWakeUpTimerEvent:
 3069              	.LFB168:
2247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
2250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Handle Wake Up Timer Polling.
2251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
2252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  Timeout Timeout duration
2253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
2254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
2255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_PollForWakeUpTimerEvent(RTC_HandleTypeDef * hrtc, uint32_t Timeout)
2256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 3070              		.loc 1 2256 1
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 94


 3071              		.cfi_startproc
 3072              		@ args = 0, pretend = 0, frame = 16
 3073              		@ frame_needed = 1, uses_anonymous_args = 0
 3074 0000 80B5     		push	{r7, lr}
 3075              	.LCFI134:
 3076              		.cfi_def_cfa_offset 8
 3077              		.cfi_offset 7, -8
 3078              		.cfi_offset 14, -4
 3079 0002 84B0     		sub	sp, sp, #16
 3080              	.LCFI135:
 3081              		.cfi_def_cfa_offset 24
 3082 0004 00AF     		add	r7, sp, #0
 3083              	.LCFI136:
 3084              		.cfi_def_cfa_register 7
 3085 0006 7860     		str	r0, [r7, #4]
 3086 0008 3960     		str	r1, [r7]
2257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tickstart = HAL_GetTick();
 3087              		.loc 1 2257 24
 3088 000a FFF7FEFF 		bl	HAL_GetTick
 3089 000e F860     		str	r0, [r7, #12]
2258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   while(__HAL_RTC_WAKEUPTIMER_GET_FLAG(hrtc, RTC_FLAG_WUTF) == 0U)
 3090              		.loc 1 2259 8
 3091 0010 14E0     		b	.L143
 3092              	.L146:
2260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
2261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if (Timeout != HAL_MAX_DELAY)
 3093              		.loc 1 2261 8
 3094 0012 3B68     		ldr	r3, [r7]
 3095 0014 B3F1FF3F 		cmp	r3, #-1
 3096 0018 10D0     		beq	.L143
2262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
2263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 3097              		.loc 1 2263 13
 3098 001a FFF7FEFF 		bl	HAL_GetTick
 3099 001e 0246     		mov	r2, r0
 3100              		.loc 1 2263 27 discriminator 1
 3101 0020 FB68     		ldr	r3, [r7, #12]
 3102 0022 D31A     		subs	r3, r2, r3
 3103              		.loc 1 2263 10 discriminator 1
 3104 0024 3A68     		ldr	r2, [r7]
 3105 0026 9A42     		cmp	r2, r3
 3106 0028 02D3     		bcc	.L144
 3107              		.loc 1 2263 51 discriminator 1
 3108 002a 3B68     		ldr	r3, [r7]
 3109 002c 002B     		cmp	r3, #0
 3110 002e 05D1     		bne	.L143
 3111              	.L144:
2264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       {
2265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 3112              		.loc 1 2265 21
 3113 0030 7B68     		ldr	r3, [r7, #4]
 3114 0032 0322     		movs	r2, #3
 3115 0034 83F82120 		strb	r2, [r3, #33]
2266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 3116              		.loc 1 2266 16
 3117 0038 0323     		movs	r3, #3
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 95


 3118 003a 14E0     		b	.L145
 3119              	.L143:
2259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 3120              		.loc 1 2259 9
 3121 003c 7B68     		ldr	r3, [r7, #4]
 3122 003e 1B68     		ldr	r3, [r3]
 3123 0040 DB68     		ldr	r3, [r3, #12]
 3124 0042 03F48063 		and	r3, r3, #1024
2259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 3125              		.loc 1 2259 61
 3126 0046 002B     		cmp	r3, #0
 3127 0048 E3D0     		beq	.L146
2267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       }
2268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
2269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
2270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clear the WAKEUPTIMER Flag */
2272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_CLEAR_FLAG(hrtc, RTC_FLAG_WUTF);
 3128              		.loc 1 2272 3
 3129 004a 7B68     		ldr	r3, [r7, #4]
 3130 004c 1B68     		ldr	r3, [r3]
 3131 004e DB68     		ldr	r3, [r3, #12]
 3132 0050 DAB2     		uxtb	r2, r3
 3133 0052 7B68     		ldr	r3, [r7, #4]
 3134 0054 1B68     		ldr	r3, [r3]
 3135 0056 62F49062 		orn	r2, r2, #1152
 3136 005a DA60     		str	r2, [r3, #12]
2273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Change RTC state */
2275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 3137              		.loc 1 2275 15
 3138 005c 7B68     		ldr	r3, [r7, #4]
 3139 005e 0122     		movs	r2, #1
 3140 0060 83F82120 		strb	r2, [r3, #33]
2276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 3141              		.loc 1 2277 10
 3142 0064 0023     		movs	r3, #0
 3143              	.L145:
2278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 3144              		.loc 1 2278 1
 3145 0066 1846     		mov	r0, r3
 3146 0068 1037     		adds	r7, r7, #16
 3147              	.LCFI137:
 3148              		.cfi_def_cfa_offset 8
 3149 006a BD46     		mov	sp, r7
 3150              	.LCFI138:
 3151              		.cfi_def_cfa_register 13
 3152              		@ sp needed
 3153 006c 80BD     		pop	{r7, pc}
 3154              		.cfi_endproc
 3155              	.LFE168:
 3157              		.section	.text.HAL_RTCEx_BKUPWrite,"ax",%progbits
 3158              		.align	1
 3159              		.global	HAL_RTCEx_BKUPWrite
 3160              		.syntax unified
 3161              		.thumb
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 96


 3162              		.thumb_func
 3164              	HAL_RTCEx_BKUPWrite:
 3165              	.LFB169:
2279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
2281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @}
2282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
2283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /** @addtogroup RTCEx_Exported_Functions_Group6
2286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief      Extended RTC Backup register functions
2287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *
2288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** @verbatim
2289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****  ===============================================================================
2290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****              ##### Extended RTC Backup register functions #####
2291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****  ===============================================================================
2292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   [..]
2293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****    (+) Before calling any tamper or internal tamper function, you have to call first
2294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****        HAL_RTC_Init() function.
2295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****    (+) In that ine you can select to output tamper event on RTC pin.
2296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   [..]
2297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****    This subsection provides functions allowing to
2298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****    (+) Write a data in a specified RTC Backup data register
2299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****    (+) Read a data in a specified RTC Backup data register
2300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** @endverbatim
2301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @{
2302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
2303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
2306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Write a data in a specified RTC Backup data register.
2307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
2308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  BackupRegister RTC Backup data Register number.
2309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *          This parameter can be: RTC_BKP_DRx where x can be from 0 to 31 to
2310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *                                 specify the register.
2311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  Data Data to be written in the specified Backup data register.
2312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval None
2313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
2314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** void HAL_RTCEx_BKUPWrite(const RTC_HandleTypeDef * hrtc, uint32_t BackupRegister, uint32_t Data)
2315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 3166              		.loc 1 2315 1
 3167              		.cfi_startproc
 3168              		@ args = 0, pretend = 0, frame = 24
 3169              		@ frame_needed = 1, uses_anonymous_args = 0
 3170              		@ link register save eliminated.
 3171 0000 80B4     		push	{r7}
 3172              	.LCFI139:
 3173              		.cfi_def_cfa_offset 4
 3174              		.cfi_offset 7, -4
 3175 0002 87B0     		sub	sp, sp, #28
 3176              	.LCFI140:
 3177              		.cfi_def_cfa_offset 32
 3178 0004 00AF     		add	r7, sp, #0
 3179              	.LCFI141:
 3180              		.cfi_def_cfa_register 7
 3181 0006 F860     		str	r0, [r7, #12]
 3182 0008 B960     		str	r1, [r7, #8]
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 97


 3183 000a 7A60     		str	r2, [r7, #4]
2316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tmp;
2317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check the parameters */
2319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_BKP(BackupRegister));
2320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Point on address of first backup register */
2322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(TAMP)
2323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmp = (uint32_t) &(((TAMP_TypeDef *)((uint32_t)hrtc->Instance + TAMP_OFFSET))->BKP0R);
2324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #else
2325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmp = (uint32_t) &(hrtc->Instance->BKP0R);
 3184              		.loc 1 2325 26
 3185 000c FB68     		ldr	r3, [r7, #12]
 3186 000e 1B68     		ldr	r3, [r3]
 3187              		.loc 1 2325 20
 3188 0010 5033     		adds	r3, r3, #80
 3189              		.loc 1 2325 7
 3190 0012 7B61     		str	r3, [r7, #20]
2326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* TAMP */
2327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmp += (BackupRegister * 4U);
 3191              		.loc 1 2328 26
 3192 0014 BB68     		ldr	r3, [r7, #8]
 3193 0016 9B00     		lsls	r3, r3, #2
 3194              		.loc 1 2328 7
 3195 0018 7A69     		ldr	r2, [r7, #20]
 3196 001a 1344     		add	r3, r3, r2
 3197 001c 7B61     		str	r3, [r7, #20]
2329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Write the specified register */
2331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *(__IO uint32_t *)tmp = (uint32_t)Data;
 3198              		.loc 1 2331 4
 3199 001e 7B69     		ldr	r3, [r7, #20]
 3200              		.loc 1 2331 25
 3201 0020 7A68     		ldr	r2, [r7, #4]
 3202 0022 1A60     		str	r2, [r3]
2332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 3203              		.loc 1 2332 1
 3204 0024 00BF     		nop
 3205 0026 1C37     		adds	r7, r7, #28
 3206              	.LCFI142:
 3207              		.cfi_def_cfa_offset 4
 3208 0028 BD46     		mov	sp, r7
 3209              	.LCFI143:
 3210              		.cfi_def_cfa_register 13
 3211              		@ sp needed
 3212 002a 5DF8047B 		ldr	r7, [sp], #4
 3213              	.LCFI144:
 3214              		.cfi_restore 7
 3215              		.cfi_def_cfa_offset 0
 3216 002e 7047     		bx	lr
 3217              		.cfi_endproc
 3218              	.LFE169:
 3220              		.section	.text.HAL_RTCEx_BKUPRead,"ax",%progbits
 3221              		.align	1
 3222              		.global	HAL_RTCEx_BKUPRead
 3223              		.syntax unified
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 98


 3224              		.thumb
 3225              		.thumb_func
 3227              	HAL_RTCEx_BKUPRead:
 3228              	.LFB170:
2333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
2336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Read data from the specified RTC Backup data Register.
2337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
2338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  BackupRegister RTC Backup data Register number.
2339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *          This parameter can be: RTC_BKP_DRx where x can be from 0 to 31 to
2340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *                                 specify the register.
2341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval Read value
2342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
2343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** uint32_t HAL_RTCEx_BKUPRead(const RTC_HandleTypeDef * hrtc, uint32_t BackupRegister)
2344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 3229              		.loc 1 2344 1
 3230              		.cfi_startproc
 3231              		@ args = 0, pretend = 0, frame = 16
 3232              		@ frame_needed = 1, uses_anonymous_args = 0
 3233              		@ link register save eliminated.
 3234 0000 80B4     		push	{r7}
 3235              	.LCFI145:
 3236              		.cfi_def_cfa_offset 4
 3237              		.cfi_offset 7, -4
 3238 0002 85B0     		sub	sp, sp, #20
 3239              	.LCFI146:
 3240              		.cfi_def_cfa_offset 24
 3241 0004 00AF     		add	r7, sp, #0
 3242              	.LCFI147:
 3243              		.cfi_def_cfa_register 7
 3244 0006 7860     		str	r0, [r7, #4]
 3245 0008 3960     		str	r1, [r7]
2345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tmp;
2346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check the parameters */
2348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_BKP(BackupRegister));
2349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Point on address of first backup register */
2351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(TAMP)
2352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmp = (uint32_t) &(((TAMP_TypeDef *)((uint32_t)hrtc->Instance + TAMP_OFFSET))->BKP0R);
2353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #else
2354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmp = (uint32_t) &(hrtc->Instance->BKP0R);
 3246              		.loc 1 2354 26
 3247 000a 7B68     		ldr	r3, [r7, #4]
 3248 000c 1B68     		ldr	r3, [r3]
 3249              		.loc 1 2354 20
 3250 000e 5033     		adds	r3, r3, #80
 3251              		.loc 1 2354 7
 3252 0010 FB60     		str	r3, [r7, #12]
2355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* TAMP */
2356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmp += (BackupRegister * 4U);
 3253              		.loc 1 2357 26
 3254 0012 3B68     		ldr	r3, [r7]
 3255 0014 9B00     		lsls	r3, r3, #2
 3256              		.loc 1 2357 7
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 99


 3257 0016 FA68     		ldr	r2, [r7, #12]
 3258 0018 1344     		add	r3, r3, r2
 3259 001a FB60     		str	r3, [r7, #12]
2358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Read the specified register */
2360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return (*(__IO uint32_t *)tmp);
 3260              		.loc 1 2360 12
 3261 001c FB68     		ldr	r3, [r7, #12]
 3262              		.loc 1 2360 11
 3263 001e 1B68     		ldr	r3, [r3]
2361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 3264              		.loc 1 2361 1
 3265 0020 1846     		mov	r0, r3
 3266 0022 1437     		adds	r7, r7, #20
 3267              	.LCFI148:
 3268              		.cfi_def_cfa_offset 4
 3269 0024 BD46     		mov	sp, r7
 3270              	.LCFI149:
 3271              		.cfi_def_cfa_register 13
 3272              		@ sp needed
 3273 0026 5DF8047B 		ldr	r7, [sp], #4
 3274              	.LCFI150:
 3275              		.cfi_restore 7
 3276              		.cfi_def_cfa_offset 0
 3277 002a 7047     		bx	lr
 3278              		.cfi_endproc
 3279              	.LFE170:
 3281              		.section	.text.HAL_RTCEx_SetSmoothCalib,"ax",%progbits
 3282              		.align	1
 3283              		.global	HAL_RTCEx_SetSmoothCalib
 3284              		.syntax unified
 3285              		.thumb
 3286              		.thumb_func
 3288              	HAL_RTCEx_SetSmoothCalib:
 3289              	.LFB171:
2362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
2365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @}
2366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
2367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /** @addtogroup RTCEx_Exported_Functions_Group3
2370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief    Extended Peripheral Control functions
2371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *
2372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** @verbatim
2373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****  ===============================================================================
2374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****               ##### Extended Peripheral Control functions #####
2375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****  ===============================================================================
2376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     [..]
2377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     This subsection provides functions allowing to
2378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       (+) Write a data in a specified RTC Backup data register
2379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       (+) Read a data in a specified RTC Backup data register
2380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       (+) Set the Smooth calibration parameters.
2381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       (+) Set Low Power calibration parameter (if feature supported).
2382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       (+) Configure the Synchronization Shift Control Settings.
2383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       (+) Configure the Calibration Pinout (RTC_CALIB) Selection (1Hz or 512Hz).
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 100


2384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       (+) Deactivate the Calibration Pinout (RTC_CALIB) Selection (1Hz or 512Hz).
2385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       (+) Enable the RTC reference clock detection.
2386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       (+) Disable the RTC reference clock detection.
2387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       (+) Enable the Bypass Shadow feature.
2388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       (+) Disable the Bypass Shadow feature.
2389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** @endverbatim
2391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @{
2392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
2393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
2396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Set the Smooth calibration parameters.
2397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
2398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  SmoothCalibPeriod Select the Smooth Calibration Period.
2399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *          This parameter can be can be one of the following values :
2400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *             @arg RTC_SMOOTHCALIB_PERIOD_32SEC: The smooth calibration period is 32s.
2401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *             @arg RTC_SMOOTHCALIB_PERIOD_16SEC: The smooth calibration period is 16s.
2402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *             @arg RTC_SMOOTHCALIB_PERIOD_8SEC: The smooth calibration period is 8s.
2403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  SmoothCalibPlusPulses Select to Set or reset the CALP bit.
2404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values:
2405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *             @arg RTC_SMOOTHCALIB_PLUSPULSES_SET: Add one RTCCLK pulse every 2*11 pulses.
2406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *             @arg RTC_SMOOTHCALIB_PLUSPULSES_RESET: No RTCCLK pulses are added.
2407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  SmoothCalibMinusPulsesValue Select the value of CALM[8:0] bits.
2408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *          This parameter can be one any value from 0 to 0x000001FF.
2409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @note   To deactivate the smooth calibration, the field SmoothCalibPlusPulses
2410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *         must be equal to SMOOTHCALIB_PLUSPULSES_RESET and the field
2411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *         SmoothCalibMinusPulsesValue must be equal to 0.
2412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
2413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
2414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetSmoothCalib(RTC_HandleTypeDef * hrtc, uint32_t SmoothCalibPeriod, ui
2415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 3290              		.loc 1 2415 1
 3291              		.cfi_startproc
 3292              		@ args = 0, pretend = 0, frame = 24
 3293              		@ frame_needed = 1, uses_anonymous_args = 0
 3294 0000 80B5     		push	{r7, lr}
 3295              	.LCFI151:
 3296              		.cfi_def_cfa_offset 8
 3297              		.cfi_offset 7, -8
 3298              		.cfi_offset 14, -4
 3299 0002 86B0     		sub	sp, sp, #24
 3300              	.LCFI152:
 3301              		.cfi_def_cfa_offset 32
 3302 0004 00AF     		add	r7, sp, #0
 3303              	.LCFI153:
 3304              		.cfi_def_cfa_register 7
 3305 0006 F860     		str	r0, [r7, #12]
 3306 0008 B960     		str	r1, [r7, #8]
 3307 000a 7A60     		str	r2, [r7, #4]
 3308 000c 3B60     		str	r3, [r7]
2416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tickstart;
2417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check the parameters */
2419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_SMOOTH_CALIB_PERIOD(SmoothCalibPeriod));
2420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_SMOOTH_CALIB_PLUS(SmoothCalibPlusPulses));
2421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_SMOOTH_CALIB_MINUS(SmoothCalibMinusPulsesValue));
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 101


2422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Locked */
2424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 3309              		.loc 1 2424 3
 3310 000e FB68     		ldr	r3, [r7, #12]
 3311 0010 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 3312 0014 012B     		cmp	r3, #1
 3313 0016 01D1     		bne	.L151
 3314              		.loc 1 2424 3 is_stmt 0 discriminator 1
 3315 0018 0223     		movs	r3, #2
 3316              		.loc 1 2424 3
 3317 001a 52E0     		b	.L152
 3318              	.L151:
 3319              		.loc 1 2424 3 discriminator 2
 3320 001c FB68     		ldr	r3, [r7, #12]
 3321 001e 0122     		movs	r2, #1
 3322 0020 83F82020 		strb	r2, [r3, #32]
2425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 3323              		.loc 1 2426 15 is_stmt 1
 3324 0024 FB68     		ldr	r3, [r7, #12]
 3325 0026 0222     		movs	r2, #2
 3326 0028 83F82120 		strb	r2, [r3, #33]
2427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
2429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 3327              		.loc 1 2429 3
 3328 002c FB68     		ldr	r3, [r7, #12]
 3329 002e 1B68     		ldr	r3, [r3]
 3330 0030 CA22     		movs	r2, #202
 3331 0032 5A62     		str	r2, [r3, #36]
 3332 0034 FB68     		ldr	r3, [r7, #12]
 3333 0036 1B68     		ldr	r3, [r3]
 3334 0038 5322     		movs	r2, #83
 3335 003a 5A62     		str	r2, [r3, #36]
2430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(TAMP)
2432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* check if a calibration operation is pending */
2433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if ((hrtc->Instance->ICSR & RTC_ICSR_RECALPF) != 0U)
2434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
2435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     tickstart = HAL_GetTick();
2436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Wait for pending calibration operation to finish */
2438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     while ((hrtc->Instance->ICSR & RTC_ICSR_RECALPF) != 0U)
2439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #else
2440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* check if a calibration operation is pending */
2441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if ((hrtc->Instance->ISR  & RTC_ISR_RECALPF)  != 0U)
 3336              		.loc 1 2441 12
 3337 003c FB68     		ldr	r3, [r7, #12]
 3338 003e 1B68     		ldr	r3, [r3]
 3339              		.loc 1 2441 22
 3340 0040 DB68     		ldr	r3, [r3, #12]
 3341              		.loc 1 2441 29
 3342 0042 03F48033 		and	r3, r3, #65536
 3343              		.loc 1 2441 6
 3344 0046 002B     		cmp	r3, #0
 3345 0048 20D0     		beq	.L153
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 102


2442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
2443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     tickstart = HAL_GetTick();
 3346              		.loc 1 2443 17
 3347 004a FFF7FEFF 		bl	HAL_GetTick
 3348 004e 7861     		str	r0, [r7, #20]
2444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Wait for pending calibration operation to finish */
2446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     while ((hrtc->Instance->ISR  & RTC_ISR_RECALPF)  != 0U)
 3349              		.loc 1 2446 11
 3350 0050 15E0     		b	.L154
 3351              	.L155:
2447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* TAMP */
2448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
2449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       if ((HAL_GetTick() - tickstart) > RTC_TIMEOUT_VALUE)
 3352              		.loc 1 2449 12
 3353 0052 FFF7FEFF 		bl	HAL_GetTick
 3354 0056 0246     		mov	r2, r0
 3355              		.loc 1 2449 26 discriminator 1
 3356 0058 7B69     		ldr	r3, [r7, #20]
 3357 005a D31A     		subs	r3, r2, r3
 3358              		.loc 1 2449 10 discriminator 1
 3359 005c B3F57A7F 		cmp	r3, #1000
 3360 0060 0DD9     		bls	.L154
2450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       {
2451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         /* Enable the write protection for RTC registers */
2452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 3361              		.loc 1 2452 9
 3362 0062 FB68     		ldr	r3, [r7, #12]
 3363 0064 1B68     		ldr	r3, [r3]
 3364 0066 FF22     		movs	r2, #255
 3365 0068 5A62     		str	r2, [r3, #36]
2453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         /* Change RTC state */
2455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 3366              		.loc 1 2455 21
 3367 006a FB68     		ldr	r3, [r7, #12]
 3368 006c 0322     		movs	r2, #3
 3369 006e 83F82120 		strb	r2, [r3, #33]
2456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         /* Process Unlocked */
2458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         __HAL_UNLOCK(hrtc);
 3370              		.loc 1 2458 9
 3371 0072 FB68     		ldr	r3, [r7, #12]
 3372 0074 0022     		movs	r2, #0
 3373 0076 83F82020 		strb	r2, [r3, #32]
2459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 3374              		.loc 1 2460 16
 3375 007a 0323     		movs	r3, #3
 3376 007c 21E0     		b	.L152
 3377              	.L154:
2446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* TAMP */
 3378              		.loc 1 2446 17
 3379 007e FB68     		ldr	r3, [r7, #12]
 3380 0080 1B68     		ldr	r3, [r3]
2446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* TAMP */
 3381              		.loc 1 2446 27
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 103


 3382 0082 DB68     		ldr	r3, [r3, #12]
2446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* TAMP */
 3383              		.loc 1 2446 34
 3384 0084 03F48033 		and	r3, r3, #65536
2446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* TAMP */
 3385              		.loc 1 2446 54
 3386 0088 002B     		cmp	r3, #0
 3387 008a E2D1     		bne	.L155
 3388              	.L153:
2461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       }
2462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
2463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
2464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure the Smooth calibration settings */
2466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   MODIFY_REG(hrtc->Instance->CALR, (RTC_CALR_CALP | RTC_CALR_CALW8 | RTC_CALR_CALW16 | RTC_CALR_CAL
 3389              		.loc 1 2466 3
 3390 008c FB68     		ldr	r3, [r7, #12]
 3391 008e 1B68     		ldr	r3, [r3]
 3392 0090 DA6B     		ldr	r2, [r3, #60]
 3393 0092 0E4B     		ldr	r3, .L156
 3394 0094 1340     		ands	r3, r3, r2
 3395 0096 B968     		ldr	r1, [r7, #8]
 3396 0098 7A68     		ldr	r2, [r7, #4]
 3397 009a 1143     		orrs	r1, r1, r2
 3398 009c 3A68     		ldr	r2, [r7]
 3399 009e 1143     		orrs	r1, r1, r2
 3400 00a0 FA68     		ldr	r2, [r7, #12]
 3401 00a2 1268     		ldr	r2, [r2]
 3402 00a4 0B43     		orrs	r3, r3, r1
 3403 00a6 D363     		str	r3, [r2, #60]
2467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
2469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 3404              		.loc 1 2469 3
 3405 00a8 FB68     		ldr	r3, [r7, #12]
 3406 00aa 1B68     		ldr	r3, [r3]
 3407 00ac FF22     		movs	r2, #255
 3408 00ae 5A62     		str	r2, [r3, #36]
2470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Change RTC state */
2472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 3409              		.loc 1 2472 15
 3410 00b0 FB68     		ldr	r3, [r7, #12]
 3411 00b2 0122     		movs	r2, #1
 3412 00b4 83F82120 		strb	r2, [r3, #33]
2473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Unlocked */
2475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 3413              		.loc 1 2475 3
 3414 00b8 FB68     		ldr	r3, [r7, #12]
 3415 00ba 0022     		movs	r2, #0
 3416 00bc 83F82020 		strb	r2, [r3, #32]
2476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 3417              		.loc 1 2477 10
 3418 00c0 0023     		movs	r3, #0
 3419              	.L152:
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 104


2478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 3420              		.loc 1 2478 1
 3421 00c2 1846     		mov	r0, r3
 3422 00c4 1837     		adds	r7, r7, #24
 3423              	.LCFI154:
 3424              		.cfi_def_cfa_offset 8
 3425 00c6 BD46     		mov	sp, r7
 3426              	.LCFI155:
 3427              		.cfi_def_cfa_register 13
 3428              		@ sp needed
 3429 00c8 80BD     		pop	{r7, pc}
 3430              	.L157:
 3431 00ca 00BF     		.align	2
 3432              	.L156:
 3433 00cc 001EFFFF 		.word	-57856
 3434              		.cfi_endproc
 3435              	.LFE171:
 3437              		.section	.text.HAL_RTCEx_SetSynchroShift,"ax",%progbits
 3438              		.align	1
 3439              		.global	HAL_RTCEx_SetSynchroShift
 3440              		.syntax unified
 3441              		.thumb
 3442              		.thumb_func
 3444              	HAL_RTCEx_SetSynchroShift:
 3445              	.LFB172:
2479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
2481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Configure the Synchronization Shift Control Settings.
2482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @note   When REFCKON is set, firmware must not write to Shift control register.
2483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
2484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  ShiftAdd1S Select to add or not 1 second to the time calendar.
2485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values:
2486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *             @arg RTC_SHIFTADD1S_SET: Add one second to the clock calendar.
2487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *             @arg RTC_SHIFTADD1S_RESET: No effect.
2488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  ShiftSubFS Select the number of Second Fractions to substitute.
2489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *          This parameter can be one any value from 0 to 0x7FFF.
2490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
2491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
2492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetSynchroShift(RTC_HandleTypeDef * hrtc, uint32_t ShiftAdd1S, uint32_t
2493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 3446              		.loc 1 2493 1
 3447              		.cfi_startproc
 3448              		@ args = 0, pretend = 0, frame = 24
 3449              		@ frame_needed = 1, uses_anonymous_args = 0
 3450 0000 80B5     		push	{r7, lr}
 3451              	.LCFI156:
 3452              		.cfi_def_cfa_offset 8
 3453              		.cfi_offset 7, -8
 3454              		.cfi_offset 14, -4
 3455 0002 86B0     		sub	sp, sp, #24
 3456              	.LCFI157:
 3457              		.cfi_def_cfa_offset 32
 3458 0004 00AF     		add	r7, sp, #0
 3459              	.LCFI158:
 3460              		.cfi_def_cfa_register 7
 3461 0006 F860     		str	r0, [r7, #12]
 3462 0008 B960     		str	r1, [r7, #8]
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 105


 3463 000a 7A60     		str	r2, [r7, #4]
2494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tickstart;
2495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check the parameters */
2497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_SHIFT_ADD1S(ShiftAdd1S));
2498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_SHIFT_SUBFS(ShiftSubFS));
2499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Locked */
2501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 3464              		.loc 1 2501 3
 3465 000c FB68     		ldr	r3, [r7, #12]
 3466 000e 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 3467 0012 012B     		cmp	r3, #1
 3468 0014 01D1     		bne	.L159
 3469              		.loc 1 2501 3 is_stmt 0 discriminator 1
 3470 0016 0223     		movs	r3, #2
 3471              		.loc 1 2501 3
 3472 0018 73E0     		b	.L160
 3473              	.L159:
 3474              		.loc 1 2501 3 discriminator 2
 3475 001a FB68     		ldr	r3, [r7, #12]
 3476 001c 0122     		movs	r2, #1
 3477 001e 83F82020 		strb	r2, [r3, #32]
2502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 3478              		.loc 1 2503 15 is_stmt 1
 3479 0022 FB68     		ldr	r3, [r7, #12]
 3480 0024 0222     		movs	r2, #2
 3481 0026 83F82120 		strb	r2, [r3, #33]
2504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
2506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 3482              		.loc 1 2506 3
 3483 002a FB68     		ldr	r3, [r7, #12]
 3484 002c 1B68     		ldr	r3, [r3]
 3485 002e CA22     		movs	r2, #202
 3486 0030 5A62     		str	r2, [r3, #36]
 3487 0032 FB68     		ldr	r3, [r7, #12]
 3488 0034 1B68     		ldr	r3, [r3]
 3489 0036 5322     		movs	r2, #83
 3490 0038 5A62     		str	r2, [r3, #36]
2507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tickstart = HAL_GetTick();
 3491              		.loc 1 2508 15
 3492 003a FFF7FEFF 		bl	HAL_GetTick
 3493 003e 7861     		str	r0, [r7, #20]
2509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Wait until the shift is completed */
2511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(TAMP)
2512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   while ((hrtc->Instance->ICSR & RTC_ICSR_SHPF) != 0U)
2513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #else
2514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     while ((hrtc->Instance->ISR  & RTC_ISR_SHPF)  != 0U)
 3494              		.loc 1 2514 11
 3495 0040 15E0     		b	.L161
 3496              	.L162:
2515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* TAMP */
2516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 106


2517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       if ((HAL_GetTick() - tickstart) > RTC_TIMEOUT_VALUE)
 3497              		.loc 1 2517 12
 3498 0042 FFF7FEFF 		bl	HAL_GetTick
 3499 0046 0246     		mov	r2, r0
 3500              		.loc 1 2517 26 discriminator 1
 3501 0048 7B69     		ldr	r3, [r7, #20]
 3502 004a D31A     		subs	r3, r2, r3
 3503              		.loc 1 2517 10 discriminator 1
 3504 004c B3F57A7F 		cmp	r3, #1000
 3505 0050 0DD9     		bls	.L161
2518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       {
2519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         /* Enable the write protection for RTC registers */
2520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 3506              		.loc 1 2520 9
 3507 0052 FB68     		ldr	r3, [r7, #12]
 3508 0054 1B68     		ldr	r3, [r3]
 3509 0056 FF22     		movs	r2, #255
 3510 0058 5A62     		str	r2, [r3, #36]
2521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 3511              		.loc 1 2522 21
 3512 005a FB68     		ldr	r3, [r7, #12]
 3513 005c 0322     		movs	r2, #3
 3514 005e 83F82120 		strb	r2, [r3, #33]
2523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         /* Process Unlocked */
2525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         __HAL_UNLOCK(hrtc);
 3515              		.loc 1 2525 9
 3516 0062 FB68     		ldr	r3, [r7, #12]
 3517 0064 0022     		movs	r2, #0
 3518 0066 83F82020 		strb	r2, [r3, #32]
2526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 3519              		.loc 1 2527 16
 3520 006a 0323     		movs	r3, #3
 3521 006c 49E0     		b	.L160
 3522              	.L161:
2514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* TAMP */
 3523              		.loc 1 2514 17
 3524 006e FB68     		ldr	r3, [r7, #12]
 3525 0070 1B68     		ldr	r3, [r3]
2514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* TAMP */
 3526              		.loc 1 2514 27
 3527 0072 DB68     		ldr	r3, [r3, #12]
2514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* TAMP */
 3528              		.loc 1 2514 34
 3529 0074 03F00803 		and	r3, r3, #8
2514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* TAMP */
 3530              		.loc 1 2514 51
 3531 0078 002B     		cmp	r3, #0
 3532 007a E2D1     		bne	.L162
2528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       }
2529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
2530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check if the reference clock detection is disabled */
2532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if ((hrtc->Instance->CR & RTC_CR_REFCKON) == 0U)
 3533              		.loc 1 2532 12
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 107


 3534 007c FB68     		ldr	r3, [r7, #12]
 3535 007e 1B68     		ldr	r3, [r3]
 3536              		.loc 1 2532 22
 3537 0080 9B68     		ldr	r3, [r3, #8]
 3538              		.loc 1 2532 27
 3539 0082 03F01003 		and	r3, r3, #16
 3540              		.loc 1 2532 6
 3541 0086 002B     		cmp	r3, #0
 3542 0088 20D1     		bne	.L163
2533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
2534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Configure the Shift settings */
2535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     hrtc->Instance->SHIFTR = (uint32_t)(uint32_t)(ShiftSubFS) | (uint32_t)(ShiftAdd1S);
 3543              		.loc 1 2535 9
 3544 008a FB68     		ldr	r3, [r7, #12]
 3545 008c 1B68     		ldr	r3, [r3]
 3546              		.loc 1 2535 63
 3547 008e 7968     		ldr	r1, [r7, #4]
 3548 0090 BA68     		ldr	r2, [r7, #8]
 3549 0092 0A43     		orrs	r2, r2, r1
 3550              		.loc 1 2535 28
 3551 0094 DA62     		str	r2, [r3, #44]
2536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* If  RTC_CR_BYPSHAD bit = 0, wait for synchro else this check is not needed */
2538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((hrtc->Instance->CR & RTC_CR_BYPSHAD) == 0U)
 3552              		.loc 1 2538 14
 3553 0096 FB68     		ldr	r3, [r7, #12]
 3554 0098 1B68     		ldr	r3, [r3]
 3555              		.loc 1 2538 24
 3556 009a 9B68     		ldr	r3, [r3, #8]
 3557              		.loc 1 2538 29
 3558 009c 03F02003 		and	r3, r3, #32
 3559              		.loc 1 2538 8
 3560 00a0 002B     		cmp	r3, #0
 3561 00a2 21D1     		bne	.L164
2539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
2540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       if (HAL_RTC_WaitForSynchro(hrtc) != HAL_OK)
 3562              		.loc 1 2540 11
 3563 00a4 F868     		ldr	r0, [r7, #12]
 3564 00a6 FFF7FEFF 		bl	HAL_RTC_WaitForSynchro
 3565 00aa 0346     		mov	r3, r0
 3566              		.loc 1 2540 10 discriminator 1
 3567 00ac 002B     		cmp	r3, #0
 3568 00ae 1BD0     		beq	.L164
2541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       {
2542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         /* Enable the write protection for RTC registers */
2543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 3569              		.loc 1 2543 9
 3570 00b0 FB68     		ldr	r3, [r7, #12]
 3571 00b2 1B68     		ldr	r3, [r3]
 3572 00b4 FF22     		movs	r2, #255
 3573 00b6 5A62     		str	r2, [r3, #36]
2544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_ERROR;
 3574              		.loc 1 2545 21
 3575 00b8 FB68     		ldr	r3, [r7, #12]
 3576 00ba 0422     		movs	r2, #4
 3577 00bc 83F82120 		strb	r2, [r3, #33]
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 108


2546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         /* Process Unlocked */
2548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         __HAL_UNLOCK(hrtc);
 3578              		.loc 1 2548 9
 3579 00c0 FB68     		ldr	r3, [r7, #12]
 3580 00c2 0022     		movs	r2, #0
 3581 00c4 83F82020 		strb	r2, [r3, #32]
2549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         return HAL_ERROR;
 3582              		.loc 1 2550 16
 3583 00c8 0123     		movs	r3, #1
 3584 00ca 1AE0     		b	.L160
 3585              	.L163:
2551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       }
2552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
2553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
2554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   else
2555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
2556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Enable the write protection for RTC registers */
2557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 3586              		.loc 1 2557 5
 3587 00cc FB68     		ldr	r3, [r7, #12]
 3588 00ce 1B68     		ldr	r3, [r3]
 3589 00d0 FF22     		movs	r2, #255
 3590 00d2 5A62     		str	r2, [r3, #36]
2558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Change RTC state */
2560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     hrtc->State = HAL_RTC_STATE_ERROR;
 3591              		.loc 1 2560 17
 3592 00d4 FB68     		ldr	r3, [r7, #12]
 3593 00d6 0422     		movs	r2, #4
 3594 00d8 83F82120 		strb	r2, [r3, #33]
2561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Process Unlocked */
2563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     __HAL_UNLOCK(hrtc);
 3595              		.loc 1 2563 5
 3596 00dc FB68     		ldr	r3, [r7, #12]
 3597 00de 0022     		movs	r2, #0
 3598 00e0 83F82020 		strb	r2, [r3, #32]
2564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     return HAL_ERROR;
 3599              		.loc 1 2565 12
 3600 00e4 0123     		movs	r3, #1
 3601 00e6 0CE0     		b	.L160
 3602              	.L164:
2566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
2567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
2569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 3603              		.loc 1 2569 3
 3604 00e8 FB68     		ldr	r3, [r7, #12]
 3605 00ea 1B68     		ldr	r3, [r3]
 3606 00ec FF22     		movs	r2, #255
 3607 00ee 5A62     		str	r2, [r3, #36]
2570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Change RTC state */
2572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 109


 3608              		.loc 1 2572 15
 3609 00f0 FB68     		ldr	r3, [r7, #12]
 3610 00f2 0122     		movs	r2, #1
 3611 00f4 83F82120 		strb	r2, [r3, #33]
2573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Unlocked */
2575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 3612              		.loc 1 2575 3
 3613 00f8 FB68     		ldr	r3, [r7, #12]
 3614 00fa 0022     		movs	r2, #0
 3615 00fc 83F82020 		strb	r2, [r3, #32]
2576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 3616              		.loc 1 2577 10
 3617 0100 0023     		movs	r3, #0
 3618              	.L160:
2578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 3619              		.loc 1 2578 1
 3620 0102 1846     		mov	r0, r3
 3621 0104 1837     		adds	r7, r7, #24
 3622              	.LCFI159:
 3623              		.cfi_def_cfa_offset 8
 3624 0106 BD46     		mov	sp, r7
 3625              	.LCFI160:
 3626              		.cfi_def_cfa_register 13
 3627              		@ sp needed
 3628 0108 80BD     		pop	{r7, pc}
 3629              		.cfi_endproc
 3630              	.LFE172:
 3632              		.section	.text.HAL_RTCEx_SetCalibrationOutPut,"ax",%progbits
 3633              		.align	1
 3634              		.global	HAL_RTCEx_SetCalibrationOutPut
 3635              		.syntax unified
 3636              		.thumb
 3637              		.thumb_func
 3639              	HAL_RTCEx_SetCalibrationOutPut:
 3640              	.LFB173:
2579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
2581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Configure the Calibration Pinout (RTC_CALIB) Selection (1Hz or 512Hz).
2582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
2583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  CalibOutput Select the Calibration output Selection.
2584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values:
2585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *             @arg RTC_CALIBOUTPUT_512HZ: A signal has a regular waveform at 512Hz.
2586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *             @arg RTC_CALIBOUTPUT_1HZ: A signal has a regular waveform at 1Hz.
2587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
2588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
2589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetCalibrationOutPut(RTC_HandleTypeDef * hrtc, uint32_t CalibOutput)
2590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 3641              		.loc 1 2590 1
 3642              		.cfi_startproc
 3643              		@ args = 0, pretend = 0, frame = 8
 3644              		@ frame_needed = 1, uses_anonymous_args = 0
 3645              		@ link register save eliminated.
 3646 0000 80B4     		push	{r7}
 3647              	.LCFI161:
 3648              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 110


 3649              		.cfi_offset 7, -4
 3650 0002 83B0     		sub	sp, sp, #12
 3651              	.LCFI162:
 3652              		.cfi_def_cfa_offset 16
 3653 0004 00AF     		add	r7, sp, #0
 3654              	.LCFI163:
 3655              		.cfi_def_cfa_register 7
 3656 0006 7860     		str	r0, [r7, #4]
 3657 0008 3960     		str	r1, [r7]
2591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check the parameters */
2592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_CALIB_OUTPUT(CalibOutput));
2593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Locked */
2595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 3658              		.loc 1 2595 3
 3659 000a 7B68     		ldr	r3, [r7, #4]
 3660 000c 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 3661 0010 012B     		cmp	r3, #1
 3662 0012 01D1     		bne	.L166
 3663              		.loc 1 2595 3 is_stmt 0 discriminator 1
 3664 0014 0223     		movs	r3, #2
 3665              		.loc 1 2595 3
 3666 0016 34E0     		b	.L167
 3667              	.L166:
 3668              		.loc 1 2595 3 discriminator 2
 3669 0018 7B68     		ldr	r3, [r7, #4]
 3670 001a 0122     		movs	r2, #1
 3671 001c 83F82020 		strb	r2, [r3, #32]
2596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 3672              		.loc 1 2597 15 is_stmt 1
 3673 0020 7B68     		ldr	r3, [r7, #4]
 3674 0022 0222     		movs	r2, #2
 3675 0024 83F82120 		strb	r2, [r3, #33]
2598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
2600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 3676              		.loc 1 2600 3
 3677 0028 7B68     		ldr	r3, [r7, #4]
 3678 002a 1B68     		ldr	r3, [r3]
 3679 002c CA22     		movs	r2, #202
 3680 002e 5A62     		str	r2, [r3, #36]
 3681 0030 7B68     		ldr	r3, [r7, #4]
 3682 0032 1B68     		ldr	r3, [r3]
 3683 0034 5322     		movs	r2, #83
 3684 0036 5A62     		str	r2, [r3, #36]
2601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clear flags before config */
2603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->Instance->CR &= (uint32_t)~RTC_CR_COSEL;
 3685              		.loc 1 2603 7
 3686 0038 7B68     		ldr	r3, [r7, #4]
 3687 003a 1B68     		ldr	r3, [r3]
 3688              		.loc 1 2603 17
 3689 003c 9A68     		ldr	r2, [r3, #8]
 3690              		.loc 1 2603 7
 3691 003e 7B68     		ldr	r3, [r7, #4]
 3692 0040 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 111


 3693              		.loc 1 2603 22
 3694 0042 22F40022 		bic	r2, r2, #524288
 3695 0046 9A60     		str	r2, [r3, #8]
2604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure the RTC_CR register */
2606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->Instance->CR |= (uint32_t)CalibOutput;
 3696              		.loc 1 2606 7
 3697 0048 7B68     		ldr	r3, [r7, #4]
 3698 004a 1B68     		ldr	r3, [r3]
 3699              		.loc 1 2606 17
 3700 004c 9968     		ldr	r1, [r3, #8]
 3701              		.loc 1 2606 7
 3702 004e 7B68     		ldr	r3, [r7, #4]
 3703 0050 1B68     		ldr	r3, [r3]
 3704              		.loc 1 2606 22
 3705 0052 3A68     		ldr	r2, [r7]
 3706 0054 0A43     		orrs	r2, r2, r1
 3707 0056 9A60     		str	r2, [r3, #8]
2607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_CALIBRATION_OUTPUT_ENABLE(hrtc);
 3708              		.loc 1 2608 3
 3709 0058 7B68     		ldr	r3, [r7, #4]
 3710 005a 1B68     		ldr	r3, [r3]
 3711 005c 9A68     		ldr	r2, [r3, #8]
 3712 005e 7B68     		ldr	r3, [r7, #4]
 3713 0060 1B68     		ldr	r3, [r3]
 3714 0062 42F40002 		orr	r2, r2, #8388608
 3715 0066 9A60     		str	r2, [r3, #8]
2609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
2611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 3716              		.loc 1 2611 3
 3717 0068 7B68     		ldr	r3, [r7, #4]
 3718 006a 1B68     		ldr	r3, [r3]
 3719 006c FF22     		movs	r2, #255
 3720 006e 5A62     		str	r2, [r3, #36]
2612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Change RTC state */
2614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 3721              		.loc 1 2614 15
 3722 0070 7B68     		ldr	r3, [r7, #4]
 3723 0072 0122     		movs	r2, #1
 3724 0074 83F82120 		strb	r2, [r3, #33]
2615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Unlocked */
2617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 3725              		.loc 1 2617 3
 3726 0078 7B68     		ldr	r3, [r7, #4]
 3727 007a 0022     		movs	r2, #0
 3728 007c 83F82020 		strb	r2, [r3, #32]
2618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 3729              		.loc 1 2619 10
 3730 0080 0023     		movs	r3, #0
 3731              	.L167:
2620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 3732              		.loc 1 2620 1
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 112


 3733 0082 1846     		mov	r0, r3
 3734 0084 0C37     		adds	r7, r7, #12
 3735              	.LCFI164:
 3736              		.cfi_def_cfa_offset 4
 3737 0086 BD46     		mov	sp, r7
 3738              	.LCFI165:
 3739              		.cfi_def_cfa_register 13
 3740              		@ sp needed
 3741 0088 5DF8047B 		ldr	r7, [sp], #4
 3742              	.LCFI166:
 3743              		.cfi_restore 7
 3744              		.cfi_def_cfa_offset 0
 3745 008c 7047     		bx	lr
 3746              		.cfi_endproc
 3747              	.LFE173:
 3749              		.section	.text.HAL_RTCEx_DeactivateCalibrationOutPut,"ax",%progbits
 3750              		.align	1
 3751              		.global	HAL_RTCEx_DeactivateCalibrationOutPut
 3752              		.syntax unified
 3753              		.thumb
 3754              		.thumb_func
 3756              	HAL_RTCEx_DeactivateCalibrationOutPut:
 3757              	.LFB174:
2621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
2623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Deactivate the Calibration Pinout (RTC_CALIB) Selection (1Hz or 512Hz).
2624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
2625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
2626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
2627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_DeactivateCalibrationOutPut(RTC_HandleTypeDef * hrtc)
2628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 3758              		.loc 1 2628 1
 3759              		.cfi_startproc
 3760              		@ args = 0, pretend = 0, frame = 8
 3761              		@ frame_needed = 1, uses_anonymous_args = 0
 3762              		@ link register save eliminated.
 3763 0000 80B4     		push	{r7}
 3764              	.LCFI167:
 3765              		.cfi_def_cfa_offset 4
 3766              		.cfi_offset 7, -4
 3767 0002 83B0     		sub	sp, sp, #12
 3768              	.LCFI168:
 3769              		.cfi_def_cfa_offset 16
 3770 0004 00AF     		add	r7, sp, #0
 3771              	.LCFI169:
 3772              		.cfi_def_cfa_register 7
 3773 0006 7860     		str	r0, [r7, #4]
2629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Locked */
2630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 3774              		.loc 1 2630 3
 3775 0008 7B68     		ldr	r3, [r7, #4]
 3776 000a 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 3777 000e 012B     		cmp	r3, #1
 3778 0010 01D1     		bne	.L169
 3779              		.loc 1 2630 3 is_stmt 0 discriminator 1
 3780 0012 0223     		movs	r3, #2
 3781              		.loc 1 2630 3
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 113


 3782 0014 24E0     		b	.L170
 3783              	.L169:
 3784              		.loc 1 2630 3 discriminator 2
 3785 0016 7B68     		ldr	r3, [r7, #4]
 3786 0018 0122     		movs	r2, #1
 3787 001a 83F82020 		strb	r2, [r3, #32]
2631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 3788              		.loc 1 2632 15 is_stmt 1
 3789 001e 7B68     		ldr	r3, [r7, #4]
 3790 0020 0222     		movs	r2, #2
 3791 0022 83F82120 		strb	r2, [r3, #33]
2633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
2635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 3792              		.loc 1 2635 3
 3793 0026 7B68     		ldr	r3, [r7, #4]
 3794 0028 1B68     		ldr	r3, [r3]
 3795 002a CA22     		movs	r2, #202
 3796 002c 5A62     		str	r2, [r3, #36]
 3797 002e 7B68     		ldr	r3, [r7, #4]
 3798 0030 1B68     		ldr	r3, [r3]
 3799 0032 5322     		movs	r2, #83
 3800 0034 5A62     		str	r2, [r3, #36]
2636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_CALIBRATION_OUTPUT_DISABLE(hrtc);
 3801              		.loc 1 2637 3
 3802 0036 7B68     		ldr	r3, [r7, #4]
 3803 0038 1B68     		ldr	r3, [r3]
 3804 003a 9A68     		ldr	r2, [r3, #8]
 3805 003c 7B68     		ldr	r3, [r7, #4]
 3806 003e 1B68     		ldr	r3, [r3]
 3807 0040 22F40002 		bic	r2, r2, #8388608
 3808 0044 9A60     		str	r2, [r3, #8]
2638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
2640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 3809              		.loc 1 2640 3
 3810 0046 7B68     		ldr	r3, [r7, #4]
 3811 0048 1B68     		ldr	r3, [r3]
 3812 004a FF22     		movs	r2, #255
 3813 004c 5A62     		str	r2, [r3, #36]
2641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Change RTC state */
2643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 3814              		.loc 1 2643 15
 3815 004e 7B68     		ldr	r3, [r7, #4]
 3816 0050 0122     		movs	r2, #1
 3817 0052 83F82120 		strb	r2, [r3, #33]
2644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Unlocked */
2646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 3818              		.loc 1 2646 3
 3819 0056 7B68     		ldr	r3, [r7, #4]
 3820 0058 0022     		movs	r2, #0
 3821 005a 83F82020 		strb	r2, [r3, #32]
2647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 114


2648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 3822              		.loc 1 2648 10
 3823 005e 0023     		movs	r3, #0
 3824              	.L170:
2649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 3825              		.loc 1 2649 1
 3826 0060 1846     		mov	r0, r3
 3827 0062 0C37     		adds	r7, r7, #12
 3828              	.LCFI170:
 3829              		.cfi_def_cfa_offset 4
 3830 0064 BD46     		mov	sp, r7
 3831              	.LCFI171:
 3832              		.cfi_def_cfa_register 13
 3833              		@ sp needed
 3834 0066 5DF8047B 		ldr	r7, [sp], #4
 3835              	.LCFI172:
 3836              		.cfi_restore 7
 3837              		.cfi_def_cfa_offset 0
 3838 006a 7047     		bx	lr
 3839              		.cfi_endproc
 3840              	.LFE174:
 3842              		.section	.text.HAL_RTCEx_SetRefClock,"ax",%progbits
 3843              		.align	1
 3844              		.global	HAL_RTCEx_SetRefClock
 3845              		.syntax unified
 3846              		.thumb
 3847              		.thumb_func
 3849              	HAL_RTCEx_SetRefClock:
 3850              	.LFB175:
2650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
2652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Enable the RTC reference clock detection.
2653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
2654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
2655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
2656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetRefClock(RTC_HandleTypeDef * hrtc)
2657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 3851              		.loc 1 2657 1
 3852              		.cfi_startproc
 3853              		@ args = 0, pretend = 0, frame = 16
 3854              		@ frame_needed = 1, uses_anonymous_args = 0
 3855 0000 80B5     		push	{r7, lr}
 3856              	.LCFI173:
 3857              		.cfi_def_cfa_offset 8
 3858              		.cfi_offset 7, -8
 3859              		.cfi_offset 14, -4
 3860 0002 84B0     		sub	sp, sp, #16
 3861              	.LCFI174:
 3862              		.cfi_def_cfa_offset 24
 3863 0004 00AF     		add	r7, sp, #0
 3864              	.LCFI175:
 3865              		.cfi_def_cfa_register 7
 3866 0006 7860     		str	r0, [r7, #4]
2658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   HAL_StatusTypeDef status;
2659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Locked */
2660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 3867              		.loc 1 2660 3
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 115


 3868 0008 7B68     		ldr	r3, [r7, #4]
 3869 000a 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 3870 000e 012B     		cmp	r3, #1
 3871 0010 01D1     		bne	.L172
 3872              		.loc 1 2660 3 is_stmt 0 discriminator 1
 3873 0012 0223     		movs	r3, #2
 3874              		.loc 1 2660 3
 3875 0014 34E0     		b	.L173
 3876              	.L172:
 3877              		.loc 1 2660 3 discriminator 2
 3878 0016 7B68     		ldr	r3, [r7, #4]
 3879 0018 0122     		movs	r2, #1
 3880 001a 83F82020 		strb	r2, [r3, #32]
2661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 3881              		.loc 1 2662 15 is_stmt 1
 3882 001e 7B68     		ldr	r3, [r7, #4]
 3883 0020 0222     		movs	r2, #2
 3884 0022 83F82120 		strb	r2, [r3, #33]
2663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
2665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 3885              		.loc 1 2665 3
 3886 0026 7B68     		ldr	r3, [r7, #4]
 3887 0028 1B68     		ldr	r3, [r3]
 3888 002a CA22     		movs	r2, #202
 3889 002c 5A62     		str	r2, [r3, #36]
 3890 002e 7B68     		ldr	r3, [r7, #4]
 3891 0030 1B68     		ldr	r3, [r3]
 3892 0032 5322     		movs	r2, #83
 3893 0034 5A62     		str	r2, [r3, #36]
2666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enter Initialization mode */
2668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   status = RTC_EnterInitMode(hrtc);
 3894              		.loc 1 2668 12
 3895 0036 7868     		ldr	r0, [r7, #4]
 3896 0038 FFF7FEFF 		bl	RTC_EnterInitMode
 3897 003c 0346     		mov	r3, r0
 3898 003e FB73     		strb	r3, [r7, #15]
2669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (status == HAL_OK)
 3899              		.loc 1 2669 6
 3900 0040 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3901 0042 002B     		cmp	r3, #0
 3902 0044 0CD1     		bne	.L174
2670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
2671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     __HAL_RTC_CLOCKREF_DETECTION_ENABLE(hrtc);
 3903              		.loc 1 2671 5
 3904 0046 7B68     		ldr	r3, [r7, #4]
 3905 0048 1B68     		ldr	r3, [r3]
 3906 004a 9A68     		ldr	r2, [r3, #8]
 3907 004c 7B68     		ldr	r3, [r7, #4]
 3908 004e 1B68     		ldr	r3, [r3]
 3909 0050 42F01002 		orr	r2, r2, #16
 3910 0054 9A60     		str	r2, [r3, #8]
2672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Exit Initialization mode */
2674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     status = RTC_ExitInitMode(hrtc);
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 116


 3911              		.loc 1 2674 14
 3912 0056 7868     		ldr	r0, [r7, #4]
 3913 0058 FFF7FEFF 		bl	RTC_ExitInitMode
 3914 005c 0346     		mov	r3, r0
 3915 005e FB73     		strb	r3, [r7, #15]
 3916              	.L174:
2675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
2676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
2678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 3917              		.loc 1 2678 3
 3918 0060 7B68     		ldr	r3, [r7, #4]
 3919 0062 1B68     		ldr	r3, [r3]
 3920 0064 FF22     		movs	r2, #255
 3921 0066 5A62     		str	r2, [r3, #36]
2679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (status == HAL_OK)
 3922              		.loc 1 2679 6
 3923 0068 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3924 006a 002B     		cmp	r3, #0
 3925 006c 03D1     		bne	.L175
2680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
2681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Change RTC state */
2682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     hrtc->State = HAL_RTC_STATE_READY;
 3926              		.loc 1 2682 17
 3927 006e 7B68     		ldr	r3, [r7, #4]
 3928 0070 0122     		movs	r2, #1
 3929 0072 83F82120 		strb	r2, [r3, #33]
 3930              	.L175:
2683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
2684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Unlocked */
2685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 3931              		.loc 1 2685 3
 3932 0076 7B68     		ldr	r3, [r7, #4]
 3933 0078 0022     		movs	r2, #0
 3934 007a 83F82020 		strb	r2, [r3, #32]
2686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 3935              		.loc 1 2687 10
 3936 007e 0023     		movs	r3, #0
 3937              	.L173:
2688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 3938              		.loc 1 2688 1
 3939 0080 1846     		mov	r0, r3
 3940 0082 1037     		adds	r7, r7, #16
 3941              	.LCFI176:
 3942              		.cfi_def_cfa_offset 8
 3943 0084 BD46     		mov	sp, r7
 3944              	.LCFI177:
 3945              		.cfi_def_cfa_register 13
 3946              		@ sp needed
 3947 0086 80BD     		pop	{r7, pc}
 3948              		.cfi_endproc
 3949              	.LFE175:
 3951              		.section	.text.HAL_RTCEx_DeactivateRefClock,"ax",%progbits
 3952              		.align	1
 3953              		.global	HAL_RTCEx_DeactivateRefClock
 3954              		.syntax unified
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 117


 3955              		.thumb
 3956              		.thumb_func
 3958              	HAL_RTCEx_DeactivateRefClock:
 3959              	.LFB176:
2689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
2691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Disable the RTC reference clock detection.
2692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
2693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
2694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
2695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_DeactivateRefClock(RTC_HandleTypeDef * hrtc)
2696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 3960              		.loc 1 2696 1
 3961              		.cfi_startproc
 3962              		@ args = 0, pretend = 0, frame = 16
 3963              		@ frame_needed = 1, uses_anonymous_args = 0
 3964 0000 80B5     		push	{r7, lr}
 3965              	.LCFI178:
 3966              		.cfi_def_cfa_offset 8
 3967              		.cfi_offset 7, -8
 3968              		.cfi_offset 14, -4
 3969 0002 84B0     		sub	sp, sp, #16
 3970              	.LCFI179:
 3971              		.cfi_def_cfa_offset 24
 3972 0004 00AF     		add	r7, sp, #0
 3973              	.LCFI180:
 3974              		.cfi_def_cfa_register 7
 3975 0006 7860     		str	r0, [r7, #4]
2697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   HAL_StatusTypeDef status;
2698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Locked */
2699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 3976              		.loc 1 2699 3
 3977 0008 7B68     		ldr	r3, [r7, #4]
 3978 000a 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 3979 000e 012B     		cmp	r3, #1
 3980 0010 01D1     		bne	.L177
 3981              		.loc 1 2699 3 is_stmt 0 discriminator 1
 3982 0012 0223     		movs	r3, #2
 3983              		.loc 1 2699 3
 3984 0014 34E0     		b	.L178
 3985              	.L177:
 3986              		.loc 1 2699 3 discriminator 2
 3987 0016 7B68     		ldr	r3, [r7, #4]
 3988 0018 0122     		movs	r2, #1
 3989 001a 83F82020 		strb	r2, [r3, #32]
2700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 3990              		.loc 1 2701 15 is_stmt 1
 3991 001e 7B68     		ldr	r3, [r7, #4]
 3992 0020 0222     		movs	r2, #2
 3993 0022 83F82120 		strb	r2, [r3, #33]
2702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
2704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 3994              		.loc 1 2704 3
 3995 0026 7B68     		ldr	r3, [r7, #4]
 3996 0028 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 118


 3997 002a CA22     		movs	r2, #202
 3998 002c 5A62     		str	r2, [r3, #36]
 3999 002e 7B68     		ldr	r3, [r7, #4]
 4000 0030 1B68     		ldr	r3, [r3]
 4001 0032 5322     		movs	r2, #83
 4002 0034 5A62     		str	r2, [r3, #36]
2705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enter Initialization mode */
2707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   status = RTC_EnterInitMode(hrtc);
 4003              		.loc 1 2707 12
 4004 0036 7868     		ldr	r0, [r7, #4]
 4005 0038 FFF7FEFF 		bl	RTC_EnterInitMode
 4006 003c 0346     		mov	r3, r0
 4007 003e FB73     		strb	r3, [r7, #15]
2708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (status == HAL_OK)
 4008              		.loc 1 2708 6
 4009 0040 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4010 0042 002B     		cmp	r3, #0
 4011 0044 0CD1     		bne	.L179
2709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
2710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     __HAL_RTC_CLOCKREF_DETECTION_DISABLE(hrtc);
 4012              		.loc 1 2710 5
 4013 0046 7B68     		ldr	r3, [r7, #4]
 4014 0048 1B68     		ldr	r3, [r3]
 4015 004a 9A68     		ldr	r2, [r3, #8]
 4016 004c 7B68     		ldr	r3, [r7, #4]
 4017 004e 1B68     		ldr	r3, [r3]
 4018 0050 22F01002 		bic	r2, r2, #16
 4019 0054 9A60     		str	r2, [r3, #8]
2711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Exit Initialization mode */
2713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     status = RTC_ExitInitMode(hrtc);
 4020              		.loc 1 2713 14
 4021 0056 7868     		ldr	r0, [r7, #4]
 4022 0058 FFF7FEFF 		bl	RTC_ExitInitMode
 4023 005c 0346     		mov	r3, r0
 4024 005e FB73     		strb	r3, [r7, #15]
 4025              	.L179:
2714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
2715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
2717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 4026              		.loc 1 2717 3
 4027 0060 7B68     		ldr	r3, [r7, #4]
 4028 0062 1B68     		ldr	r3, [r3]
 4029 0064 FF22     		movs	r2, #255
 4030 0066 5A62     		str	r2, [r3, #36]
2718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (status == HAL_OK)
 4031              		.loc 1 2719 6
 4032 0068 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4033 006a 002B     		cmp	r3, #0
 4034 006c 03D1     		bne	.L180
2720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
2721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Change RTC state */
2722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     hrtc->State = HAL_RTC_STATE_READY;
 4035              		.loc 1 2722 17
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 119


 4036 006e 7B68     		ldr	r3, [r7, #4]
 4037 0070 0122     		movs	r2, #1
 4038 0072 83F82120 		strb	r2, [r3, #33]
 4039              	.L180:
2723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
2725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Unlocked */
2727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 4040              		.loc 1 2727 3
 4041 0076 7B68     		ldr	r3, [r7, #4]
 4042 0078 0022     		movs	r2, #0
 4043 007a 83F82020 		strb	r2, [r3, #32]
2728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 4044              		.loc 1 2729 10
 4045 007e 0023     		movs	r3, #0
 4046              	.L178:
2730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 4047              		.loc 1 2730 1
 4048 0080 1846     		mov	r0, r3
 4049 0082 1037     		adds	r7, r7, #16
 4050              	.LCFI181:
 4051              		.cfi_def_cfa_offset 8
 4052 0084 BD46     		mov	sp, r7
 4053              	.LCFI182:
 4054              		.cfi_def_cfa_register 13
 4055              		@ sp needed
 4056 0086 80BD     		pop	{r7, pc}
 4057              		.cfi_endproc
 4058              	.LFE176:
 4060              		.section	.text.HAL_RTCEx_EnableBypassShadow,"ax",%progbits
 4061              		.align	1
 4062              		.global	HAL_RTCEx_EnableBypassShadow
 4063              		.syntax unified
 4064              		.thumb
 4065              		.thumb_func
 4067              	HAL_RTCEx_EnableBypassShadow:
 4068              	.LFB177:
2731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
2733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Enable the Bypass Shadow feature.
2734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @note   When the Bypass Shadow is enabled the calendar value are taken
2735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *         directly from the Calendar counter.
2736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
2737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
2738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
2739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_EnableBypassShadow(RTC_HandleTypeDef * hrtc)
2740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 4069              		.loc 1 2740 1
 4070              		.cfi_startproc
 4071              		@ args = 0, pretend = 0, frame = 8
 4072              		@ frame_needed = 1, uses_anonymous_args = 0
 4073              		@ link register save eliminated.
 4074 0000 80B4     		push	{r7}
 4075              	.LCFI183:
 4076              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 120


 4077              		.cfi_offset 7, -4
 4078 0002 83B0     		sub	sp, sp, #12
 4079              	.LCFI184:
 4080              		.cfi_def_cfa_offset 16
 4081 0004 00AF     		add	r7, sp, #0
 4082              	.LCFI185:
 4083              		.cfi_def_cfa_register 7
 4084 0006 7860     		str	r0, [r7, #4]
2741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Locked */
2742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 4085              		.loc 1 2742 3
 4086 0008 7B68     		ldr	r3, [r7, #4]
 4087 000a 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 4088 000e 012B     		cmp	r3, #1
 4089 0010 01D1     		bne	.L182
 4090              		.loc 1 2742 3 is_stmt 0 discriminator 1
 4091 0012 0223     		movs	r3, #2
 4092              		.loc 1 2742 3
 4093 0014 24E0     		b	.L183
 4094              	.L182:
 4095              		.loc 1 2742 3 discriminator 2
 4096 0016 7B68     		ldr	r3, [r7, #4]
 4097 0018 0122     		movs	r2, #1
 4098 001a 83F82020 		strb	r2, [r3, #32]
2743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 4099              		.loc 1 2744 15 is_stmt 1
 4100 001e 7B68     		ldr	r3, [r7, #4]
 4101 0020 0222     		movs	r2, #2
 4102 0022 83F82120 		strb	r2, [r3, #33]
2745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
2747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 4103              		.loc 1 2747 3
 4104 0026 7B68     		ldr	r3, [r7, #4]
 4105 0028 1B68     		ldr	r3, [r3]
 4106 002a CA22     		movs	r2, #202
 4107 002c 5A62     		str	r2, [r3, #36]
 4108 002e 7B68     		ldr	r3, [r7, #4]
 4109 0030 1B68     		ldr	r3, [r3]
 4110 0032 5322     		movs	r2, #83
 4111 0034 5A62     		str	r2, [r3, #36]
2748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Set the BYPSHAD bit */
2750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->Instance->CR |= (uint32_t)RTC_CR_BYPSHAD;
 4112              		.loc 1 2750 7
 4113 0036 7B68     		ldr	r3, [r7, #4]
 4114 0038 1B68     		ldr	r3, [r3]
 4115              		.loc 1 2750 17
 4116 003a 9A68     		ldr	r2, [r3, #8]
 4117              		.loc 1 2750 7
 4118 003c 7B68     		ldr	r3, [r7, #4]
 4119 003e 1B68     		ldr	r3, [r3]
 4120              		.loc 1 2750 22
 4121 0040 42F02002 		orr	r2, r2, #32
 4122 0044 9A60     		str	r2, [r3, #8]
2751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 121


2752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
2753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 4123              		.loc 1 2753 3
 4124 0046 7B68     		ldr	r3, [r7, #4]
 4125 0048 1B68     		ldr	r3, [r3]
 4126 004a FF22     		movs	r2, #255
 4127 004c 5A62     		str	r2, [r3, #36]
2754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Change RTC state */
2756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 4128              		.loc 1 2756 15
 4129 004e 7B68     		ldr	r3, [r7, #4]
 4130 0050 0122     		movs	r2, #1
 4131 0052 83F82120 		strb	r2, [r3, #33]
2757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Unlocked */
2759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 4132              		.loc 1 2759 3
 4133 0056 7B68     		ldr	r3, [r7, #4]
 4134 0058 0022     		movs	r2, #0
 4135 005a 83F82020 		strb	r2, [r3, #32]
2760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 4136              		.loc 1 2761 10
 4137 005e 0023     		movs	r3, #0
 4138              	.L183:
2762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 4139              		.loc 1 2762 1
 4140 0060 1846     		mov	r0, r3
 4141 0062 0C37     		adds	r7, r7, #12
 4142              	.LCFI186:
 4143              		.cfi_def_cfa_offset 4
 4144 0064 BD46     		mov	sp, r7
 4145              	.LCFI187:
 4146              		.cfi_def_cfa_register 13
 4147              		@ sp needed
 4148 0066 5DF8047B 		ldr	r7, [sp], #4
 4149              	.LCFI188:
 4150              		.cfi_restore 7
 4151              		.cfi_def_cfa_offset 0
 4152 006a 7047     		bx	lr
 4153              		.cfi_endproc
 4154              	.LFE177:
 4156              		.section	.text.HAL_RTCEx_DisableBypassShadow,"ax",%progbits
 4157              		.align	1
 4158              		.global	HAL_RTCEx_DisableBypassShadow
 4159              		.syntax unified
 4160              		.thumb
 4161              		.thumb_func
 4163              	HAL_RTCEx_DisableBypassShadow:
 4164              	.LFB178:
2763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
2765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Disable the Bypass Shadow feature.
2766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @note   When the Bypass Shadow is enabled the calendar value are taken
2767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *         directly from the Calendar counter.
2768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 122


2769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
2770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
2771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_DisableBypassShadow(RTC_HandleTypeDef * hrtc)
2772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 4165              		.loc 1 2772 1
 4166              		.cfi_startproc
 4167              		@ args = 0, pretend = 0, frame = 8
 4168              		@ frame_needed = 1, uses_anonymous_args = 0
 4169              		@ link register save eliminated.
 4170 0000 80B4     		push	{r7}
 4171              	.LCFI189:
 4172              		.cfi_def_cfa_offset 4
 4173              		.cfi_offset 7, -4
 4174 0002 83B0     		sub	sp, sp, #12
 4175              	.LCFI190:
 4176              		.cfi_def_cfa_offset 16
 4177 0004 00AF     		add	r7, sp, #0
 4178              	.LCFI191:
 4179              		.cfi_def_cfa_register 7
 4180 0006 7860     		str	r0, [r7, #4]
2773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Locked */
2774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 4181              		.loc 1 2774 3
 4182 0008 7B68     		ldr	r3, [r7, #4]
 4183 000a 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 4184 000e 012B     		cmp	r3, #1
 4185 0010 01D1     		bne	.L185
 4186              		.loc 1 2774 3 is_stmt 0 discriminator 1
 4187 0012 0223     		movs	r3, #2
 4188              		.loc 1 2774 3
 4189 0014 24E0     		b	.L186
 4190              	.L185:
 4191              		.loc 1 2774 3 discriminator 2
 4192 0016 7B68     		ldr	r3, [r7, #4]
 4193 0018 0122     		movs	r2, #1
 4194 001a 83F82020 		strb	r2, [r3, #32]
2775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 4195              		.loc 1 2776 15 is_stmt 1
 4196 001e 7B68     		ldr	r3, [r7, #4]
 4197 0020 0222     		movs	r2, #2
 4198 0022 83F82120 		strb	r2, [r3, #33]
2777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
2779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 4199              		.loc 1 2779 3
 4200 0026 7B68     		ldr	r3, [r7, #4]
 4201 0028 1B68     		ldr	r3, [r3]
 4202 002a CA22     		movs	r2, #202
 4203 002c 5A62     		str	r2, [r3, #36]
 4204 002e 7B68     		ldr	r3, [r7, #4]
 4205 0030 1B68     		ldr	r3, [r3]
 4206 0032 5322     		movs	r2, #83
 4207 0034 5A62     		str	r2, [r3, #36]
2780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Reset the BYPSHAD bit */
2782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->Instance->CR &= ((uint32_t)~RTC_CR_BYPSHAD);
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 123


 4208              		.loc 1 2782 7
 4209 0036 7B68     		ldr	r3, [r7, #4]
 4210 0038 1B68     		ldr	r3, [r3]
 4211              		.loc 1 2782 17
 4212 003a 9A68     		ldr	r2, [r3, #8]
 4213              		.loc 1 2782 7
 4214 003c 7B68     		ldr	r3, [r7, #4]
 4215 003e 1B68     		ldr	r3, [r3]
 4216              		.loc 1 2782 22
 4217 0040 22F02002 		bic	r2, r2, #32
 4218 0044 9A60     		str	r2, [r3, #8]
2783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
2785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 4219              		.loc 1 2785 3
 4220 0046 7B68     		ldr	r3, [r7, #4]
 4221 0048 1B68     		ldr	r3, [r3]
 4222 004a FF22     		movs	r2, #255
 4223 004c 5A62     		str	r2, [r3, #36]
2786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Change RTC state */
2788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 4224              		.loc 1 2788 15
 4225 004e 7B68     		ldr	r3, [r7, #4]
 4226 0050 0122     		movs	r2, #1
 4227 0052 83F82120 		strb	r2, [r3, #33]
2789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Unlocked */
2791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 4228              		.loc 1 2791 3
 4229 0056 7B68     		ldr	r3, [r7, #4]
 4230 0058 0022     		movs	r2, #0
 4231 005a 83F82020 		strb	r2, [r3, #32]
2792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 4232              		.loc 1 2793 10
 4233 005e 0023     		movs	r3, #0
 4234              	.L186:
2794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 4235              		.loc 1 2794 1
 4236 0060 1846     		mov	r0, r3
 4237 0062 0C37     		adds	r7, r7, #12
 4238              	.LCFI192:
 4239              		.cfi_def_cfa_offset 4
 4240 0064 BD46     		mov	sp, r7
 4241              	.LCFI193:
 4242              		.cfi_def_cfa_register 13
 4243              		@ sp needed
 4244 0066 5DF8047B 		ldr	r7, [sp], #4
 4245              	.LCFI194:
 4246              		.cfi_restore 7
 4247              		.cfi_def_cfa_offset 0
 4248 006a 7047     		bx	lr
 4249              		.cfi_endproc
 4250              	.LFE178:
 4252              		.section	.text.HAL_RTCEx_AlarmBEventCallback,"ax",%progbits
 4253              		.align	1
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 124


 4254              		.weak	HAL_RTCEx_AlarmBEventCallback
 4255              		.syntax unified
 4256              		.thumb
 4257              		.thumb_func
 4259              	HAL_RTCEx_AlarmBEventCallback:
 4260              	.LFB179:
2795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(TAMP)
2797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
2798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Increment Monotonic counter.
2799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
2800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  Instance  Monotonic counter Instance
2801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *         This parameter can be can be one of the following values :
2802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *           @arg RTC_MONOTONIC_COUNTER_1
2803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
2804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
2805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_MonotonicCounterIncrement(RTC_HandleTypeDef *hrtc,  uint32_t Instance)
2806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
2807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   UNUSED(hrtc);
2808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   UNUSED(Instance);
2809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* This register is read-only only and is incremented by one when a write access is done to this
2810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****      register. This register cannot roll-over and is frozen when reaching the maximum value. */
2811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   CLEAR_REG(TAMP->COUNTR);
2812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
2814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
2815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
2817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Monotonic counter incrementation.
2818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
2819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  Instance  Monotonic counter Instance
2820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *         This parameter can be can be one of the following values :
2821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *           @arg RTC_MONOTONIC_COUNTER_1
2822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  Counter monotonic counter value
2823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
2824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
2825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_MonotonicCounterGet(const RTC_HandleTypeDef *hrtc, uint32_t *Counter,  
2826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
2827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   UNUSED(hrtc);
2828:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   UNUSED(Instance);
2829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* This register is read-only only and is incremented by one when a write access is done to this
2830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****      register. This register cannot roll-over and is frozen when reaching the maximum value. */
2831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *Counter = READ_REG(TAMP->COUNTR);
2832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
2834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
2835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* TAMP */
2836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
2838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @}
2839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
2840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /** @addtogroup RTCEx_Exported_Functions_Group4
2842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief    Extended features functions
2843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *
2844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** @verbatim
2845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****  ===============================================================================
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 125


2846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****                  ##### Extended features functions #####
2847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****  ===============================================================================
2848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     [..]  This section provides functions allowing to:
2849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       (+) RTC Alarm B callback
2850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       (+) RTC Poll for Alarm B request
2851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** @endverbatim
2853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @{
2854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
2855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
2857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Alarm B callback.
2858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
2859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval None
2860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
2861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_AlarmBEventCallback(RTC_HandleTypeDef * hrtc)
2862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 4261              		.loc 1 2862 1
 4262              		.cfi_startproc
 4263              		@ args = 0, pretend = 0, frame = 8
 4264              		@ frame_needed = 1, uses_anonymous_args = 0
 4265              		@ link register save eliminated.
 4266 0000 80B4     		push	{r7}
 4267              	.LCFI195:
 4268              		.cfi_def_cfa_offset 4
 4269              		.cfi_offset 7, -4
 4270 0002 83B0     		sub	sp, sp, #12
 4271              	.LCFI196:
 4272              		.cfi_def_cfa_offset 16
 4273 0004 00AF     		add	r7, sp, #0
 4274              	.LCFI197:
 4275              		.cfi_def_cfa_register 7
 4276 0006 7860     		str	r0, [r7, #4]
2863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
2864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   UNUSED(hrtc);
2865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             the HAL_RTCEx_AlarmBEventCallback could be implemented in the user file
2868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****    */
2869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 4277              		.loc 1 2869 1
 4278 0008 00BF     		nop
 4279 000a 0C37     		adds	r7, r7, #12
 4280              	.LCFI198:
 4281              		.cfi_def_cfa_offset 4
 4282 000c BD46     		mov	sp, r7
 4283              	.LCFI199:
 4284              		.cfi_def_cfa_register 13
 4285              		@ sp needed
 4286 000e 5DF8047B 		ldr	r7, [sp], #4
 4287              	.LCFI200:
 4288              		.cfi_restore 7
 4289              		.cfi_def_cfa_offset 0
 4290 0012 7047     		bx	lr
 4291              		.cfi_endproc
 4292              	.LFE179:
 4294              		.section	.text.HAL_RTCEx_PollForAlarmBEvent,"ax",%progbits
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 126


 4295              		.align	1
 4296              		.global	HAL_RTCEx_PollForAlarmBEvent
 4297              		.syntax unified
 4298              		.thumb
 4299              		.thumb_func
 4301              	HAL_RTCEx_PollForAlarmBEvent:
 4302              	.LFB180:
2870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
2872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Handle Alarm B Polling request.
2873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
2874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  Timeout Timeout duration
2875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
2876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
2877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_PollForAlarmBEvent(RTC_HandleTypeDef * hrtc, uint32_t Timeout)
2878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 4303              		.loc 1 2878 1
 4304              		.cfi_startproc
 4305              		@ args = 0, pretend = 0, frame = 16
 4306              		@ frame_needed = 1, uses_anonymous_args = 0
 4307 0000 80B5     		push	{r7, lr}
 4308              	.LCFI201:
 4309              		.cfi_def_cfa_offset 8
 4310              		.cfi_offset 7, -8
 4311              		.cfi_offset 14, -4
 4312 0002 84B0     		sub	sp, sp, #16
 4313              	.LCFI202:
 4314              		.cfi_def_cfa_offset 24
 4315 0004 00AF     		add	r7, sp, #0
 4316              	.LCFI203:
 4317              		.cfi_def_cfa_register 7
 4318 0006 7860     		str	r0, [r7, #4]
 4319 0008 3960     		str	r1, [r7]
2879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tickstart = HAL_GetTick();
 4320              		.loc 1 2879 24
 4321 000a FFF7FEFF 		bl	HAL_GetTick
 4322 000e F860     		str	r0, [r7, #12]
2880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   while (__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRBF) == 0U)
 4323              		.loc 1 2881 9
 4324 0010 14E0     		b	.L190
 4325              	.L193:
2882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
2883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if (Timeout != HAL_MAX_DELAY)
 4326              		.loc 1 2883 8
 4327 0012 3B68     		ldr	r3, [r7]
 4328 0014 B3F1FF3F 		cmp	r3, #-1
 4329 0018 10D0     		beq	.L190
2884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
2885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 4330              		.loc 1 2885 13
 4331 001a FFF7FEFF 		bl	HAL_GetTick
 4332 001e 0246     		mov	r2, r0
 4333              		.loc 1 2885 27 discriminator 1
 4334 0020 FB68     		ldr	r3, [r7, #12]
 4335 0022 D31A     		subs	r3, r2, r3
 4336              		.loc 1 2885 10 discriminator 1
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 127


 4337 0024 3A68     		ldr	r2, [r7]
 4338 0026 9A42     		cmp	r2, r3
 4339 0028 02D3     		bcc	.L191
 4340              		.loc 1 2885 51 discriminator 1
 4341 002a 3B68     		ldr	r3, [r7]
 4342 002c 002B     		cmp	r3, #0
 4343 002e 05D1     		bne	.L190
 4344              	.L191:
2886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       {
2887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 4345              		.loc 1 2887 21
 4346 0030 7B68     		ldr	r3, [r7, #4]
 4347 0032 0322     		movs	r2, #3
 4348 0034 83F82120 		strb	r2, [r3, #33]
2888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 4349              		.loc 1 2888 16
 4350 0038 0323     		movs	r3, #3
 4351 003a 14E0     		b	.L192
 4352              	.L190:
2881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 4353              		.loc 1 2881 10
 4354 003c 7B68     		ldr	r3, [r7, #4]
 4355 003e 1B68     		ldr	r3, [r3]
 4356 0040 DB68     		ldr	r3, [r3, #12]
 4357 0042 03F40073 		and	r3, r3, #512
2881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 4358              		.loc 1 2881 57
 4359 0046 002B     		cmp	r3, #0
 4360 0048 E3D0     		beq	.L193
2889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       }
2890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
2891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
2892:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2893:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clear the Alarm Flag */
2894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_ALARM_CLEAR_FLAG(hrtc, RTC_FLAG_ALRBF);
 4361              		.loc 1 2894 3
 4362 004a 7B68     		ldr	r3, [r7, #4]
 4363 004c 1B68     		ldr	r3, [r3]
 4364 004e DB68     		ldr	r3, [r3, #12]
 4365 0050 DAB2     		uxtb	r2, r3
 4366 0052 7B68     		ldr	r3, [r7, #4]
 4367 0054 1B68     		ldr	r3, [r3]
 4368 0056 62F42072 		orn	r2, r2, #640
 4369 005a DA60     		str	r2, [r3, #12]
2895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Change RTC state */
2897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 4370              		.loc 1 2897 15
 4371 005c 7B68     		ldr	r3, [r7, #4]
 4372 005e 0122     		movs	r2, #1
 4373 0060 83F82120 		strb	r2, [r3, #33]
2898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 4374              		.loc 1 2899 10
 4375 0064 0023     		movs	r3, #0
 4376              	.L192:
2900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 128


 4377              		.loc 1 2900 1
 4378 0066 1846     		mov	r0, r3
 4379 0068 1037     		adds	r7, r7, #16
 4380              	.LCFI204:
 4381              		.cfi_def_cfa_offset 8
 4382 006a BD46     		mov	sp, r7
 4383              	.LCFI205:
 4384              		.cfi_def_cfa_register 13
 4385              		@ sp needed
 4386 006c 80BD     		pop	{r7, pc}
 4387              		.cfi_endproc
 4388              	.LFE180:
 4390              		.text
 4391              	.Letext0:
 4392              		.file 2 "C:/gcc_vsc/arm_gcc/14.2 rel1/arm-none-eabi/include/machine/_default_types.h"
 4393              		.file 3 "C:/gcc_vsc/arm_gcc/14.2 rel1/arm-none-eabi/include/sys/_stdint.h"
 4394              		.file 4 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h743xx.h"
 4395              		.file 5 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 4396              		.file 6 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_rtc.h"
 4397              		.file 7 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_rtc_ex.h"
 4398              		.file 8 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 129


DEFINED SYMBOLS
                            *ABS*:00000000 stm32h7xx_hal_rtc_ex.c
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:20     .text.HAL_RTCEx_SetTimeStamp:00000000 $t
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:26     .text.HAL_RTCEx_SetTimeStamp:00000000 HAL_RTCEx_SetTimeStamp
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:134    .text.HAL_RTCEx_SetTimeStamp:0000008c $d
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:139    .text.HAL_RTCEx_SetTimeStamp_IT:00000000 $t
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:145    .text.HAL_RTCEx_SetTimeStamp_IT:00000000 HAL_RTCEx_SetTimeStamp_IT
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:273    .text.HAL_RTCEx_SetTimeStamp_IT:000000b8 $d
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:279    .text.HAL_RTCEx_DeactivateTimeStamp:00000000 $t
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:285    .text.HAL_RTCEx_DeactivateTimeStamp:00000000 HAL_RTCEx_DeactivateTimeStamp
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:386    .text.HAL_RTCEx_DeactivateTimeStamp:00000080 $d
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:391    .text.HAL_RTCEx_SetInternalTimeStamp:00000000 $t
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:397    .text.HAL_RTCEx_SetInternalTimeStamp:00000000 HAL_RTCEx_SetInternalTimeStamp
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:484    .text.HAL_RTCEx_DeactivateInternalTimeStamp:00000000 $t
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:490    .text.HAL_RTCEx_DeactivateInternalTimeStamp:00000000 HAL_RTCEx_DeactivateInternalTimeStamp
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:577    .text.HAL_RTCEx_GetTimeStamp:00000000 $t
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:583    .text.HAL_RTCEx_GetTimeStamp:00000000 HAL_RTCEx_GetTimeStamp
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:799    .text.HAL_RTCEx_GetTimeStamp:00000144 $d
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:806    .text.HAL_RTCEx_SetTamper:00000000 $t
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:812    .text.HAL_RTCEx_SetTamper:00000000 HAL_RTCEx_SetTamper
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:1134   .text.HAL_RTCEx_SetTamper:000001bc $d
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:1139   .text.HAL_RTCEx_SetTamper_IT:00000000 $t
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:1145   .text.HAL_RTCEx_SetTamper_IT:00000000 HAL_RTCEx_SetTamper_IT
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:1486   .text.HAL_RTCEx_SetTamper_IT:000001e0 $d
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:1492   .text.HAL_RTCEx_DeactivateTamper:00000000 $t
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:1498   .text.HAL_RTCEx_DeactivateTamper:00000000 HAL_RTCEx_DeactivateTamper
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:1634   .text.HAL_RTCEx_DeactivateTamper:000000a8 $d
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:1641   .text.HAL_RTCEx_TamperTimeStampIRQHandler:00000000 $t
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:1647   .text.HAL_RTCEx_TamperTimeStampIRQHandler:00000000 HAL_RTCEx_TamperTimeStampIRQHandler
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:1821   .text.HAL_RTCEx_TimeStampEventCallback:00000000 HAL_RTCEx_TimeStampEventCallback
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:1863   .text.HAL_RTCEx_Tamper1EventCallback:00000000 HAL_RTCEx_Tamper1EventCallback
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:1905   .text.HAL_RTCEx_Tamper2EventCallback:00000000 HAL_RTCEx_Tamper2EventCallback
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:1947   .text.HAL_RTCEx_Tamper3EventCallback:00000000 HAL_RTCEx_Tamper3EventCallback
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:1806   .text.HAL_RTCEx_TamperTimeStampIRQHandler:000000f0 $d
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:1815   .text.HAL_RTCEx_TimeStampEventCallback:00000000 $t
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:1857   .text.HAL_RTCEx_Tamper1EventCallback:00000000 $t
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:1899   .text.HAL_RTCEx_Tamper2EventCallback:00000000 $t
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:1941   .text.HAL_RTCEx_Tamper3EventCallback:00000000 $t
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:1983   .text.HAL_RTCEx_PollForTimeStampEvent:00000000 $t
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:1989   .text.HAL_RTCEx_PollForTimeStampEvent:00000000 HAL_RTCEx_PollForTimeStampEvent
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:2095   .text.HAL_RTCEx_PollForTamper1Event:00000000 $t
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:2101   .text.HAL_RTCEx_PollForTamper1Event:00000000 HAL_RTCEx_PollForTamper1Event
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:2191   .text.HAL_RTCEx_PollForTamper2Event:00000000 $t
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:2197   .text.HAL_RTCEx_PollForTamper2Event:00000000 HAL_RTCEx_PollForTamper2Event
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:2287   .text.HAL_RTCEx_PollForTamper3Event:00000000 $t
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:2293   .text.HAL_RTCEx_PollForTamper3Event:00000000 HAL_RTCEx_PollForTamper3Event
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:2383   .text.HAL_RTCEx_PollForTamper3Event:00000070 $d
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:2388   .text.HAL_RTCEx_SetWakeUpTimer:00000000 $t
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:2394   .text.HAL_RTCEx_SetWakeUpTimer:00000000 HAL_RTCEx_SetWakeUpTimer
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:2559   .text.HAL_RTCEx_SetWakeUpTimer:000000f0 $d
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:2564   .text.HAL_RTCEx_SetWakeUpTimer_IT:00000000 $t
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:2570   .text.HAL_RTCEx_SetWakeUpTimer_IT:00000000 HAL_RTCEx_SetWakeUpTimer_IT
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:2757   .text.HAL_RTCEx_SetWakeUpTimer_IT:0000011c $d
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:2763   .text.HAL_RTCEx_DeactivateWakeUpTimer:00000000 $t
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:2769   .text.HAL_RTCEx_DeactivateWakeUpTimer:00000000 HAL_RTCEx_DeactivateWakeUpTimer
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:2900   .text.HAL_RTCEx_GetWakeUpTimer:00000000 $t
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:2906   .text.HAL_RTCEx_GetWakeUpTimer:00000000 HAL_RTCEx_GetWakeUpTimer
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s 			page 130


C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:2949   .text.HAL_RTCEx_WakeUpTimerIRQHandler:00000000 $t
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:2955   .text.HAL_RTCEx_WakeUpTimerIRQHandler:00000000 HAL_RTCEx_WakeUpTimerIRQHandler
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:3026   .text.HAL_RTCEx_WakeUpTimerEventCallback:00000000 HAL_RTCEx_WakeUpTimerEventCallback
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:3015   .text.HAL_RTCEx_WakeUpTimerIRQHandler:00000048 $d
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:3020   .text.HAL_RTCEx_WakeUpTimerEventCallback:00000000 $t
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:3062   .text.HAL_RTCEx_PollForWakeUpTimerEvent:00000000 $t
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:3068   .text.HAL_RTCEx_PollForWakeUpTimerEvent:00000000 HAL_RTCEx_PollForWakeUpTimerEvent
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:3158   .text.HAL_RTCEx_BKUPWrite:00000000 $t
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:3164   .text.HAL_RTCEx_BKUPWrite:00000000 HAL_RTCEx_BKUPWrite
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:3221   .text.HAL_RTCEx_BKUPRead:00000000 $t
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:3227   .text.HAL_RTCEx_BKUPRead:00000000 HAL_RTCEx_BKUPRead
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:3282   .text.HAL_RTCEx_SetSmoothCalib:00000000 $t
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:3288   .text.HAL_RTCEx_SetSmoothCalib:00000000 HAL_RTCEx_SetSmoothCalib
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:3433   .text.HAL_RTCEx_SetSmoothCalib:000000cc $d
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:3438   .text.HAL_RTCEx_SetSynchroShift:00000000 $t
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:3444   .text.HAL_RTCEx_SetSynchroShift:00000000 HAL_RTCEx_SetSynchroShift
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:3633   .text.HAL_RTCEx_SetCalibrationOutPut:00000000 $t
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:3639   .text.HAL_RTCEx_SetCalibrationOutPut:00000000 HAL_RTCEx_SetCalibrationOutPut
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:3750   .text.HAL_RTCEx_DeactivateCalibrationOutPut:00000000 $t
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:3756   .text.HAL_RTCEx_DeactivateCalibrationOutPut:00000000 HAL_RTCEx_DeactivateCalibrationOutPut
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:3843   .text.HAL_RTCEx_SetRefClock:00000000 $t
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:3849   .text.HAL_RTCEx_SetRefClock:00000000 HAL_RTCEx_SetRefClock
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:3952   .text.HAL_RTCEx_DeactivateRefClock:00000000 $t
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:3958   .text.HAL_RTCEx_DeactivateRefClock:00000000 HAL_RTCEx_DeactivateRefClock
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:4061   .text.HAL_RTCEx_EnableBypassShadow:00000000 $t
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:4067   .text.HAL_RTCEx_EnableBypassShadow:00000000 HAL_RTCEx_EnableBypassShadow
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:4157   .text.HAL_RTCEx_DisableBypassShadow:00000000 $t
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:4163   .text.HAL_RTCEx_DisableBypassShadow:00000000 HAL_RTCEx_DisableBypassShadow
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:4253   .text.HAL_RTCEx_AlarmBEventCallback:00000000 $t
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:4259   .text.HAL_RTCEx_AlarmBEventCallback:00000000 HAL_RTCEx_AlarmBEventCallback
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:4295   .text.HAL_RTCEx_PollForAlarmBEvent:00000000 $t
C:\Users\TGSPOC~1\AppData\Local\Temp\ccIEf4ZZ.s:4301   .text.HAL_RTCEx_PollForAlarmBEvent:00000000 HAL_RTCEx_PollForAlarmBEvent

UNDEFINED SYMBOLS
RTC_Bcd2ToByte
HAL_GetTick
HAL_RTC_WaitForSynchro
RTC_EnterInitMode
RTC_ExitInitMode

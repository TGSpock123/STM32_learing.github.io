ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\cctICao5.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.file 1 "Core/Src/main.c"
  19              		.section	.text.main,"ax",%progbits
  20              		.align	1
  21              		.global	main
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	main:
  27              	.LFB148:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "cmsis_os.h"
  22:Core/Src/main.c **** #include "dma.h"
  23:Core/Src/main.c **** #include "i2c.h"
  24:Core/Src/main.c **** #include "memorymap.h"
  25:Core/Src/main.c **** #include "quadspi.h"
  26:Core/Src/main.c **** #include "rtc.h"
  27:Core/Src/main.c **** #include "gpio.h"
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  30:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  31:Core/Src/main.c **** #include "driver_st77916.h"
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\cctICao5.s 			page 2


  32:Core/Src/main.c **** /* USER CODE END Includes */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  35:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* USER CODE END PTD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PD */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* USER CODE END PD */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  45:Core/Src/main.c **** /* USER CODE BEGIN PM */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE END PM */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* USER CODE BEGIN PV */
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* USER CODE END PV */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  56:Core/Src/main.c **** void SystemClock_Config(void);
  57:Core/Src/main.c **** static void MPU_Config(void);
  58:Core/Src/main.c **** void MX_FREERTOS_Init(void);
  59:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** /* USER CODE END PFP */
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  64:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** /* USER CODE END 0 */
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** /**
  69:Core/Src/main.c ****   * @brief  The application entry point.
  70:Core/Src/main.c ****   * @retval int
  71:Core/Src/main.c ****   */
  72:Core/Src/main.c **** int main(void)
  73:Core/Src/main.c **** {
  28              		.loc 1 73 1
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 00AF     		add	r7, sp, #0
  38              	.LCFI1:
  39              		.cfi_def_cfa_register 7
  74:Core/Src/main.c **** 
  75:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  76:Core/Src/main.c **** 
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\cctICao5.s 			page 3


  77:Core/Src/main.c ****   /* USER CODE END 1 */
  78:Core/Src/main.c **** 
  79:Core/Src/main.c ****   /* MPU Configuration--------------------------------------------------------*/
  80:Core/Src/main.c ****   MPU_Config();
  40              		.loc 1 80 3
  41 0004 FFF7FEFF 		bl	MPU_Config
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  85:Core/Src/main.c ****   HAL_Init();
  42              		.loc 1 85 3
  43 0008 FFF7FEFF 		bl	HAL_Init
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  88:Core/Src/main.c **** 
  89:Core/Src/main.c ****   /* USER CODE END Init */
  90:Core/Src/main.c **** 
  91:Core/Src/main.c ****   /* Configure the system clock */
  92:Core/Src/main.c ****   SystemClock_Config();
  44              		.loc 1 92 3
  45 000c FFF7FEFF 		bl	SystemClock_Config
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****   /* USER CODE END SysInit */
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****   /* Initialize all configured peripherals */
  99:Core/Src/main.c ****   MX_GPIO_Init();
  46              		.loc 1 99 3
  47 0010 FFF7FEFF 		bl	MX_GPIO_Init
 100:Core/Src/main.c ****   MX_DMA_Init();
  48              		.loc 1 100 3
  49 0014 FFF7FEFF 		bl	MX_DMA_Init
 101:Core/Src/main.c ****   MX_RTC_Init();
  50              		.loc 1 101 3
  51 0018 FFF7FEFF 		bl	MX_RTC_Init
 102:Core/Src/main.c ****   MX_I2C3_Init();
  52              		.loc 1 102 3
  53 001c FFF7FEFF 		bl	MX_I2C3_Init
 103:Core/Src/main.c ****   MX_QUADSPI_Init();
  54              		.loc 1 103 3
  55 0020 FFF7FEFF 		bl	MX_QUADSPI_Init
 104:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 105:Core/Src/main.c ****   driver_st77916_init();
  56              		.loc 1 105 3
  57 0024 FFF7FEFF 		bl	driver_st77916_init
 106:Core/Src/main.c ****   /* USER CODE END 2 */
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****   /* Init scheduler */
 109:Core/Src/main.c ****   osKernelInitialize();
  58              		.loc 1 109 3
  59 0028 FFF7FEFF 		bl	osKernelInitialize
 110:Core/Src/main.c **** 
 111:Core/Src/main.c ****   /* Call init function for freertos objects (in cmsis_os2.c) */
 112:Core/Src/main.c ****   MX_FREERTOS_Init();
  60              		.loc 1 112 3
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\cctICao5.s 			page 4


  61 002c FFF7FEFF 		bl	MX_FREERTOS_Init
 113:Core/Src/main.c **** 
 114:Core/Src/main.c ****   /* Start scheduler */
 115:Core/Src/main.c ****   osKernelStart();
  62              		.loc 1 115 3
  63 0030 FFF7FEFF 		bl	osKernelStart
  64              	.L2:
 116:Core/Src/main.c **** 
 117:Core/Src/main.c ****   /* We should never get here as control is now taken by the scheduler */
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****   /* Infinite loop */
 120:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 121:Core/Src/main.c ****   while (1)
  65              		.loc 1 121 9
  66 0034 00BF     		nop
  67 0036 FDE7     		b	.L2
  68              		.cfi_endproc
  69              	.LFE148:
  71              		.section	.text.SystemClock_Config,"ax",%progbits
  72              		.align	1
  73              		.global	SystemClock_Config
  74              		.syntax unified
  75              		.thumb
  76              		.thumb_func
  78              	SystemClock_Config:
  79              	.LFB149:
 122:Core/Src/main.c ****   {
 123:Core/Src/main.c ****     /* USER CODE END WHILE */
 124:Core/Src/main.c **** 
 125:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 126:Core/Src/main.c ****   }
 127:Core/Src/main.c ****   /* USER CODE END 3 */
 128:Core/Src/main.c **** }
 129:Core/Src/main.c **** 
 130:Core/Src/main.c **** /**
 131:Core/Src/main.c ****   * @brief System Clock Configuration
 132:Core/Src/main.c ****   * @retval None
 133:Core/Src/main.c ****   */
 134:Core/Src/main.c **** void SystemClock_Config(void)
 135:Core/Src/main.c **** {
  80              		.loc 1 135 1
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 112
  83              		@ frame_needed = 1, uses_anonymous_args = 0
  84 0000 80B5     		push	{r7, lr}
  85              	.LCFI2:
  86              		.cfi_def_cfa_offset 8
  87              		.cfi_offset 7, -8
  88              		.cfi_offset 14, -4
  89 0002 9CB0     		sub	sp, sp, #112
  90              	.LCFI3:
  91              		.cfi_def_cfa_offset 120
  92 0004 00AF     		add	r7, sp, #0
  93              	.LCFI4:
  94              		.cfi_def_cfa_register 7
 136:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  95              		.loc 1 136 22
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\cctICao5.s 			page 5


  96 0006 07F12403 		add	r3, r7, #36
  97 000a 4C22     		movs	r2, #76
  98 000c 0021     		movs	r1, #0
  99 000e 1846     		mov	r0, r3
 100 0010 FFF7FEFF 		bl	memset
 137:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 101              		.loc 1 137 22
 102 0014 3B1D     		adds	r3, r7, #4
 103 0016 2022     		movs	r2, #32
 104 0018 0021     		movs	r1, #0
 105 001a 1846     		mov	r0, r3
 106 001c FFF7FEFF 		bl	memset
 138:Core/Src/main.c **** 
 139:Core/Src/main.c ****   /** Supply configuration update enable
 140:Core/Src/main.c ****   */
 141:Core/Src/main.c ****   HAL_PWREx_ConfigSupply(PWR_LDO_SUPPLY);
 107              		.loc 1 141 3
 108 0020 0220     		movs	r0, #2
 109 0022 FFF7FEFF 		bl	HAL_PWREx_ConfigSupply
 110              	.LBB4:
 142:Core/Src/main.c **** 
 143:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 144:Core/Src/main.c ****   */
 145:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE0);
 111              		.loc 1 145 3
 112 0026 0023     		movs	r3, #0
 113 0028 3B60     		str	r3, [r7]
 114              		.loc 1 145 3 is_stmt 0 discriminator 1
 115 002a 314B     		ldr	r3, .L8
 116 002c 9B69     		ldr	r3, [r3, #24]
 117 002e 304A     		ldr	r2, .L8
 118 0030 43F44043 		orr	r3, r3, #49152
 119 0034 9361     		str	r3, [r2, #24]
 120 0036 2E4B     		ldr	r3, .L8
 121 0038 9B69     		ldr	r3, [r3, #24]
 122 003a 03F44043 		and	r3, r3, #49152
 123 003e 3B60     		str	r3, [r7]
 124 0040 2C4B     		ldr	r3, .L8+4
 125 0042 DB6A     		ldr	r3, [r3, #44]
 126 0044 2B4A     		ldr	r2, .L8+4
 127 0046 43F00103 		orr	r3, r3, #1
 128 004a D362     		str	r3, [r2, #44]
 129 004c 294B     		ldr	r3, .L8+4
 130 004e DB6A     		ldr	r3, [r3, #44]
 131 0050 03F00103 		and	r3, r3, #1
 132 0054 3B60     		str	r3, [r7]
 133              		.loc 1 145 3 discriminator 4
 134 0056 3B68     		ldr	r3, [r7]
 135              	.LBE4:
 146:Core/Src/main.c **** 
 147:Core/Src/main.c ****   while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
 136              		.loc 1 147 8 is_stmt 1
 137 0058 00BF     		nop
 138              	.L4:
 139              		.loc 1 147 10 discriminator 1
 140 005a 254B     		ldr	r3, .L8
 141 005c 9B69     		ldr	r3, [r3, #24]
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\cctICao5.s 			page 6


 142 005e 03F40053 		and	r3, r3, #8192
 143              		.loc 1 147 9 discriminator 1
 144 0062 B3F5005F 		cmp	r3, #8192
 145 0066 F8D1     		bne	.L4
 148:Core/Src/main.c **** 
 149:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 150:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 151:Core/Src/main.c ****   */
 152:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_LSI|RCC_OSCILLATORTYPE_HSE;
 146              		.loc 1 152 36
 147 0068 0923     		movs	r3, #9
 148 006a 7B62     		str	r3, [r7, #36]
 153:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 149              		.loc 1 153 30
 150 006c 4FF48033 		mov	r3, #65536
 151 0070 BB62     		str	r3, [r7, #40]
 154:Core/Src/main.c ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 152              		.loc 1 154 30
 153 0072 0123     		movs	r3, #1
 154 0074 BB63     		str	r3, [r7, #56]
 155:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 155              		.loc 1 155 34
 156 0076 0223     		movs	r3, #2
 157 0078 BB64     		str	r3, [r7, #72]
 156:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 158              		.loc 1 156 35
 159 007a 0223     		movs	r3, #2
 160 007c FB64     		str	r3, [r7, #76]
 157:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 5;
 161              		.loc 1 157 30
 162 007e 0523     		movs	r3, #5
 163 0080 3B65     		str	r3, [r7, #80]
 158:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 192;
 164              		.loc 1 158 30
 165 0082 C023     		movs	r3, #192
 166 0084 7B65     		str	r3, [r7, #84]
 159:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = 2;
 167              		.loc 1 159 30
 168 0086 0223     		movs	r3, #2
 169 0088 BB65     		str	r3, [r7, #88]
 160:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 170              		.loc 1 160 30
 171 008a 0223     		movs	r3, #2
 172 008c FB65     		str	r3, [r7, #92]
 161:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 173              		.loc 1 161 30
 174 008e 0223     		movs	r3, #2
 175 0090 3B66     		str	r3, [r7, #96]
 162:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_2;
 176              		.loc 1 162 32
 177 0092 0823     		movs	r3, #8
 178 0094 7B66     		str	r3, [r7, #100]
 163:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 179              		.loc 1 163 35
 180 0096 0023     		movs	r3, #0
 181 0098 BB66     		str	r3, [r7, #104]
 164:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLFRACN = 0;
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\cctICao5.s 			page 7


 182              		.loc 1 164 34
 183 009a 0023     		movs	r3, #0
 184 009c FB66     		str	r3, [r7, #108]
 165:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 185              		.loc 1 165 7
 186 009e 07F12403 		add	r3, r7, #36
 187 00a2 1846     		mov	r0, r3
 188 00a4 FFF7FEFF 		bl	HAL_RCC_OscConfig
 189 00a8 0346     		mov	r3, r0
 190              		.loc 1 165 6 discriminator 1
 191 00aa 002B     		cmp	r3, #0
 192 00ac 01D0     		beq	.L5
 166:Core/Src/main.c ****   {
 167:Core/Src/main.c ****     Error_Handler();
 193              		.loc 1 167 5
 194 00ae FFF7FEFF 		bl	Error_Handler
 195              	.L5:
 168:Core/Src/main.c ****   }
 169:Core/Src/main.c **** 
 170:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 171:Core/Src/main.c ****   */
 172:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 196              		.loc 1 172 31
 197 00b2 3F23     		movs	r3, #63
 198 00b4 7B60     		str	r3, [r7, #4]
 173:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
 174:Core/Src/main.c ****                               |RCC_CLOCKTYPE_D3PCLK1|RCC_CLOCKTYPE_D1PCLK1;
 175:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 199              		.loc 1 175 34
 200 00b6 0323     		movs	r3, #3
 201 00b8 BB60     		str	r3, [r7, #8]
 176:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 202              		.loc 1 176 35
 203 00ba 0023     		movs	r3, #0
 204 00bc FB60     		str	r3, [r7, #12]
 177:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV2;
 205              		.loc 1 177 35
 206 00be 0823     		movs	r3, #8
 207 00c0 3B61     		str	r3, [r7, #16]
 178:Core/Src/main.c ****   RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
 208              		.loc 1 178 36
 209 00c2 4023     		movs	r3, #64
 210 00c4 7B61     		str	r3, [r7, #20]
 179:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
 211              		.loc 1 179 36
 212 00c6 4023     		movs	r3, #64
 213 00c8 BB61     		str	r3, [r7, #24]
 180:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
 214              		.loc 1 180 36
 215 00ca 4FF48063 		mov	r3, #1024
 216 00ce FB61     		str	r3, [r7, #28]
 181:Core/Src/main.c ****   RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
 217              		.loc 1 181 36
 218 00d0 4023     		movs	r3, #64
 219 00d2 3B62     		str	r3, [r7, #32]
 182:Core/Src/main.c **** 
 183:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\cctICao5.s 			page 8


 220              		.loc 1 183 7
 221 00d4 3B1D     		adds	r3, r7, #4
 222 00d6 0421     		movs	r1, #4
 223 00d8 1846     		mov	r0, r3
 224 00da FFF7FEFF 		bl	HAL_RCC_ClockConfig
 225 00de 0346     		mov	r3, r0
 226              		.loc 1 183 6 discriminator 1
 227 00e0 002B     		cmp	r3, #0
 228 00e2 01D0     		beq	.L7
 184:Core/Src/main.c ****   {
 185:Core/Src/main.c ****     Error_Handler();
 229              		.loc 1 185 5
 230 00e4 FFF7FEFF 		bl	Error_Handler
 231              	.L7:
 186:Core/Src/main.c ****   }
 187:Core/Src/main.c **** }
 232              		.loc 1 187 1
 233 00e8 00BF     		nop
 234 00ea 7037     		adds	r7, r7, #112
 235              	.LCFI5:
 236              		.cfi_def_cfa_offset 8
 237 00ec BD46     		mov	sp, r7
 238              	.LCFI6:
 239              		.cfi_def_cfa_register 13
 240              		@ sp needed
 241 00ee 80BD     		pop	{r7, pc}
 242              	.L9:
 243              		.align	2
 244              	.L8:
 245 00f0 00480258 		.word	1476544512
 246 00f4 00040058 		.word	1476396032
 247              		.cfi_endproc
 248              	.LFE149:
 250              		.section	.text.MPU_Config,"ax",%progbits
 251              		.align	1
 252              		.syntax unified
 253              		.thumb
 254              		.thumb_func
 256              	MPU_Config:
 257              	.LFB150:
 188:Core/Src/main.c **** 
 189:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 190:Core/Src/main.c **** 
 191:Core/Src/main.c **** /* USER CODE END 4 */
 192:Core/Src/main.c **** 
 193:Core/Src/main.c ****  /* MPU Configuration */
 194:Core/Src/main.c **** 
 195:Core/Src/main.c **** void MPU_Config(void)
 196:Core/Src/main.c **** {
 258              		.loc 1 196 1
 259              		.cfi_startproc
 260              		@ args = 0, pretend = 0, frame = 16
 261              		@ frame_needed = 1, uses_anonymous_args = 0
 262 0000 80B5     		push	{r7, lr}
 263              	.LCFI7:
 264              		.cfi_def_cfa_offset 8
 265              		.cfi_offset 7, -8
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\cctICao5.s 			page 9


 266              		.cfi_offset 14, -4
 267 0002 84B0     		sub	sp, sp, #16
 268              	.LCFI8:
 269              		.cfi_def_cfa_offset 24
 270 0004 00AF     		add	r7, sp, #0
 271              	.LCFI9:
 272              		.cfi_def_cfa_register 7
 197:Core/Src/main.c ****   MPU_Region_InitTypeDef MPU_InitStruct = {0};
 273              		.loc 1 197 26
 274 0006 3B46     		mov	r3, r7
 275 0008 0022     		movs	r2, #0
 276 000a 1A60     		str	r2, [r3]
 277 000c 5A60     		str	r2, [r3, #4]
 278 000e 9A60     		str	r2, [r3, #8]
 279 0010 DA60     		str	r2, [r3, #12]
 198:Core/Src/main.c **** 
 199:Core/Src/main.c ****   /* Disables the MPU */
 200:Core/Src/main.c ****   HAL_MPU_Disable();
 280              		.loc 1 200 3
 281 0012 FFF7FEFF 		bl	HAL_MPU_Disable
 201:Core/Src/main.c **** 
 202:Core/Src/main.c ****   /** Initializes and configures the Region and the memory to be protected
 203:Core/Src/main.c ****   */
 204:Core/Src/main.c ****   MPU_InitStruct.Enable = MPU_REGION_ENABLE;
 282              		.loc 1 204 25
 283 0016 0123     		movs	r3, #1
 284 0018 3B70     		strb	r3, [r7]
 205:Core/Src/main.c ****   MPU_InitStruct.Number = MPU_REGION_NUMBER0;
 285              		.loc 1 205 25
 286 001a 0023     		movs	r3, #0
 287 001c 7B70     		strb	r3, [r7, #1]
 206:Core/Src/main.c ****   MPU_InitStruct.BaseAddress = 0x0;
 288              		.loc 1 206 30
 289 001e 0023     		movs	r3, #0
 290 0020 7B60     		str	r3, [r7, #4]
 207:Core/Src/main.c ****   MPU_InitStruct.Size = MPU_REGION_SIZE_4GB;
 291              		.loc 1 207 23
 292 0022 1F23     		movs	r3, #31
 293 0024 3B72     		strb	r3, [r7, #8]
 208:Core/Src/main.c ****   MPU_InitStruct.SubRegionDisable = 0x87;
 294              		.loc 1 208 35
 295 0026 8723     		movs	r3, #135
 296 0028 7B72     		strb	r3, [r7, #9]
 209:Core/Src/main.c ****   MPU_InitStruct.TypeExtField = MPU_TEX_LEVEL0;
 297              		.loc 1 209 31
 298 002a 0023     		movs	r3, #0
 299 002c BB72     		strb	r3, [r7, #10]
 210:Core/Src/main.c ****   MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
 300              		.loc 1 210 35
 301 002e 0023     		movs	r3, #0
 302 0030 FB72     		strb	r3, [r7, #11]
 211:Core/Src/main.c ****   MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_DISABLE;
 303              		.loc 1 211 30
 304 0032 0123     		movs	r3, #1
 305 0034 3B73     		strb	r3, [r7, #12]
 212:Core/Src/main.c ****   MPU_InitStruct.IsShareable = MPU_ACCESS_SHAREABLE;
 306              		.loc 1 212 30
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\cctICao5.s 			page 10


 307 0036 0123     		movs	r3, #1
 308 0038 7B73     		strb	r3, [r7, #13]
 213:Core/Src/main.c ****   MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
 309              		.loc 1 213 30
 310 003a 0023     		movs	r3, #0
 311 003c BB73     		strb	r3, [r7, #14]
 214:Core/Src/main.c ****   MPU_InitStruct.IsBufferable = MPU_ACCESS_NOT_BUFFERABLE;
 312              		.loc 1 214 31
 313 003e 0023     		movs	r3, #0
 314 0040 FB73     		strb	r3, [r7, #15]
 215:Core/Src/main.c **** 
 216:Core/Src/main.c ****   HAL_MPU_ConfigRegion(&MPU_InitStruct);
 315              		.loc 1 216 3
 316 0042 3B46     		mov	r3, r7
 317 0044 1846     		mov	r0, r3
 318 0046 FFF7FEFF 		bl	HAL_MPU_ConfigRegion
 217:Core/Src/main.c ****   /* Enables the MPU */
 218:Core/Src/main.c ****   HAL_MPU_Enable(MPU_PRIVILEGED_DEFAULT);
 319              		.loc 1 218 3
 320 004a 0420     		movs	r0, #4
 321 004c FFF7FEFF 		bl	HAL_MPU_Enable
 219:Core/Src/main.c **** 
 220:Core/Src/main.c **** }
 322              		.loc 1 220 1
 323 0050 00BF     		nop
 324 0052 1037     		adds	r7, r7, #16
 325              	.LCFI10:
 326              		.cfi_def_cfa_offset 8
 327 0054 BD46     		mov	sp, r7
 328              	.LCFI11:
 329              		.cfi_def_cfa_register 13
 330              		@ sp needed
 331 0056 80BD     		pop	{r7, pc}
 332              		.cfi_endproc
 333              	.LFE150:
 335              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 336              		.align	1
 337              		.global	HAL_TIM_PeriodElapsedCallback
 338              		.syntax unified
 339              		.thumb
 340              		.thumb_func
 342              	HAL_TIM_PeriodElapsedCallback:
 343              	.LFB151:
 221:Core/Src/main.c **** 
 222:Core/Src/main.c **** /**
 223:Core/Src/main.c ****   * @brief  Period elapsed callback in non blocking mode
 224:Core/Src/main.c ****   * @note   This function is called  when TIM6 interrupt took place, inside
 225:Core/Src/main.c ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 226:Core/Src/main.c ****   * a global variable "uwTick" used as application time base.
 227:Core/Src/main.c ****   * @param  htim : TIM handle
 228:Core/Src/main.c ****   * @retval None
 229:Core/Src/main.c ****   */
 230:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 231:Core/Src/main.c **** {
 344              		.loc 1 231 1
 345              		.cfi_startproc
 346              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\cctICao5.s 			page 11


 347              		@ frame_needed = 1, uses_anonymous_args = 0
 348 0000 80B5     		push	{r7, lr}
 349              	.LCFI12:
 350              		.cfi_def_cfa_offset 8
 351              		.cfi_offset 7, -8
 352              		.cfi_offset 14, -4
 353 0002 82B0     		sub	sp, sp, #8
 354              	.LCFI13:
 355              		.cfi_def_cfa_offset 16
 356 0004 00AF     		add	r7, sp, #0
 357              	.LCFI14:
 358              		.cfi_def_cfa_register 7
 359 0006 7860     		str	r0, [r7, #4]
 232:Core/Src/main.c ****   /* USER CODE BEGIN Callback 0 */
 233:Core/Src/main.c **** 
 234:Core/Src/main.c ****   /* USER CODE END Callback 0 */
 235:Core/Src/main.c ****   if (htim->Instance == TIM6)
 360              		.loc 1 235 11
 361 0008 7B68     		ldr	r3, [r7, #4]
 362 000a 1B68     		ldr	r3, [r3]
 363              		.loc 1 235 6
 364 000c 044A     		ldr	r2, .L14
 365 000e 9342     		cmp	r3, r2
 366 0010 01D1     		bne	.L13
 236:Core/Src/main.c ****   {
 237:Core/Src/main.c ****     HAL_IncTick();
 367              		.loc 1 237 5
 368 0012 FFF7FEFF 		bl	HAL_IncTick
 369              	.L13:
 238:Core/Src/main.c ****   }
 239:Core/Src/main.c ****   /* USER CODE BEGIN Callback 1 */
 240:Core/Src/main.c **** 
 241:Core/Src/main.c ****   /* USER CODE END Callback 1 */
 242:Core/Src/main.c **** }
 370              		.loc 1 242 1
 371 0016 00BF     		nop
 372 0018 0837     		adds	r7, r7, #8
 373              	.LCFI15:
 374              		.cfi_def_cfa_offset 8
 375 001a BD46     		mov	sp, r7
 376              	.LCFI16:
 377              		.cfi_def_cfa_register 13
 378              		@ sp needed
 379 001c 80BD     		pop	{r7, pc}
 380              	.L15:
 381 001e 00BF     		.align	2
 382              	.L14:
 383 0020 00100040 		.word	1073745920
 384              		.cfi_endproc
 385              	.LFE151:
 387              		.section	.text.Error_Handler,"ax",%progbits
 388              		.align	1
 389              		.global	Error_Handler
 390              		.syntax unified
 391              		.thumb
 392              		.thumb_func
 394              	Error_Handler:
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\cctICao5.s 			page 12


 395              	.LFB152:
 243:Core/Src/main.c **** 
 244:Core/Src/main.c **** /**
 245:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 246:Core/Src/main.c ****   * @retval None
 247:Core/Src/main.c ****   */
 248:Core/Src/main.c **** void Error_Handler(void)
 249:Core/Src/main.c **** {
 396              		.loc 1 249 1
 397              		.cfi_startproc
 398              		@ args = 0, pretend = 0, frame = 0
 399              		@ frame_needed = 1, uses_anonymous_args = 0
 400              		@ link register save eliminated.
 401 0000 80B4     		push	{r7}
 402              	.LCFI17:
 403              		.cfi_def_cfa_offset 4
 404              		.cfi_offset 7, -4
 405 0002 00AF     		add	r7, sp, #0
 406              	.LCFI18:
 407              		.cfi_def_cfa_register 7
 408              	.LBB5:
 409              	.LBB6:
 410              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\cctICao5.s 			page 13


  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\cctICao5.s 			page 14


  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\cctICao5.s 			page 15


 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\cctICao5.s 			page 16


 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 411              		.loc 2 209 3
 412              		.syntax unified
 413              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 414 0004 72B6     		cpsid i
 415              	@ 0 "" 2
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 416              		.loc 2 210 1
 417              		.thumb
 418              		.syntax unified
 419 0006 00BF     		nop
 420              	.L17:
 421              	.LBE6:
 422              	.LBE5:
 250:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 251:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 252:Core/Src/main.c ****   __disable_irq();
 253:Core/Src/main.c ****   while (1)
 423              		.loc 1 253 9
 424 0008 00BF     		nop
 425 000a FDE7     		b	.L17
 426              		.cfi_endproc
 427              	.LFE152:
 429              		.text
 430              	.Letext0:
 431              		.file 3 "C:/gcc_vsc/arm_gcc/14.2 rel1/arm-none-eabi/include/machine/_default_types.h"
 432              		.file 4 "C:/gcc_vsc/arm_gcc/14.2 rel1/arm-none-eabi/include/sys/_stdint.h"
 433              		.file 5 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h743xx.h"
 434              		.file 6 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 435              		.file 7 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_rcc.h"
 436              		.file 8 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_dma.h"
 437              		.file 9 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_cortex.h"
 438              		.file 10 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_tim.h"
 439              		.file 11 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h"
 440              		.file 12 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
 441              		.file 13 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_pwr_ex.h"
 442              		.file 14 "BSP/ST77916/Inc/driver_st77916.h"
 443              		.file 15 "Core/Inc/quadspi.h"
 444              		.file 16 "Core/Inc/i2c.h"
 445              		.file 17 "Core/Inc/rtc.h"
 446              		.file 18 "Core/Inc/dma.h"
 447              		.file 19 "Core/Inc/gpio.h"
ARM GAS  C:\Users\TGSPOC~1\AppData\Local\Temp\cctICao5.s 			page 17


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\TGSPOC~1\AppData\Local\Temp\cctICao5.s:20     .text.main:00000000 $t
C:\Users\TGSPOC~1\AppData\Local\Temp\cctICao5.s:26     .text.main:00000000 main
C:\Users\TGSPOC~1\AppData\Local\Temp\cctICao5.s:256    .text.MPU_Config:00000000 MPU_Config
C:\Users\TGSPOC~1\AppData\Local\Temp\cctICao5.s:78     .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\TGSPOC~1\AppData\Local\Temp\cctICao5.s:72     .text.SystemClock_Config:00000000 $t
C:\Users\TGSPOC~1\AppData\Local\Temp\cctICao5.s:394    .text.Error_Handler:00000000 Error_Handler
C:\Users\TGSPOC~1\AppData\Local\Temp\cctICao5.s:245    .text.SystemClock_Config:000000f0 $d
C:\Users\TGSPOC~1\AppData\Local\Temp\cctICao5.s:251    .text.MPU_Config:00000000 $t
C:\Users\TGSPOC~1\AppData\Local\Temp\cctICao5.s:336    .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\TGSPOC~1\AppData\Local\Temp\cctICao5.s:342    .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\TGSPOC~1\AppData\Local\Temp\cctICao5.s:383    .text.HAL_TIM_PeriodElapsedCallback:00000020 $d
C:\Users\TGSPOC~1\AppData\Local\Temp\cctICao5.s:388    .text.Error_Handler:00000000 $t

UNDEFINED SYMBOLS
HAL_Init
MX_GPIO_Init
MX_DMA_Init
MX_RTC_Init
MX_I2C3_Init
MX_QUADSPI_Init
driver_st77916_init
osKernelInitialize
MX_FREERTOS_Init
osKernelStart
memset
HAL_PWREx_ConfigSupply
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_MPU_Disable
HAL_MPU_ConfigRegion
HAL_MPU_Enable
HAL_IncTick
